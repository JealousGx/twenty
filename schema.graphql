type Links {
  primaryLinkLabel: String
  primaryLinkUrl: String
  secondaryLinks: RawJSONScalar
}

"""
The `RawJSONScalar` scalar type represents JSON values, but stringifies inputs and parses outputs.
"""
scalar RawJSONScalar

type Currency {
  amountMicros: BigFloat
  currencyCode: String
}

"""A custom scalar type for representing big floating point numbers"""
scalar BigFloat

type FullName {
  firstName: String
  lastName: String
}

type Address {
  addressStreet1: String
  addressStreet2: String
  addressCity: String
  addressPostcode: String
  addressState: String
  addressCountry: String
  addressLat: BigFloat
  addressLng: BigFloat
}

type Actor {
  source: ActorSourceEnum
  workspaceMemberId: UUID
  name: String
  context: RawJSONScalar
}

enum ActorSourceEnum {
  """email"""
  EMAIL

  """calendar"""
  CALENDAR

  """workflow"""
  WORKFLOW

  """api"""
  API

  """import"""
  IMPORT

  """manual"""
  MANUAL

  """system"""
  SYSTEM

  """webhook"""
  WEBHOOK
}

"""A UUID scalar type"""
scalar UUID

type Emails {
  primaryEmail: String
  additionalEmails: RawJSONScalar
}

type Phones {
  primaryPhoneNumber: String
  primaryPhoneCountryCode: String
  primaryPhoneCallingCode: String
  additionalPhones: RawJSONScalar
}

type RichTextV2 {
  blocknote: String
  markdown: String
}

"""An API key"""
type ApiKey {
  """ApiKey name"""
  name: String

  """ApiKey expiration date"""
  expiresAt: DateTime

  """ApiKey revocation date"""
  revokedAt: DateTime

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""An attachment"""
type Attachment {
  """Attachment name"""
  name: String

  """Attachment full path"""
  fullPath: String

  """Attachment type"""
  type: String

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Attachment author"""
  authorId: ID

  """Attachment author"""
  author: WorkspaceMember

  """Attachment task"""
  taskId: ID

  """Attachment task"""
  task: Task

  """Attachment note"""
  noteId: ID

  """Attachment note"""
  note: Note

  """Attachment person"""
  personId: ID

  """Attachment person"""
  person: Person

  """Attachment company"""
  companyId: ID

  """Attachment company"""
  company: Company

  """Attachment opportunity"""
  opportunityId: ID

  """Attachment opportunity"""
  opportunity: Opportunity

  """Attachments Rocket"""
  rocketId: ID

  """Attachments Rocket"""
  rocket: Rocket

  """Attachments Pet"""
  petId: ID

  """Attachments Pet"""
  pet: Pet

  """Attachments Survey result"""
  surveyResultId: ID

  """Attachments Survey result"""
  surveyResult: SurveyResult
}

type Pet {
  coco: String

  """Id"""
  id: UUID

  """Name"""
  name: String

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Deletion date"""
  deletedAt: DateTime

  """The creator of the record"""
  createdBy: Actor

  """Position"""
  position: Position

  """Field used for full-text search"""
  searchVector: TSVector
  species: PetSpeciesEnum
  traits: [PetTraitsEnum]
  comments: String
  age: Float
  location: Address
  vetPhone: Phones
  vetEmail: Emails
  birthday: DateTime
  isGoodWithKids: Boolean
  pictures: Links
  averageCostOfKibblePerMonth: Currency
  makesOwnerThinkOf: FullName
  soundSwag: PetSoundSwagEnum
  bio: String
  interestingFacts: [String]
  extraData: RawJSONScalar

  """TimelineActivities tied to the Pet"""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection

  """TaskTargets tied to the Pet"""
  taskTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: TaskTargetFilterInput, orderBy: [TaskTargetOrderByInput]): TaskTargetConnection

  """NoteTargets tied to the Pet"""
  noteTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: NoteTargetFilterInput, orderBy: [NoteTargetOrderByInput]): NoteTargetConnection

  """Favorites tied to the Pet"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """Attachments tied to the Pet"""
  attachments(first: Int, last: Int, before: String, after: String, limit: Int, filter: AttachmentFilterInput, orderBy: [AttachmentOrderByInput]): AttachmentConnection
}

"""A custom scalar type for representing record position in a list"""
scalar Position

"""A custom scalar type for PostgreSQL tsvector fields"""
scalar TSVector

enum PetSpeciesEnum {
  """Dog"""
  DOG

  """Cat"""
  CAT

  """Bird"""
  BIRD

  """Fish"""
  FISH

  """Rabbit"""
  RABBIT

  """Hamster"""
  HAMSTER
}

enum PetTraitsEnum {
  """Playful"""
  PLAYFUL

  """Friendly"""
  FRIENDLY

  """Protective"""
  PROTECTIVE

  """Shy"""
  SHY

  """Brave"""
  BRAVE

  """Curious"""
  CURIOUS
}

enum PetSoundSwagEnum {
  """1"""
  RATING_1

  """2"""
  RATING_2

  """3"""
  RATING_3

  """4"""
  RATING_4

  """5"""
  RATING_5
}

"""Blocklist"""
type Blocklist {
  """Handle"""
  handle: String

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """WorkspaceMember"""
  workspaceMemberId: ID

  """WorkspaceMember"""
  workspaceMember: WorkspaceMember
}

"""Calendar events"""
type CalendarEvent {
  """Title"""
  title: String

  """Is canceled"""
  isCanceled: Boolean

  """Is Full Day"""
  isFullDay: Boolean

  """Start Date"""
  startsAt: DateTime

  """End Date"""
  endsAt: DateTime

  """Creation DateTime"""
  externalCreatedAt: DateTime

  """Update DateTime"""
  externalUpdatedAt: DateTime

  """Description"""
  description: String

  """Location"""
  location: String

  """iCal UID"""
  iCalUID: String

  """Conference Solution"""
  conferenceSolution: String

  """Meet Link"""
  conferenceLink: Links

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Calendar Channel Event Associations"""
  calendarChannelEventAssociations(first: Int, last: Int, before: String, after: String, limit: Int, filter: CalendarChannelEventAssociationFilterInput, orderBy: [CalendarChannelEventAssociationOrderByInput]): CalendarChannelEventAssociationConnection

  """Event Participants"""
  calendarEventParticipants(first: Int, last: Int, before: String, after: String, limit: Int, filter: CalendarEventParticipantFilterInput, orderBy: [CalendarEventParticipantOrderByInput]): CalendarEventParticipantConnection
}

"""Calendar Channels"""
type CalendarChannel {
  """Handle"""
  handle: String

  """Sync status"""
  syncStatus: CalendarChannelSyncStatusEnum

  """Sync stage"""
  syncStage: CalendarChannelSyncStageEnum

  """Visibility"""
  visibility: CalendarChannelVisibilityEnum

  """Is Contact Auto Creation Enabled"""
  isContactAutoCreationEnabled: Boolean

  """
  Automatically create records for people you participated with in an event.
  """
  contactAutoCreationPolicy: CalendarChannelContactAutoCreationPolicyEnum

  """Is Sync Enabled"""
  isSyncEnabled: Boolean

  """Sync Cursor. Used for syncing events from the calendar provider"""
  syncCursor: String

  """Last sync date"""
  syncedAt: DateTime

  """Sync stage started at"""
  syncStageStartedAt: DateTime

  """Throttle Failure Count"""
  throttleFailureCount: Float

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Connected Account"""
  connectedAccountId: ID

  """Connected Account"""
  connectedAccount: ConnectedAccount

  """Calendar Channel Event Associations"""
  calendarChannelEventAssociations(first: Int, last: Int, before: String, after: String, limit: Int, filter: CalendarChannelEventAssociationFilterInput, orderBy: [CalendarChannelEventAssociationOrderByInput]): CalendarChannelEventAssociationConnection
}

"""Sync status"""
enum CalendarChannelSyncStatusEnum {
  """Ongoing"""
  ONGOING

  """Not Synced"""
  NOT_SYNCED

  """Active"""
  ACTIVE

  """Failed Insufficient Permissions"""
  FAILED_INSUFFICIENT_PERMISSIONS

  """Failed Unknown"""
  FAILED_UNKNOWN
}

"""Sync stage"""
enum CalendarChannelSyncStageEnum {
  """Full calendar event list fetch pending"""
  FULL_CALENDAR_EVENT_LIST_FETCH_PENDING

  """Partial calendar event list fetch pending"""
  PARTIAL_CALENDAR_EVENT_LIST_FETCH_PENDING

  """Calendar event list fetch ongoing"""
  CALENDAR_EVENT_LIST_FETCH_ONGOING

  """Calendar events import pending"""
  CALENDAR_EVENTS_IMPORT_PENDING

  """Calendar events import ongoing"""
  CALENDAR_EVENTS_IMPORT_ONGOING

  """Failed"""
  FAILED
}

"""Visibility"""
enum CalendarChannelVisibilityEnum {
  """Metadata"""
  METADATA

  """Share Everything"""
  SHARE_EVERYTHING
}

"""
Automatically create records for people you participated with in an event.
"""
enum CalendarChannelContactAutoCreationPolicyEnum {
  """As Participant and Organizer"""
  AS_PARTICIPANT_AND_ORGANIZER

  """As Participant"""
  AS_PARTICIPANT

  """As Organizer"""
  AS_ORGANIZER

  """None"""
  NONE
}

"""Calendar Channel Event Associations"""
type CalendarChannelEventAssociation {
  """Event external ID"""
  eventExternalId: String

  """Recurring Event ID"""
  recurringEventExternalId: String

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Channel ID"""
  calendarChannelId: ID

  """Channel ID"""
  calendarChannel: CalendarChannel

  """Event ID"""
  calendarEventId: ID

  """Event ID"""
  calendarEvent: CalendarEvent
}

"""Calendar event participants"""
type CalendarEventParticipant {
  """Handle"""
  handle: String

  """Display Name"""
  displayName: String

  """Is Organizer"""
  isOrganizer: Boolean

  """Response Status"""
  responseStatus: CalendarEventParticipantResponseStatusEnum

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Event ID"""
  calendarEventId: ID

  """Event ID"""
  calendarEvent: CalendarEvent

  """Person"""
  personId: ID

  """Person"""
  person: Person

  """Workspace Member"""
  workspaceMemberId: ID

  """Workspace Member"""
  workspaceMember: WorkspaceMember
}

"""Response Status"""
enum CalendarEventParticipantResponseStatusEnum {
  """Needs Action"""
  NEEDS_ACTION

  """Declined"""
  DECLINED

  """Tentative"""
  TENTATIVE

  """Accepted"""
  ACCEPTED
}

"""A company"""
type Company {
  """The company name"""
  name: String

  """The company website URL. We use this url to fetch the company icon"""
  domainName: Links

  """Number of employees in the company"""
  employees: Float

  """The company Linkedin account"""
  linkedinLink: Links

  """The company Twitter/X account"""
  xLink: Links

  """
  Annual Recurring Revenue: The actual or estimated annual revenue of the company
  """
  annualRecurringRevenue: Currency

  """Address of the company"""
  address: Address

  """
  Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you
  """
  idealCustomerProfile: Boolean

  """Company record position"""
  position: Position

  """The creator of the record"""
  createdBy: Actor

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Your team member responsible for managing the company account"""
  accountOwnerId: ID

  """Your team member responsible for managing the company account"""
  accountOwner: WorkspaceMember
  tagline: String
  introVideo: Links
  workPolicy: [CompanyWorkPolicyEnum]
  visaSponsorship: Boolean

  """People linked to the company."""
  people(first: Int, last: Int, before: String, after: String, limit: Int, filter: PersonFilterInput, orderBy: [PersonOrderByInput]): PersonConnection

  """Tasks tied to the company"""
  taskTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: TaskTargetFilterInput, orderBy: [TaskTargetOrderByInput]): TaskTargetConnection

  """Notes tied to the company"""
  noteTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: NoteTargetFilterInput, orderBy: [NoteTargetOrderByInput]): NoteTargetConnection

  """Opportunities linked to the company."""
  opportunities(first: Int, last: Int, before: String, after: String, limit: Int, filter: OpportunityFilterInput, orderBy: [OpportunityOrderByInput]): OpportunityConnection

  """Favorites linked to the company"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """Attachments linked to the company"""
  attachments(first: Int, last: Int, before: String, after: String, limit: Int, filter: AttachmentFilterInput, orderBy: [AttachmentOrderByInput]): AttachmentConnection

  """Timeline Activities linked to the company"""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection
}

enum CompanyWorkPolicyEnum {
  """On-Site"""
  ON_SITE

  """Hybrid"""
  HYBRID

  """Remote Work"""
  REMOTE_WORK
}

"""A connected account"""
type ConnectedAccount {
  """The account handle (email, username, phone number, etc.)"""
  handle: String

  """The account provider"""
  provider: String

  """Messaging provider access token"""
  accessToken: String

  """Messaging provider refresh token"""
  refreshToken: String

  """Last sync history ID"""
  lastSyncHistoryId: String

  """Auth failed at"""
  authFailedAt: DateTime

  """Handle Aliases"""
  handleAliases: String

  """Scopes"""
  scopes: [String]

  """JSON object containing custom connection parameters"""
  connectionParameters: RawJSONScalar

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Account Owner"""
  accountOwnerId: ID

  """Account Owner"""
  accountOwner: WorkspaceMember

  """Message Channels"""
  messageChannels(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageChannelFilterInput, orderBy: [MessageChannelOrderByInput]): MessageChannelConnection

  """Calendar Channels"""
  calendarChannels(first: Int, last: Int, before: String, after: String, limit: Int, filter: CalendarChannelFilterInput, orderBy: [CalendarChannelOrderByInput]): CalendarChannelConnection
}

"""A favorite that can be accessed from the left menu"""
type Favorite {
  """Favorite position"""
  position: Float

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Favorite task"""
  taskId: ID

  """Favorite task"""
  task: Task

  """Favorite note"""
  noteId: ID

  """Favorite note"""
  note: Note

  """Favorite workspace member"""
  forWorkspaceMemberId: ID

  """Favorite workspace member"""
  forWorkspaceMember: WorkspaceMember

  """Favorite person"""
  personId: ID

  """Favorite person"""
  person: Person

  """Favorite company"""
  companyId: ID

  """Favorite company"""
  company: Company

  """The folder this favorite belongs to"""
  favoriteFolderId: ID

  """The folder this favorite belongs to"""
  favoriteFolder: FavoriteFolder

  """Favorite opportunity"""
  opportunityId: ID

  """Favorite opportunity"""
  opportunity: Opportunity

  """Favorite workflow"""
  workflowId: ID

  """Favorite workflow"""
  workflow: Workflow

  """Favorite workflow version"""
  workflowVersionId: ID

  """Favorite workflow version"""
  workflowVersion: WorkflowVersion

  """Favorite workflow run"""
  workflowRunId: ID

  """Favorite workflow run"""
  workflowRun: WorkflowRun

  """Favorite view"""
  viewId: ID

  """Favorite view"""
  view: View

  """Favorites Rocket"""
  rocketId: ID

  """Favorites Rocket"""
  rocket: Rocket

  """Favorites Pet"""
  petId: ID

  """Favorites Pet"""
  pet: Pet

  """Favorites Survey result"""
  surveyResultId: ID

  """Favorites Survey result"""
  surveyResult: SurveyResult
}

"""A Folder of favorites"""
type FavoriteFolder {
  """Favorite folder position"""
  position: Float

  """Name of the favorite folder"""
  name: String

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Favorites in this folder"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection
}

"""Aggregated / filtered event to be displayed on the timeline"""
type TimelineActivity {
  """Creation date"""
  happensAt: DateTime

  """Event name"""
  name: String

  """Json value for event details"""
  properties: RawJSONScalar

  """Cached record name"""
  linkedRecordCachedName: String

  """Linked Record id"""
  linkedRecordId: UUID

  """Linked Object Metadata Id"""
  linkedObjectMetadataId: UUID

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Event workspace member"""
  workspaceMemberId: ID

  """Event workspace member"""
  workspaceMember: WorkspaceMember

  """Event person"""
  personId: ID

  """Event person"""
  person: Person

  """Event company"""
  companyId: ID

  """Event company"""
  company: Company

  """Event opportunity"""
  opportunityId: ID

  """Event opportunity"""
  opportunity: Opportunity

  """Event note"""
  noteId: ID

  """Event note"""
  note: Note

  """Event task"""
  taskId: ID

  """Event task"""
  task: Task

  """Event workflow"""
  workflowId: ID

  """Event workflow"""
  workflow: Workflow

  """Event workflow version"""
  workflowVersionId: ID

  """Event workflow version"""
  workflowVersion: WorkflowVersion

  """Event workflow run"""
  workflowRunId: ID

  """Event workflow run"""
  workflowRun: WorkflowRun

  """TimelineActivities Rocket"""
  rocketId: ID

  """TimelineActivities Rocket"""
  rocket: Rocket

  """TimelineActivities Pet"""
  petId: ID

  """TimelineActivities Pet"""
  pet: Pet

  """TimelineActivities Survey result"""
  surveyResultId: ID

  """TimelineActivities Survey result"""
  surveyResult: SurveyResult
}

"""(System) View Fields"""
type ViewField {
  """View Field target field"""
  fieldMetadataId: UUID

  """View Field visibility"""
  isVisible: Boolean

  """View Field size"""
  size: Float

  """View Field position"""
  position: Float

  """Optional aggregate operation"""
  aggregateOperation: ViewFieldAggregateOperationEnum

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Field related view"""
  viewId: ID

  """View Field related view"""
  view: View
}

"""Optional aggregate operation"""
enum ViewFieldAggregateOperationEnum {
  """Average"""
  AVG

  """Count"""
  COUNT

  """Maximum"""
  MAX

  """Minimum"""
  MIN

  """Sum"""
  SUM

  """Count empty"""
  COUNT_EMPTY

  """Count not empty"""
  COUNT_NOT_EMPTY

  """Count unique values"""
  COUNT_UNIQUE_VALUES

  """Percent empty"""
  PERCENTAGE_EMPTY

  """Percent not empty"""
  PERCENTAGE_NOT_EMPTY

  """Count true"""
  COUNT_TRUE

  """Count false"""
  COUNT_FALSE
}

"""(System) View Filter Groups"""
type ViewFilterGroup {
  """Logical operator for the filter group"""
  logicalOperator: ViewFilterGroupLogicalOperatorEnum

  """Position in the parent view filter group"""
  positionInViewFilterGroup: Float

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Parent View Filter Group"""
  parentViewFilterGroupId: UUID

  """View"""
  viewId: ID

  """View"""
  view: View
}

"""Logical operator for the filter group"""
enum ViewFilterGroupLogicalOperatorEnum {
  """AND"""
  AND

  """OR"""
  OR

  """NOT"""
  NOT
}

"""(System) View Groups"""
type ViewGroup {
  """View Group target field"""
  fieldMetadataId: UUID

  """View Group visibility"""
  isVisible: Boolean

  """Group by this field value"""
  fieldValue: String

  """View Field position"""
  position: Float

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Group related view"""
  viewId: ID

  """View Group related view"""
  view: View
}

"""(System) View Filters"""
type ViewFilter {
  """View Filter target field"""
  fieldMetadataId: UUID

  """View Filter operand"""
  operand: String

  """View Filter value"""
  value: String

  """View Filter Display Value"""
  displayValue: String

  """View Filter Group"""
  viewFilterGroupId: UUID

  """Position in the view filter group"""
  positionInViewFilterGroup: Float

  """Sub field name"""
  subFieldName: String

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Filter related view"""
  viewId: ID

  """View Filter related view"""
  view: View
}

"""(System) View Sorts"""
type ViewSort {
  """View Sort target field"""
  fieldMetadataId: UUID

  """View Sort direction"""
  direction: String

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Sort related view"""
  viewId: ID

  """View Sort related view"""
  view: View
}

"""(System) Views"""
type View {
  """View name"""
  name: String

  """View target object"""
  objectMetadataId: UUID

  """View type"""
  type: String

  """View key"""
  key: ViewKeyEnum

  """View icon"""
  icon: String

  """View Kanban column field"""
  kanbanFieldMetadataId: String

  """View position"""
  position: Position

  """Describes if the view is in compact mode"""
  isCompact: Boolean

  """Display the records in a side panel or in a record page"""
  openRecordIn: ViewOpenRecordInEnum

  """Optional aggregate operation"""
  kanbanAggregateOperation: ViewKanbanAggregateOperationEnum

  """Field metadata used for aggregate operation"""
  kanbanAggregateOperationFieldMetadataId: UUID

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Fields"""
  viewFields(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewFieldFilterInput, orderBy: [ViewFieldOrderByInput]): ViewFieldConnection

  """View Groups"""
  viewGroups(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewGroupFilterInput, orderBy: [ViewGroupOrderByInput]): ViewGroupConnection

  """View Filters"""
  viewFilters(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewFilterFilterInput, orderBy: [ViewFilterOrderByInput]): ViewFilterConnection

  """View Filter Groups"""
  viewFilterGroups(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewFilterGroupFilterInput, orderBy: [ViewFilterGroupOrderByInput]): ViewFilterGroupConnection

  """View Sorts"""
  viewSorts(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewSortFilterInput, orderBy: [ViewSortOrderByInput]): ViewSortConnection

  """Favorites linked to the view"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection
}

"""View key"""
enum ViewKeyEnum {
  """Index"""
  INDEX
}

"""Display the records in a side panel or in a record page"""
enum ViewOpenRecordInEnum {
  """Side Panel"""
  SIDE_PANEL

  """Record Page"""
  RECORD_PAGE
}

"""Optional aggregate operation"""
enum ViewKanbanAggregateOperationEnum {
  """Average"""
  AVG

  """Count"""
  COUNT

  """Maximum"""
  MAX

  """Minimum"""
  MIN

  """Sum"""
  SUM

  """Count empty"""
  COUNT_EMPTY

  """Count not empty"""
  COUNT_NOT_EMPTY

  """Count unique values"""
  COUNT_UNIQUE_VALUES

  """Percent empty"""
  PERCENTAGE_EMPTY

  """Percent not empty"""
  PERCENTAGE_NOT_EMPTY

  """Count true"""
  COUNT_TRUE

  """Count false"""
  COUNT_FALSE
}

"""A webhook"""
type Webhook {
  """Webhook target url"""
  targetUrl: String

  """Webhook operations"""
  operations: [String]

  """"""
  description: String

  """
  Optional secret used to compute the HMAC signature for webhook payloads. This secret is shared between Twenty and the webhook consumer to authenticate webhook requests.
  """
  secret: String

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A workflow"""
type Workflow {
  """The workflow name"""
  name: String

  """The workflow last published version id"""
  lastPublishedVersionId: String

  """The current statuses of the workflow versions"""
  statuses: [WorkflowStatusesEnum]

  """Workflow record position"""
  position: Position

  """The creator of the record"""
  createdBy: Actor

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Workflow versions linked to the workflow."""
  versions(first: Int, last: Int, before: String, after: String, limit: Int, filter: WorkflowVersionFilterInput, orderBy: [WorkflowVersionOrderByInput]): WorkflowVersionConnection

  """Workflow runs linked to the workflow."""
  runs(first: Int, last: Int, before: String, after: String, limit: Int, filter: WorkflowRunFilterInput, orderBy: [WorkflowRunOrderByInput]): WorkflowRunConnection

  """Workflow automated triggers linked to the workflow."""
  automatedTriggers(first: Int, last: Int, before: String, after: String, limit: Int, filter: WorkflowAutomatedTriggerFilterInput, orderBy: [WorkflowAutomatedTriggerOrderByInput]): WorkflowAutomatedTriggerConnection

  """Favorites linked to the workflow"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """Timeline activities linked to the workflow"""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection
}

"""The current statuses of the workflow versions"""
enum WorkflowStatusesEnum {
  """Draft"""
  DRAFT

  """Active"""
  ACTIVE

  """Deactivated"""
  DEACTIVATED
}

"""A workflow version"""
type WorkflowVersion {
  """The workflow version name"""
  name: String

  """Json object to provide trigger"""
  trigger: RawJSONScalar

  """Json object to provide steps"""
  steps: RawJSONScalar

  """The workflow version status"""
  status: WorkflowVersionStatusEnum

  """Workflow version position"""
  position: Position

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """WorkflowVersion workflow"""
  workflowId: ID

  """WorkflowVersion workflow"""
  workflow: Workflow

  """Workflow runs linked to the version."""
  runs(first: Int, last: Int, before: String, after: String, limit: Int, filter: WorkflowRunFilterInput, orderBy: [WorkflowRunOrderByInput]): WorkflowRunConnection

  """Favorites linked to the workflow version"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """Timeline activities linked to the version"""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection
}

"""The workflow version status"""
enum WorkflowVersionStatusEnum {
  """Draft"""
  DRAFT

  """Active"""
  ACTIVE

  """Deactivated"""
  DEACTIVATED

  """Archived"""
  ARCHIVED
}

"""A workflow run"""
type WorkflowRun {
  """Name of the workflow run"""
  name: String

  """Workflow run started at"""
  startedAt: DateTime

  """Workflow run ended at"""
  endedAt: DateTime

  """Workflow run status"""
  status: WorkflowRunStatusEnum

  """The executor of the workflow"""
  createdBy: Actor

  """Json object to provide output of the workflow run"""
  output: RawJSONScalar

  """Context"""
  context: RawJSONScalar

  """Workflow run position"""
  position: Position

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Workflow version linked to the run."""
  workflowVersionId: ID

  """Workflow version linked to the run."""
  workflowVersion: WorkflowVersion

  """Workflow linked to the run."""
  workflowId: ID

  """Workflow linked to the run."""
  workflow: Workflow

  """Favorites linked to the workflow run"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """Timeline activities linked to the run"""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection
}

"""Workflow run status"""
enum WorkflowRunStatusEnum {
  """Not started"""
  NOT_STARTED

  """Running"""
  RUNNING

  """Completed"""
  COMPLETED

  """Failed"""
  FAILED
}

"""A workflow automated trigger"""
type WorkflowAutomatedTrigger {
  """The workflow automated trigger type"""
  type: WorkflowAutomatedTriggerTypeEnum

  """The workflow automated trigger settings"""
  settings: RawJSONScalar

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """WorkflowAutomatedTrigger workflow"""
  workflowId: ID

  """WorkflowAutomatedTrigger workflow"""
  workflow: Workflow
}

"""The workflow automated trigger type"""
enum WorkflowAutomatedTriggerTypeEnum {
  """Database Event"""
  DATABASE_EVENT

  """Cron"""
  CRON
}

"""A workspace member"""
type WorkspaceMember {
  """Workspace member position"""
  position: Position

  """Workspace member name"""
  name: FullName

  """Preferred color scheme"""
  colorScheme: String

  """Preferred language"""
  locale: String

  """Workspace member avatar"""
  avatarUrl: String

  """Related user email address"""
  userEmail: String

  """Associated User Id"""
  userId: UUID

  """User time zone"""
  timeZone: String

  """User's preferred date format"""
  dateFormat: WorkspaceMemberDateFormatEnum

  """User's preferred time format"""
  timeFormat: WorkspaceMemberTimeFormatEnum

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Tasks assigned to the workspace member"""
  assignedTasks(first: Int, last: Int, before: String, after: String, limit: Int, filter: TaskFilterInput, orderBy: [TaskOrderByInput]): TaskConnection

  """Favorites linked to the workspace member"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """Account owner for companies"""
  accountOwnerForCompanies(first: Int, last: Int, before: String, after: String, limit: Int, filter: CompanyFilterInput, orderBy: [CompanyOrderByInput]): CompanyConnection

  """Attachments created by the workspace member"""
  authoredAttachments(first: Int, last: Int, before: String, after: String, limit: Int, filter: AttachmentFilterInput, orderBy: [AttachmentOrderByInput]): AttachmentConnection

  """Connected accounts"""
  connectedAccounts(first: Int, last: Int, before: String, after: String, limit: Int, filter: ConnectedAccountFilterInput, orderBy: [ConnectedAccountOrderByInput]): ConnectedAccountConnection

  """Message Participants"""
  messageParticipants(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageParticipantFilterInput, orderBy: [MessageParticipantOrderByInput]): MessageParticipantConnection

  """Blocklisted handles"""
  blocklist(first: Int, last: Int, before: String, after: String, limit: Int, filter: BlocklistFilterInput, orderBy: [BlocklistOrderByInput]): BlocklistConnection

  """Calendar Event Participants"""
  calendarEventParticipants(first: Int, last: Int, before: String, after: String, limit: Int, filter: CalendarEventParticipantFilterInput, orderBy: [CalendarEventParticipantOrderByInput]): CalendarEventParticipantConnection

  """Events linked to the workspace member"""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection
}

"""User's preferred date format"""
enum WorkspaceMemberDateFormatEnum {
  """System"""
  SYSTEM

  """Month First"""
  MONTH_FIRST

  """Day First"""
  DAY_FIRST

  """Year First"""
  YEAR_FIRST
}

"""User's preferred time format"""
enum WorkspaceMemberTimeFormatEnum {
  """System"""
  SYSTEM

  """24HRS"""
  HOUR_24

  """12HRS"""
  HOUR_12
}

"""A note"""
type Note {
  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Note record position"""
  position: Position

  """Note title"""
  title: String

  """Note body"""
  body: String

  """Note body"""
  bodyV2: RichTextV2

  """The creator of the record"""
  createdBy: Actor

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Note targets"""
  noteTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: NoteTargetFilterInput, orderBy: [NoteTargetOrderByInput]): NoteTargetConnection

  """Note attachments"""
  attachments(first: Int, last: Int, before: String, after: String, limit: Int, filter: AttachmentFilterInput, orderBy: [AttachmentOrderByInput]): AttachmentConnection

  """Timeline Activities linked to the note."""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection

  """Favorites linked to the note"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection
}

"""A task target"""
type TaskTarget {
  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """TaskTarget task"""
  taskId: ID

  """TaskTarget task"""
  task: Task

  """TaskTarget person"""
  personId: ID

  """TaskTarget person"""
  person: Person

  """TaskTarget company"""
  companyId: ID

  """TaskTarget company"""
  company: Company

  """TaskTarget opportunity"""
  opportunityId: ID

  """TaskTarget opportunity"""
  opportunity: Opportunity

  """TaskTargets Rocket"""
  rocketId: ID

  """TaskTargets Rocket"""
  rocket: Rocket

  """TaskTargets Pet"""
  petId: ID

  """TaskTargets Pet"""
  pet: Pet

  """TaskTargets Survey result"""
  surveyResultId: ID

  """TaskTargets Survey result"""
  surveyResult: SurveyResult
}

"""A group of related messages (e.g. email thread, chat thread)"""
type MessageThread {
  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Messages from the thread."""
  messages(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageFilterInput, orderBy: [MessageOrderByInput]): MessageConnection
}

"""
A message sent or received through a messaging channel (email, chat, etc.)
"""
type Message {
  """Message id from the message header"""
  headerMessageId: String

  """Subject"""
  subject: String

  """Text"""
  text: String

  """The date the message was received"""
  receivedAt: DateTime

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message Thread Id"""
  messageThreadId: ID

  """Message Thread Id"""
  messageThread: MessageThread

  """Message Participants"""
  messageParticipants(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageParticipantFilterInput, orderBy: [MessageParticipantOrderByInput]): MessageParticipantConnection

  """Messages from the channel."""
  messageChannelMessageAssociations(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageChannelMessageAssociationFilterInput, orderBy: [MessageChannelMessageAssociationOrderByInput]): MessageChannelMessageAssociationConnection
}

"""Message Channels"""
type MessageChannel {
  """Visibility"""
  visibility: MessageChannelVisibilityEnum

  """Handle"""
  handle: String

  """Channel Type"""
  type: MessageChannelTypeEnum

  """Is Contact Auto Creation Enabled"""
  isContactAutoCreationEnabled: Boolean

  """Automatically create People records when receiving or sending emails"""
  contactAutoCreationPolicy: MessageChannelContactAutoCreationPolicyEnum

  """Exclude non professional emails"""
  excludeNonProfessionalEmails: Boolean

  """Exclude group emails"""
  excludeGroupEmails: Boolean

  """Is Sync Enabled"""
  isSyncEnabled: Boolean

  """Last sync cursor"""
  syncCursor: String

  """Last sync date"""
  syncedAt: DateTime

  """Sync status"""
  syncStatus: MessageChannelSyncStatusEnum

  """Sync stage"""
  syncStage: MessageChannelSyncStageEnum

  """Sync stage started at"""
  syncStageStartedAt: DateTime

  """Throttle Failure Count"""
  throttleFailureCount: Float

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Connected Account"""
  connectedAccountId: ID

  """Connected Account"""
  connectedAccount: ConnectedAccount

  """Messages from the channel."""
  messageChannelMessageAssociations(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageChannelMessageAssociationFilterInput, orderBy: [MessageChannelMessageAssociationOrderByInput]): MessageChannelMessageAssociationConnection

  """Message Folders"""
  messageFolders(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageFolderFilterInput, orderBy: [MessageFolderOrderByInput]): MessageFolderConnection
}

"""Visibility"""
enum MessageChannelVisibilityEnum {
  """Metadata"""
  METADATA

  """Subject"""
  SUBJECT

  """Share Everything"""
  SHARE_EVERYTHING
}

"""Channel Type"""
enum MessageChannelTypeEnum {
  """Email"""
  email

  """SMS"""
  sms
}

"""Automatically create People records when receiving or sending emails"""
enum MessageChannelContactAutoCreationPolicyEnum {
  """Sent and Received"""
  SENT_AND_RECEIVED

  """Sent"""
  SENT

  """None"""
  NONE
}

"""Sync status"""
enum MessageChannelSyncStatusEnum {
  """Ongoing"""
  ONGOING

  """Not Synced"""
  NOT_SYNCED

  """Active"""
  ACTIVE

  """Failed Insufficient Permissions"""
  FAILED_INSUFFICIENT_PERMISSIONS

  """Failed Unknown"""
  FAILED_UNKNOWN
}

"""Sync stage"""
enum MessageChannelSyncStageEnum {
  """Full messages list fetch pending"""
  FULL_MESSAGE_LIST_FETCH_PENDING

  """Partial messages list fetch pending"""
  PARTIAL_MESSAGE_LIST_FETCH_PENDING

  """Messages list fetch ongoing"""
  MESSAGE_LIST_FETCH_ONGOING

  """Messages import pending"""
  MESSAGES_IMPORT_PENDING

  """Messages import ongoing"""
  MESSAGES_IMPORT_ONGOING

  """Failed"""
  FAILED
}

"""Message Participants"""
type MessageParticipant {
  """Role"""
  role: MessageParticipantRoleEnum

  """Handle"""
  handle: String

  """Display Name"""
  displayName: String

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message"""
  messageId: ID

  """Message"""
  message: Message

  """Person"""
  personId: ID

  """Person"""
  person: Person

  """Workspace member"""
  workspaceMemberId: ID

  """Workspace member"""
  workspaceMember: WorkspaceMember
}

"""Role"""
enum MessageParticipantRoleEnum {
  """From"""
  from

  """To"""
  to

  """Cc"""
  cc

  """Bcc"""
  bcc
}

"""Folder for Message Channel"""
type MessageFolder {
  """Folder name"""
  name: String

  """Sync Cursor"""
  syncCursor: String

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message Channel"""
  messageChannelId: ID

  """Message Channel"""
  messageChannel: MessageChannel
}

"""Message Synced with a Message Channel"""
type MessageChannelMessageAssociation {
  """Message id from the messaging provider"""
  messageExternalId: String

  """Thread id from the messaging provider"""
  messageThreadExternalId: String

  """Message Direction"""
  direction: MessageChannelMessageAssociationDirectionEnum

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message Channel Id"""
  messageChannelId: ID

  """Message Channel Id"""
  messageChannel: MessageChannel

  """Message Id"""
  messageId: ID

  """Message Id"""
  message: Message
}

"""Message Direction"""
enum MessageChannelMessageAssociationDirectionEnum {
  """Incoming"""
  INCOMING

  """Outgoing"""
  OUTGOING
}

"""A note target"""
type NoteTarget {
  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """NoteTarget note"""
  noteId: ID

  """NoteTarget note"""
  note: Note

  """NoteTarget person"""
  personId: ID

  """NoteTarget person"""
  person: Person

  """NoteTarget company"""
  companyId: ID

  """NoteTarget company"""
  company: Company

  """NoteTarget opportunity"""
  opportunityId: ID

  """NoteTarget opportunity"""
  opportunity: Opportunity

  """NoteTargets Rocket"""
  rocketId: ID

  """NoteTargets Rocket"""
  rocket: Rocket

  """NoteTargets Pet"""
  petId: ID

  """NoteTargets Pet"""
  pet: Pet

  """NoteTargets Survey result"""
  surveyResultId: ID

  """NoteTargets Survey result"""
  surveyResult: SurveyResult
}

"""An opportunity"""
type Opportunity {
  """The opportunity name"""
  name: String

  """Opportunity amount"""
  amount: Currency

  """Opportunity close date"""
  closeDate: DateTime

  """Opportunity stage"""
  stage: OpportunityStageEnum

  """Opportunity record position"""
  position: Position

  """The creator of the record"""
  createdBy: Actor

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Opportunity point of contact"""
  pointOfContactId: ID

  """Opportunity point of contact"""
  pointOfContact: Person

  """Opportunity company"""
  companyId: ID

  """Opportunity company"""
  company: Company

  """Favorites linked to the opportunity"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """Tasks tied to the opportunity"""
  taskTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: TaskTargetFilterInput, orderBy: [TaskTargetOrderByInput]): TaskTargetConnection

  """Notes tied to the opportunity"""
  noteTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: NoteTargetFilterInput, orderBy: [NoteTargetOrderByInput]): NoteTargetConnection

  """Attachments linked to the opportunity"""
  attachments(first: Int, last: Int, before: String, after: String, limit: Int, filter: AttachmentFilterInput, orderBy: [AttachmentOrderByInput]): AttachmentConnection

  """Timeline Activities linked to the opportunity."""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection
}

"""Opportunity stage"""
enum OpportunityStageEnum {
  """New"""
  NEW

  """Screening"""
  SCREENING

  """Meeting"""
  MEETING

  """Proposal"""
  PROPOSAL

  """Customer"""
  CUSTOMER
}

"""A person"""
type Person {
  """Contact’s name"""
  name: FullName

  """Contact’s Emails"""
  emails: Emails

  """Contact’s Linkedin account"""
  linkedinLink: Links

  """Contact’s X/Twitter account"""
  xLink: Links

  """Contact’s job title"""
  jobTitle: String

  """Contact’s phone numbers"""
  phones: Phones

  """Contact’s city"""
  city: String

  """Contact’s avatar"""
  avatarUrl: String

  """Person record Position"""
  position: Position

  """The creator of the record"""
  createdBy: Actor

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Contact’s company"""
  companyId: ID

  """Contact’s company"""
  company: Company
  intro: String
  whatsapp: Phones
  workPreference: [PersonWorkPreferenceEnum]
  performanceRating: PersonPerformanceRatingEnum

  """List of opportunities for which that person is the point of contact"""
  pointOfContactForOpportunities(first: Int, last: Int, before: String, after: String, limit: Int, filter: OpportunityFilterInput, orderBy: [OpportunityOrderByInput]): OpportunityConnection

  """Tasks tied to the contact"""
  taskTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: TaskTargetFilterInput, orderBy: [TaskTargetOrderByInput]): TaskTargetConnection

  """Notes tied to the contact"""
  noteTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: NoteTargetFilterInput, orderBy: [NoteTargetOrderByInput]): NoteTargetConnection

  """Favorites linked to the contact"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """Attachments linked to the contact."""
  attachments(first: Int, last: Int, before: String, after: String, limit: Int, filter: AttachmentFilterInput, orderBy: [AttachmentOrderByInput]): AttachmentConnection

  """Message Participants"""
  messageParticipants(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageParticipantFilterInput, orderBy: [MessageParticipantOrderByInput]): MessageParticipantConnection

  """Calendar Event Participants"""
  calendarEventParticipants(first: Int, last: Int, before: String, after: String, limit: Int, filter: CalendarEventParticipantFilterInput, orderBy: [CalendarEventParticipantOrderByInput]): CalendarEventParticipantConnection

  """Events linked to the person"""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection
}

enum PersonWorkPreferenceEnum {
  """On-Site"""
  ON_SITE

  """Hybrid"""
  HYBRID

  """Remote Work"""
  REMOTE_WORK
}

enum PersonPerformanceRatingEnum {
  """1"""
  RATING_1

  """2"""
  RATING_2

  """3"""
  RATING_3

  """4"""
  RATING_4

  """5"""
  RATING_5
}

"""A task"""
type Task {
  """Task record position"""
  position: Position

  """Task title"""
  title: String

  """Task body"""
  body: String

  """Task body"""
  bodyV2: RichTextV2

  """Task due date"""
  dueAt: DateTime

  """Task status"""
  status: TaskStatusEnum

  """The creator of the record"""
  createdBy: Actor

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: UUID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Task assignee"""
  assigneeId: ID

  """Task assignee"""
  assignee: WorkspaceMember

  """Favorites linked to the task"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """Task targets"""
  taskTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: TaskTargetFilterInput, orderBy: [TaskTargetOrderByInput]): TaskTargetConnection

  """Task attachments"""
  attachments(first: Int, last: Int, before: String, after: String, limit: Int, filter: AttachmentFilterInput, orderBy: [AttachmentOrderByInput]): AttachmentConnection

  """Timeline Activities linked to the task."""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection
}

"""Task status"""
enum TaskStatusEnum {
  """To do"""
  TODO

  """In progress"""
  IN_PROGRESS

  """Done"""
  DONE
}

"""A rocket"""
type Rocket {
  """Id"""
  id: UUID

  """Name"""
  name: String

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Deletion date"""
  deletedAt: DateTime

  """The creator of the record"""
  createdBy: Actor

  """Position"""
  position: Position

  """Field used for full-text search"""
  searchVector: TSVector

  """TimelineActivities tied to the Rocket"""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection

  """Favorites tied to the Rocket"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """Attachments tied to the Rocket"""
  attachments(first: Int, last: Int, before: String, after: String, limit: Int, filter: AttachmentFilterInput, orderBy: [AttachmentOrderByInput]): AttachmentConnection

  """TaskTargets tied to the Rocket"""
  taskTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: TaskTargetFilterInput, orderBy: [TaskTargetOrderByInput]): TaskTargetConnection

  """NoteTargets tied to the Rocket"""
  noteTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: NoteTargetFilterInput, orderBy: [NoteTargetOrderByInput]): NoteTargetConnection
}

type SurveyResult {
  """Id"""
  id: UUID

  """Name"""
  name: String

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Deletion date"""
  deletedAt: DateTime

  """The creator of the record"""
  createdBy: Actor

  """Position"""
  position: Position

  """Field used for full-text search"""
  searchVector: TSVector
  score: Float
  percentageOfCompletion: Float
  participants: Int
  averageEstimatedNumberOfAtomsInTheUniverse: BigInt
  comments: String
  shortNotes: String

  """Attachments tied to the Survey result"""
  attachments(first: Int, last: Int, before: String, after: String, limit: Int, filter: AttachmentFilterInput, orderBy: [AttachmentOrderByInput]): AttachmentConnection

  """TimelineActivities tied to the Survey result"""
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection

  """Favorites tied to the Survey result"""
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection

  """TaskTargets tied to the Survey result"""
  taskTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: TaskTargetFilterInput, orderBy: [TaskTargetOrderByInput]): TaskTargetConnection

  """NoteTargets tied to the Survey result"""
  noteTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: NoteTargetFilterInput, orderBy: [NoteTargetOrderByInput]): NoteTargetConnection
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

"""An API key"""
type ApiKeyEdge {
  node: ApiKey
  cursor: Cursor
}

"""A custom scalar that represents a cursor for pagination"""
scalar Cursor

"""An attachment"""
type AttachmentEdge {
  node: Attachment
  cursor: Cursor
}

type PetEdge {
  node: Pet
  cursor: Cursor
}

"""Blocklist"""
type BlocklistEdge {
  node: Blocklist
  cursor: Cursor
}

"""Calendar events"""
type CalendarEventEdge {
  node: CalendarEvent
  cursor: Cursor
}

"""Calendar Channels"""
type CalendarChannelEdge {
  node: CalendarChannel
  cursor: Cursor
}

"""Calendar Channel Event Associations"""
type CalendarChannelEventAssociationEdge {
  node: CalendarChannelEventAssociation
  cursor: Cursor
}

"""Calendar event participants"""
type CalendarEventParticipantEdge {
  node: CalendarEventParticipant
  cursor: Cursor
}

"""A company"""
type CompanyEdge {
  node: Company
  cursor: Cursor
}

"""A connected account"""
type ConnectedAccountEdge {
  node: ConnectedAccount
  cursor: Cursor
}

"""A favorite that can be accessed from the left menu"""
type FavoriteEdge {
  node: Favorite
  cursor: Cursor
}

"""A Folder of favorites"""
type FavoriteFolderEdge {
  node: FavoriteFolder
  cursor: Cursor
}

"""Aggregated / filtered event to be displayed on the timeline"""
type TimelineActivityEdge {
  node: TimelineActivity
  cursor: Cursor
}

"""(System) View Fields"""
type ViewFieldEdge {
  node: ViewField
  cursor: Cursor
}

"""(System) View Filter Groups"""
type ViewFilterGroupEdge {
  node: ViewFilterGroup
  cursor: Cursor
}

"""(System) View Groups"""
type ViewGroupEdge {
  node: ViewGroup
  cursor: Cursor
}

"""(System) View Filters"""
type ViewFilterEdge {
  node: ViewFilter
  cursor: Cursor
}

"""(System) View Sorts"""
type ViewSortEdge {
  node: ViewSort
  cursor: Cursor
}

"""(System) Views"""
type ViewEdge {
  node: View
  cursor: Cursor
}

"""A webhook"""
type WebhookEdge {
  node: Webhook
  cursor: Cursor
}

"""A workflow"""
type WorkflowEdge {
  node: Workflow
  cursor: Cursor
}

"""A workflow version"""
type WorkflowVersionEdge {
  node: WorkflowVersion
  cursor: Cursor
}

"""A workflow run"""
type WorkflowRunEdge {
  node: WorkflowRun
  cursor: Cursor
}

"""A workflow automated trigger"""
type WorkflowAutomatedTriggerEdge {
  node: WorkflowAutomatedTrigger
  cursor: Cursor
}

"""A workspace member"""
type WorkspaceMemberEdge {
  node: WorkspaceMember
  cursor: Cursor
}

"""A note"""
type NoteEdge {
  node: Note
  cursor: Cursor
}

"""A task target"""
type TaskTargetEdge {
  node: TaskTarget
  cursor: Cursor
}

"""A group of related messages (e.g. email thread, chat thread)"""
type MessageThreadEdge {
  node: MessageThread
  cursor: Cursor
}

"""
A message sent or received through a messaging channel (email, chat, etc.)
"""
type MessageEdge {
  node: Message
  cursor: Cursor
}

"""Message Channels"""
type MessageChannelEdge {
  node: MessageChannel
  cursor: Cursor
}

"""Message Participants"""
type MessageParticipantEdge {
  node: MessageParticipant
  cursor: Cursor
}

"""Folder for Message Channel"""
type MessageFolderEdge {
  node: MessageFolder
  cursor: Cursor
}

"""Message Synced with a Message Channel"""
type MessageChannelMessageAssociationEdge {
  node: MessageChannelMessageAssociation
  cursor: Cursor
}

"""A note target"""
type NoteTargetEdge {
  node: NoteTarget
  cursor: Cursor
}

"""An opportunity"""
type OpportunityEdge {
  node: Opportunity
  cursor: Cursor
}

"""A person"""
type PersonEdge {
  node: Person
  cursor: Cursor
}

"""A task"""
type TaskEdge {
  node: Task
  cursor: Cursor
}

"""A rocket"""
type RocketEdge {
  node: Rocket
  cursor: Cursor
}

type SurveyResultEdge {
  node: SurveyResult
  cursor: Cursor
}

"""An API key"""
type ApiKeyConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for expiresAt"""
  countUniqueValuesExpiresAt: Int

  """Number of empty values for expiresAt"""
  countEmptyExpiresAt: Int

  """Number of non-empty values for expiresAt"""
  countNotEmptyExpiresAt: Int

  """Percentage of empty values for expiresAt"""
  percentageEmptyExpiresAt: Float

  """Percentage of non-empty values for expiresAt"""
  percentageNotEmptyExpiresAt: Float

  """Earliest date contained in the field expiresAt"""
  minExpiresAt: DateTime

  """Latest date contained in the field expiresAt"""
  maxExpiresAt: DateTime

  """Number of unique values for revokedAt"""
  countUniqueValuesRevokedAt: Int

  """Number of empty values for revokedAt"""
  countEmptyRevokedAt: Int

  """Number of non-empty values for revokedAt"""
  countNotEmptyRevokedAt: Int

  """Percentage of empty values for revokedAt"""
  percentageEmptyRevokedAt: Float

  """Percentage of non-empty values for revokedAt"""
  percentageNotEmptyRevokedAt: Float

  """Earliest date contained in the field revokedAt"""
  minRevokedAt: DateTime

  """Latest date contained in the field revokedAt"""
  maxRevokedAt: DateTime

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [ApiKeyEdge!]
  pageInfo: PageInfo
}

type PageInfo {
  startCursor: ConnectionCursor
  endCursor: ConnectionCursor
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

"""Cursor for paging through collections"""
scalar ConnectionCursor

"""An attachment"""
type AttachmentConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for fullPath"""
  countUniqueValuesFullPath: Int

  """Number of empty values for fullPath"""
  countEmptyFullPath: Int

  """Number of non-empty values for fullPath"""
  countNotEmptyFullPath: Int

  """Percentage of empty values for fullPath"""
  percentageEmptyFullPath: Float

  """Percentage of non-empty values for fullPath"""
  percentageNotEmptyFullPath: Float

  """Number of unique values for type"""
  countUniqueValuesType: Int

  """Number of empty values for type"""
  countEmptyType: Int

  """Number of non-empty values for type"""
  countNotEmptyType: Int

  """Percentage of empty values for type"""
  percentageEmptyType: Float

  """Percentage of non-empty values for type"""
  percentageNotEmptyType: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [AttachmentEdge!]
  pageInfo: PageInfo
}

type PetConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for coco"""
  countUniqueValuesCoco: Int

  """Number of empty values for coco"""
  countEmptyCoco: Int

  """Number of non-empty values for coco"""
  countNotEmptyCoco: Int

  """Percentage of empty values for coco"""
  percentageEmptyCoco: Float

  """Percentage of non-empty values for coco"""
  percentageNotEmptyCoco: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime

  """Number of unique values for createdBy"""
  countUniqueValuesCreatedBy: Int

  """Number of empty values for createdBy"""
  countEmptyCreatedBy: Int

  """Number of non-empty values for createdBy"""
  countNotEmptyCreatedBy: Int

  """Percentage of empty values for createdBy"""
  percentageEmptyCreatedBy: Float

  """Percentage of non-empty values for createdBy"""
  percentageNotEmptyCreatedBy: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for searchVector"""
  countUniqueValuesSearchVector: Int

  """Number of empty values for searchVector"""
  countEmptySearchVector: Int

  """Number of non-empty values for searchVector"""
  countNotEmptySearchVector: Int

  """Percentage of empty values for searchVector"""
  percentageEmptySearchVector: Float

  """Percentage of non-empty values for searchVector"""
  percentageNotEmptySearchVector: Float

  """Number of unique values for species"""
  countUniqueValuesSpecies: Int

  """Number of empty values for species"""
  countEmptySpecies: Int

  """Number of non-empty values for species"""
  countNotEmptySpecies: Int

  """Percentage of empty values for species"""
  percentageEmptySpecies: Float

  """Percentage of non-empty values for species"""
  percentageNotEmptySpecies: Float

  """Number of unique values for traits"""
  countUniqueValuesTraits: Int

  """Number of empty values for traits"""
  countEmptyTraits: Int

  """Number of non-empty values for traits"""
  countNotEmptyTraits: Int

  """Percentage of empty values for traits"""
  percentageEmptyTraits: Float

  """Percentage of non-empty values for traits"""
  percentageNotEmptyTraits: Float

  """Number of unique values for comments"""
  countUniqueValuesComments: Int

  """Number of empty values for comments"""
  countEmptyComments: Int

  """Number of non-empty values for comments"""
  countNotEmptyComments: Int

  """Percentage of empty values for comments"""
  percentageEmptyComments: Float

  """Percentage of non-empty values for comments"""
  percentageNotEmptyComments: Float

  """Number of unique values for age"""
  countUniqueValuesAge: Int

  """Number of empty values for age"""
  countEmptyAge: Int

  """Number of non-empty values for age"""
  countNotEmptyAge: Int

  """Percentage of empty values for age"""
  percentageEmptyAge: Float

  """Percentage of non-empty values for age"""
  percentageNotEmptyAge: Float

  """Minimum amount contained in the field age"""
  minAge: Float

  """Maximum amount contained in the field age"""
  maxAge: Float

  """Average amount contained in the field age"""
  avgAge: Float

  """Sum of amounts contained in the field age"""
  sumAge: Float

  """Number of unique values for location"""
  countUniqueValuesLocation: Int

  """Number of empty values for location"""
  countEmptyLocation: Int

  """Number of non-empty values for location"""
  countNotEmptyLocation: Int

  """Percentage of empty values for location"""
  percentageEmptyLocation: Float

  """Percentage of non-empty values for location"""
  percentageNotEmptyLocation: Float

  """Number of unique values for vetPhone"""
  countUniqueValuesVetPhone: Int

  """Number of empty values for vetPhone"""
  countEmptyVetPhone: Int

  """Number of non-empty values for vetPhone"""
  countNotEmptyVetPhone: Int

  """Percentage of empty values for vetPhone"""
  percentageEmptyVetPhone: Float

  """Percentage of non-empty values for vetPhone"""
  percentageNotEmptyVetPhone: Float

  """Number of unique values for vetEmail"""
  countUniqueValuesVetEmail: Int

  """Number of empty values for vetEmail"""
  countEmptyVetEmail: Int

  """Number of non-empty values for vetEmail"""
  countNotEmptyVetEmail: Int

  """Percentage of empty values for vetEmail"""
  percentageEmptyVetEmail: Float

  """Percentage of non-empty values for vetEmail"""
  percentageNotEmptyVetEmail: Float

  """Number of unique values for birthday"""
  countUniqueValuesBirthday: Int

  """Number of empty values for birthday"""
  countEmptyBirthday: Int

  """Number of non-empty values for birthday"""
  countNotEmptyBirthday: Int

  """Percentage of empty values for birthday"""
  percentageEmptyBirthday: Float

  """Percentage of non-empty values for birthday"""
  percentageNotEmptyBirthday: Float

  """Earliest date contained in the field birthday"""
  minBirthday: DateTime

  """Latest date contained in the field birthday"""
  maxBirthday: DateTime

  """Number of unique values for isGoodWithKids"""
  countUniqueValuesIsGoodWithKids: Int

  """Number of empty values for isGoodWithKids"""
  countEmptyIsGoodWithKids: Int

  """Number of non-empty values for isGoodWithKids"""
  countNotEmptyIsGoodWithKids: Int

  """Percentage of empty values for isGoodWithKids"""
  percentageEmptyIsGoodWithKids: Float

  """Percentage of non-empty values for isGoodWithKids"""
  percentageNotEmptyIsGoodWithKids: Float

  """Count of true values in the field isGoodWithKids"""
  countTrueIsGoodWithKids: Int

  """Count of false values in the field isGoodWithKids"""
  countFalseIsGoodWithKids: Int

  """Number of unique values for pictures"""
  countUniqueValuesPictures: Int

  """Number of empty values for pictures"""
  countEmptyPictures: Int

  """Number of non-empty values for pictures"""
  countNotEmptyPictures: Int

  """Percentage of empty values for pictures"""
  percentageEmptyPictures: Float

  """Percentage of non-empty values for pictures"""
  percentageNotEmptyPictures: Float

  """Number of unique values for averageCostOfKibblePerMonth"""
  countUniqueValuesAverageCostOfKibblePerMonth: Int

  """Number of empty values for averageCostOfKibblePerMonth"""
  countEmptyAverageCostOfKibblePerMonth: Int

  """Number of non-empty values for averageCostOfKibblePerMonth"""
  countNotEmptyAverageCostOfKibblePerMonth: Int

  """Percentage of empty values for averageCostOfKibblePerMonth"""
  percentageEmptyAverageCostOfKibblePerMonth: Float

  """Percentage of non-empty values for averageCostOfKibblePerMonth"""
  percentageNotEmptyAverageCostOfKibblePerMonth: Float

  """Minimum amount contained in the field averageCostOfKibblePerMonth"""
  minAverageCostOfKibblePerMonthAmountMicros: Float

  """Maximal amount contained in the field averageCostOfKibblePerMonth"""
  maxAverageCostOfKibblePerMonthAmountMicros: Float

  """Sum of amounts contained in the field averageCostOfKibblePerMonth"""
  sumAverageCostOfKibblePerMonthAmountMicros: Float

  """Average amount contained in the field averageCostOfKibblePerMonth"""
  avgAverageCostOfKibblePerMonthAmountMicros: Float

  """Number of unique values for makesOwnerThinkOf"""
  countUniqueValuesMakesOwnerThinkOf: Int

  """Number of empty values for makesOwnerThinkOf"""
  countEmptyMakesOwnerThinkOf: Int

  """Number of non-empty values for makesOwnerThinkOf"""
  countNotEmptyMakesOwnerThinkOf: Int

  """Percentage of empty values for makesOwnerThinkOf"""
  percentageEmptyMakesOwnerThinkOf: Float

  """Percentage of non-empty values for makesOwnerThinkOf"""
  percentageNotEmptyMakesOwnerThinkOf: Float

  """Number of unique values for soundSwag"""
  countUniqueValuesSoundSwag: Int

  """Number of empty values for soundSwag"""
  countEmptySoundSwag: Int

  """Number of non-empty values for soundSwag"""
  countNotEmptySoundSwag: Int

  """Percentage of empty values for soundSwag"""
  percentageEmptySoundSwag: Float

  """Percentage of non-empty values for soundSwag"""
  percentageNotEmptySoundSwag: Float

  """Number of unique values for bio"""
  countUniqueValuesBio: Int

  """Number of empty values for bio"""
  countEmptyBio: Int

  """Number of non-empty values for bio"""
  countNotEmptyBio: Int

  """Percentage of empty values for bio"""
  percentageEmptyBio: Float

  """Percentage of non-empty values for bio"""
  percentageNotEmptyBio: Float

  """Number of unique values for interestingFacts"""
  countUniqueValuesInterestingFacts: Int

  """Number of empty values for interestingFacts"""
  countEmptyInterestingFacts: Int

  """Number of non-empty values for interestingFacts"""
  countNotEmptyInterestingFacts: Int

  """Percentage of empty values for interestingFacts"""
  percentageEmptyInterestingFacts: Float

  """Percentage of non-empty values for interestingFacts"""
  percentageNotEmptyInterestingFacts: Float

  """Number of unique values for extraData"""
  countUniqueValuesExtraData: Int

  """Number of empty values for extraData"""
  countEmptyExtraData: Int

  """Number of non-empty values for extraData"""
  countNotEmptyExtraData: Int

  """Percentage of empty values for extraData"""
  percentageEmptyExtraData: Float

  """Percentage of non-empty values for extraData"""
  percentageNotEmptyExtraData: Float
  edges: [PetEdge!]
  pageInfo: PageInfo
}

"""Blocklist"""
type BlocklistConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for handle"""
  countUniqueValuesHandle: Int

  """Number of empty values for handle"""
  countEmptyHandle: Int

  """Number of non-empty values for handle"""
  countNotEmptyHandle: Int

  """Percentage of empty values for handle"""
  percentageEmptyHandle: Float

  """Percentage of non-empty values for handle"""
  percentageNotEmptyHandle: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [BlocklistEdge!]
  pageInfo: PageInfo
}

"""Calendar events"""
type CalendarEventConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for title"""
  countUniqueValuesTitle: Int

  """Number of empty values for title"""
  countEmptyTitle: Int

  """Number of non-empty values for title"""
  countNotEmptyTitle: Int

  """Percentage of empty values for title"""
  percentageEmptyTitle: Float

  """Percentage of non-empty values for title"""
  percentageNotEmptyTitle: Float

  """Number of unique values for isCanceled"""
  countUniqueValuesIsCanceled: Int

  """Number of empty values for isCanceled"""
  countEmptyIsCanceled: Int

  """Number of non-empty values for isCanceled"""
  countNotEmptyIsCanceled: Int

  """Percentage of empty values for isCanceled"""
  percentageEmptyIsCanceled: Float

  """Percentage of non-empty values for isCanceled"""
  percentageNotEmptyIsCanceled: Float

  """Count of true values in the field isCanceled"""
  countTrueIsCanceled: Int

  """Count of false values in the field isCanceled"""
  countFalseIsCanceled: Int

  """Number of unique values for isFullDay"""
  countUniqueValuesIsFullDay: Int

  """Number of empty values for isFullDay"""
  countEmptyIsFullDay: Int

  """Number of non-empty values for isFullDay"""
  countNotEmptyIsFullDay: Int

  """Percentage of empty values for isFullDay"""
  percentageEmptyIsFullDay: Float

  """Percentage of non-empty values for isFullDay"""
  percentageNotEmptyIsFullDay: Float

  """Count of true values in the field isFullDay"""
  countTrueIsFullDay: Int

  """Count of false values in the field isFullDay"""
  countFalseIsFullDay: Int

  """Number of unique values for startsAt"""
  countUniqueValuesStartsAt: Int

  """Number of empty values for startsAt"""
  countEmptyStartsAt: Int

  """Number of non-empty values for startsAt"""
  countNotEmptyStartsAt: Int

  """Percentage of empty values for startsAt"""
  percentageEmptyStartsAt: Float

  """Percentage of non-empty values for startsAt"""
  percentageNotEmptyStartsAt: Float

  """Earliest date contained in the field startsAt"""
  minStartsAt: DateTime

  """Latest date contained in the field startsAt"""
  maxStartsAt: DateTime

  """Number of unique values for endsAt"""
  countUniqueValuesEndsAt: Int

  """Number of empty values for endsAt"""
  countEmptyEndsAt: Int

  """Number of non-empty values for endsAt"""
  countNotEmptyEndsAt: Int

  """Percentage of empty values for endsAt"""
  percentageEmptyEndsAt: Float

  """Percentage of non-empty values for endsAt"""
  percentageNotEmptyEndsAt: Float

  """Earliest date contained in the field endsAt"""
  minEndsAt: DateTime

  """Latest date contained in the field endsAt"""
  maxEndsAt: DateTime

  """Number of unique values for externalCreatedAt"""
  countUniqueValuesExternalCreatedAt: Int

  """Number of empty values for externalCreatedAt"""
  countEmptyExternalCreatedAt: Int

  """Number of non-empty values for externalCreatedAt"""
  countNotEmptyExternalCreatedAt: Int

  """Percentage of empty values for externalCreatedAt"""
  percentageEmptyExternalCreatedAt: Float

  """Percentage of non-empty values for externalCreatedAt"""
  percentageNotEmptyExternalCreatedAt: Float

  """Earliest date contained in the field externalCreatedAt"""
  minExternalCreatedAt: DateTime

  """Latest date contained in the field externalCreatedAt"""
  maxExternalCreatedAt: DateTime

  """Number of unique values for externalUpdatedAt"""
  countUniqueValuesExternalUpdatedAt: Int

  """Number of empty values for externalUpdatedAt"""
  countEmptyExternalUpdatedAt: Int

  """Number of non-empty values for externalUpdatedAt"""
  countNotEmptyExternalUpdatedAt: Int

  """Percentage of empty values for externalUpdatedAt"""
  percentageEmptyExternalUpdatedAt: Float

  """Percentage of non-empty values for externalUpdatedAt"""
  percentageNotEmptyExternalUpdatedAt: Float

  """Earliest date contained in the field externalUpdatedAt"""
  minExternalUpdatedAt: DateTime

  """Latest date contained in the field externalUpdatedAt"""
  maxExternalUpdatedAt: DateTime

  """Number of unique values for description"""
  countUniqueValuesDescription: Int

  """Number of empty values for description"""
  countEmptyDescription: Int

  """Number of non-empty values for description"""
  countNotEmptyDescription: Int

  """Percentage of empty values for description"""
  percentageEmptyDescription: Float

  """Percentage of non-empty values for description"""
  percentageNotEmptyDescription: Float

  """Number of unique values for location"""
  countUniqueValuesLocation: Int

  """Number of empty values for location"""
  countEmptyLocation: Int

  """Number of non-empty values for location"""
  countNotEmptyLocation: Int

  """Percentage of empty values for location"""
  percentageEmptyLocation: Float

  """Percentage of non-empty values for location"""
  percentageNotEmptyLocation: Float

  """Number of unique values for iCalUID"""
  countUniqueValuesICalUID: Int

  """Number of empty values for iCalUID"""
  countEmptyICalUID: Int

  """Number of non-empty values for iCalUID"""
  countNotEmptyICalUID: Int

  """Percentage of empty values for iCalUID"""
  percentageEmptyICalUID: Float

  """Percentage of non-empty values for iCalUID"""
  percentageNotEmptyICalUID: Float

  """Number of unique values for conferenceSolution"""
  countUniqueValuesConferenceSolution: Int

  """Number of empty values for conferenceSolution"""
  countEmptyConferenceSolution: Int

  """Number of non-empty values for conferenceSolution"""
  countNotEmptyConferenceSolution: Int

  """Percentage of empty values for conferenceSolution"""
  percentageEmptyConferenceSolution: Float

  """Percentage of non-empty values for conferenceSolution"""
  percentageNotEmptyConferenceSolution: Float

  """Number of unique values for conferenceLink"""
  countUniqueValuesConferenceLink: Int

  """Number of empty values for conferenceLink"""
  countEmptyConferenceLink: Int

  """Number of non-empty values for conferenceLink"""
  countNotEmptyConferenceLink: Int

  """Percentage of empty values for conferenceLink"""
  percentageEmptyConferenceLink: Float

  """Percentage of non-empty values for conferenceLink"""
  percentageNotEmptyConferenceLink: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [CalendarEventEdge!]
  pageInfo: PageInfo
}

"""Calendar Channels"""
type CalendarChannelConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for handle"""
  countUniqueValuesHandle: Int

  """Number of empty values for handle"""
  countEmptyHandle: Int

  """Number of non-empty values for handle"""
  countNotEmptyHandle: Int

  """Percentage of empty values for handle"""
  percentageEmptyHandle: Float

  """Percentage of non-empty values for handle"""
  percentageNotEmptyHandle: Float

  """Number of unique values for syncStatus"""
  countUniqueValuesSyncStatus: Int

  """Number of empty values for syncStatus"""
  countEmptySyncStatus: Int

  """Number of non-empty values for syncStatus"""
  countNotEmptySyncStatus: Int

  """Percentage of empty values for syncStatus"""
  percentageEmptySyncStatus: Float

  """Percentage of non-empty values for syncStatus"""
  percentageNotEmptySyncStatus: Float

  """Number of unique values for syncStage"""
  countUniqueValuesSyncStage: Int

  """Number of empty values for syncStage"""
  countEmptySyncStage: Int

  """Number of non-empty values for syncStage"""
  countNotEmptySyncStage: Int

  """Percentage of empty values for syncStage"""
  percentageEmptySyncStage: Float

  """Percentage of non-empty values for syncStage"""
  percentageNotEmptySyncStage: Float

  """Number of unique values for visibility"""
  countUniqueValuesVisibility: Int

  """Number of empty values for visibility"""
  countEmptyVisibility: Int

  """Number of non-empty values for visibility"""
  countNotEmptyVisibility: Int

  """Percentage of empty values for visibility"""
  percentageEmptyVisibility: Float

  """Percentage of non-empty values for visibility"""
  percentageNotEmptyVisibility: Float

  """Number of unique values for isContactAutoCreationEnabled"""
  countUniqueValuesIsContactAutoCreationEnabled: Int

  """Number of empty values for isContactAutoCreationEnabled"""
  countEmptyIsContactAutoCreationEnabled: Int

  """Number of non-empty values for isContactAutoCreationEnabled"""
  countNotEmptyIsContactAutoCreationEnabled: Int

  """Percentage of empty values for isContactAutoCreationEnabled"""
  percentageEmptyIsContactAutoCreationEnabled: Float

  """Percentage of non-empty values for isContactAutoCreationEnabled"""
  percentageNotEmptyIsContactAutoCreationEnabled: Float

  """Count of true values in the field isContactAutoCreationEnabled"""
  countTrueIsContactAutoCreationEnabled: Int

  """Count of false values in the field isContactAutoCreationEnabled"""
  countFalseIsContactAutoCreationEnabled: Int

  """Number of unique values for contactAutoCreationPolicy"""
  countUniqueValuesContactAutoCreationPolicy: Int

  """Number of empty values for contactAutoCreationPolicy"""
  countEmptyContactAutoCreationPolicy: Int

  """Number of non-empty values for contactAutoCreationPolicy"""
  countNotEmptyContactAutoCreationPolicy: Int

  """Percentage of empty values for contactAutoCreationPolicy"""
  percentageEmptyContactAutoCreationPolicy: Float

  """Percentage of non-empty values for contactAutoCreationPolicy"""
  percentageNotEmptyContactAutoCreationPolicy: Float

  """Number of unique values for isSyncEnabled"""
  countUniqueValuesIsSyncEnabled: Int

  """Number of empty values for isSyncEnabled"""
  countEmptyIsSyncEnabled: Int

  """Number of non-empty values for isSyncEnabled"""
  countNotEmptyIsSyncEnabled: Int

  """Percentage of empty values for isSyncEnabled"""
  percentageEmptyIsSyncEnabled: Float

  """Percentage of non-empty values for isSyncEnabled"""
  percentageNotEmptyIsSyncEnabled: Float

  """Count of true values in the field isSyncEnabled"""
  countTrueIsSyncEnabled: Int

  """Count of false values in the field isSyncEnabled"""
  countFalseIsSyncEnabled: Int

  """Number of unique values for syncCursor"""
  countUniqueValuesSyncCursor: Int

  """Number of empty values for syncCursor"""
  countEmptySyncCursor: Int

  """Number of non-empty values for syncCursor"""
  countNotEmptySyncCursor: Int

  """Percentage of empty values for syncCursor"""
  percentageEmptySyncCursor: Float

  """Percentage of non-empty values for syncCursor"""
  percentageNotEmptySyncCursor: Float

  """Number of unique values for syncedAt"""
  countUniqueValuesSyncedAt: Int

  """Number of empty values for syncedAt"""
  countEmptySyncedAt: Int

  """Number of non-empty values for syncedAt"""
  countNotEmptySyncedAt: Int

  """Percentage of empty values for syncedAt"""
  percentageEmptySyncedAt: Float

  """Percentage of non-empty values for syncedAt"""
  percentageNotEmptySyncedAt: Float

  """Earliest date contained in the field syncedAt"""
  minSyncedAt: DateTime

  """Latest date contained in the field syncedAt"""
  maxSyncedAt: DateTime

  """Number of unique values for syncStageStartedAt"""
  countUniqueValuesSyncStageStartedAt: Int

  """Number of empty values for syncStageStartedAt"""
  countEmptySyncStageStartedAt: Int

  """Number of non-empty values for syncStageStartedAt"""
  countNotEmptySyncStageStartedAt: Int

  """Percentage of empty values for syncStageStartedAt"""
  percentageEmptySyncStageStartedAt: Float

  """Percentage of non-empty values for syncStageStartedAt"""
  percentageNotEmptySyncStageStartedAt: Float

  """Earliest date contained in the field syncStageStartedAt"""
  minSyncStageStartedAt: DateTime

  """Latest date contained in the field syncStageStartedAt"""
  maxSyncStageStartedAt: DateTime

  """Number of unique values for throttleFailureCount"""
  countUniqueValuesThrottleFailureCount: Int

  """Number of empty values for throttleFailureCount"""
  countEmptyThrottleFailureCount: Int

  """Number of non-empty values for throttleFailureCount"""
  countNotEmptyThrottleFailureCount: Int

  """Percentage of empty values for throttleFailureCount"""
  percentageEmptyThrottleFailureCount: Float

  """Percentage of non-empty values for throttleFailureCount"""
  percentageNotEmptyThrottleFailureCount: Float

  """Minimum amount contained in the field throttleFailureCount"""
  minThrottleFailureCount: Float

  """Maximum amount contained in the field throttleFailureCount"""
  maxThrottleFailureCount: Float

  """Average amount contained in the field throttleFailureCount"""
  avgThrottleFailureCount: Float

  """Sum of amounts contained in the field throttleFailureCount"""
  sumThrottleFailureCount: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [CalendarChannelEdge!]
  pageInfo: PageInfo
}

"""Calendar Channel Event Associations"""
type CalendarChannelEventAssociationConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for eventExternalId"""
  countUniqueValuesEventExternalId: Int

  """Number of empty values for eventExternalId"""
  countEmptyEventExternalId: Int

  """Number of non-empty values for eventExternalId"""
  countNotEmptyEventExternalId: Int

  """Percentage of empty values for eventExternalId"""
  percentageEmptyEventExternalId: Float

  """Percentage of non-empty values for eventExternalId"""
  percentageNotEmptyEventExternalId: Float

  """Number of unique values for recurringEventExternalId"""
  countUniqueValuesRecurringEventExternalId: Int

  """Number of empty values for recurringEventExternalId"""
  countEmptyRecurringEventExternalId: Int

  """Number of non-empty values for recurringEventExternalId"""
  countNotEmptyRecurringEventExternalId: Int

  """Percentage of empty values for recurringEventExternalId"""
  percentageEmptyRecurringEventExternalId: Float

  """Percentage of non-empty values for recurringEventExternalId"""
  percentageNotEmptyRecurringEventExternalId: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [CalendarChannelEventAssociationEdge!]
  pageInfo: PageInfo
}

"""Calendar event participants"""
type CalendarEventParticipantConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for handle"""
  countUniqueValuesHandle: Int

  """Number of empty values for handle"""
  countEmptyHandle: Int

  """Number of non-empty values for handle"""
  countNotEmptyHandle: Int

  """Percentage of empty values for handle"""
  percentageEmptyHandle: Float

  """Percentage of non-empty values for handle"""
  percentageNotEmptyHandle: Float

  """Number of unique values for displayName"""
  countUniqueValuesDisplayName: Int

  """Number of empty values for displayName"""
  countEmptyDisplayName: Int

  """Number of non-empty values for displayName"""
  countNotEmptyDisplayName: Int

  """Percentage of empty values for displayName"""
  percentageEmptyDisplayName: Float

  """Percentage of non-empty values for displayName"""
  percentageNotEmptyDisplayName: Float

  """Number of unique values for isOrganizer"""
  countUniqueValuesIsOrganizer: Int

  """Number of empty values for isOrganizer"""
  countEmptyIsOrganizer: Int

  """Number of non-empty values for isOrganizer"""
  countNotEmptyIsOrganizer: Int

  """Percentage of empty values for isOrganizer"""
  percentageEmptyIsOrganizer: Float

  """Percentage of non-empty values for isOrganizer"""
  percentageNotEmptyIsOrganizer: Float

  """Count of true values in the field isOrganizer"""
  countTrueIsOrganizer: Int

  """Count of false values in the field isOrganizer"""
  countFalseIsOrganizer: Int

  """Number of unique values for responseStatus"""
  countUniqueValuesResponseStatus: Int

  """Number of empty values for responseStatus"""
  countEmptyResponseStatus: Int

  """Number of non-empty values for responseStatus"""
  countNotEmptyResponseStatus: Int

  """Percentage of empty values for responseStatus"""
  percentageEmptyResponseStatus: Float

  """Percentage of non-empty values for responseStatus"""
  percentageNotEmptyResponseStatus: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [CalendarEventParticipantEdge!]
  pageInfo: PageInfo
}

"""A company"""
type CompanyConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for domainName"""
  countUniqueValuesDomainName: Int

  """Number of empty values for domainName"""
  countEmptyDomainName: Int

  """Number of non-empty values for domainName"""
  countNotEmptyDomainName: Int

  """Percentage of empty values for domainName"""
  percentageEmptyDomainName: Float

  """Percentage of non-empty values for domainName"""
  percentageNotEmptyDomainName: Float

  """Number of unique values for employees"""
  countUniqueValuesEmployees: Int

  """Number of empty values for employees"""
  countEmptyEmployees: Int

  """Number of non-empty values for employees"""
  countNotEmptyEmployees: Int

  """Percentage of empty values for employees"""
  percentageEmptyEmployees: Float

  """Percentage of non-empty values for employees"""
  percentageNotEmptyEmployees: Float

  """Minimum amount contained in the field employees"""
  minEmployees: Float

  """Maximum amount contained in the field employees"""
  maxEmployees: Float

  """Average amount contained in the field employees"""
  avgEmployees: Float

  """Sum of amounts contained in the field employees"""
  sumEmployees: Float

  """Number of unique values for linkedinLink"""
  countUniqueValuesLinkedinLink: Int

  """Number of empty values for linkedinLink"""
  countEmptyLinkedinLink: Int

  """Number of non-empty values for linkedinLink"""
  countNotEmptyLinkedinLink: Int

  """Percentage of empty values for linkedinLink"""
  percentageEmptyLinkedinLink: Float

  """Percentage of non-empty values for linkedinLink"""
  percentageNotEmptyLinkedinLink: Float

  """Number of unique values for xLink"""
  countUniqueValuesXLink: Int

  """Number of empty values for xLink"""
  countEmptyXLink: Int

  """Number of non-empty values for xLink"""
  countNotEmptyXLink: Int

  """Percentage of empty values for xLink"""
  percentageEmptyXLink: Float

  """Percentage of non-empty values for xLink"""
  percentageNotEmptyXLink: Float

  """Number of unique values for annualRecurringRevenue"""
  countUniqueValuesAnnualRecurringRevenue: Int

  """Number of empty values for annualRecurringRevenue"""
  countEmptyAnnualRecurringRevenue: Int

  """Number of non-empty values for annualRecurringRevenue"""
  countNotEmptyAnnualRecurringRevenue: Int

  """Percentage of empty values for annualRecurringRevenue"""
  percentageEmptyAnnualRecurringRevenue: Float

  """Percentage of non-empty values for annualRecurringRevenue"""
  percentageNotEmptyAnnualRecurringRevenue: Float

  """Minimum amount contained in the field annualRecurringRevenue"""
  minAnnualRecurringRevenueAmountMicros: Float

  """Maximal amount contained in the field annualRecurringRevenue"""
  maxAnnualRecurringRevenueAmountMicros: Float

  """Sum of amounts contained in the field annualRecurringRevenue"""
  sumAnnualRecurringRevenueAmountMicros: Float

  """Average amount contained in the field annualRecurringRevenue"""
  avgAnnualRecurringRevenueAmountMicros: Float

  """Number of unique values for address"""
  countUniqueValuesAddress: Int

  """Number of empty values for address"""
  countEmptyAddress: Int

  """Number of non-empty values for address"""
  countNotEmptyAddress: Int

  """Percentage of empty values for address"""
  percentageEmptyAddress: Float

  """Percentage of non-empty values for address"""
  percentageNotEmptyAddress: Float

  """Number of unique values for idealCustomerProfile"""
  countUniqueValuesIdealCustomerProfile: Int

  """Number of empty values for idealCustomerProfile"""
  countEmptyIdealCustomerProfile: Int

  """Number of non-empty values for idealCustomerProfile"""
  countNotEmptyIdealCustomerProfile: Int

  """Percentage of empty values for idealCustomerProfile"""
  percentageEmptyIdealCustomerProfile: Float

  """Percentage of non-empty values for idealCustomerProfile"""
  percentageNotEmptyIdealCustomerProfile: Float

  """Count of true values in the field idealCustomerProfile"""
  countTrueIdealCustomerProfile: Int

  """Count of false values in the field idealCustomerProfile"""
  countFalseIdealCustomerProfile: Int

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for createdBy"""
  countUniqueValuesCreatedBy: Int

  """Number of empty values for createdBy"""
  countEmptyCreatedBy: Int

  """Number of non-empty values for createdBy"""
  countNotEmptyCreatedBy: Int

  """Percentage of empty values for createdBy"""
  percentageEmptyCreatedBy: Float

  """Percentage of non-empty values for createdBy"""
  percentageNotEmptyCreatedBy: Float

  """Number of unique values for searchVector"""
  countUniqueValuesSearchVector: Int

  """Number of empty values for searchVector"""
  countEmptySearchVector: Int

  """Number of non-empty values for searchVector"""
  countNotEmptySearchVector: Int

  """Percentage of empty values for searchVector"""
  percentageEmptySearchVector: Float

  """Percentage of non-empty values for searchVector"""
  percentageNotEmptySearchVector: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime

  """Number of unique values for tagline"""
  countUniqueValuesTagline: Int

  """Number of empty values for tagline"""
  countEmptyTagline: Int

  """Number of non-empty values for tagline"""
  countNotEmptyTagline: Int

  """Percentage of empty values for tagline"""
  percentageEmptyTagline: Float

  """Percentage of non-empty values for tagline"""
  percentageNotEmptyTagline: Float

  """Number of unique values for introVideo"""
  countUniqueValuesIntroVideo: Int

  """Number of empty values for introVideo"""
  countEmptyIntroVideo: Int

  """Number of non-empty values for introVideo"""
  countNotEmptyIntroVideo: Int

  """Percentage of empty values for introVideo"""
  percentageEmptyIntroVideo: Float

  """Percentage of non-empty values for introVideo"""
  percentageNotEmptyIntroVideo: Float

  """Number of unique values for workPolicy"""
  countUniqueValuesWorkPolicy: Int

  """Number of empty values for workPolicy"""
  countEmptyWorkPolicy: Int

  """Number of non-empty values for workPolicy"""
  countNotEmptyWorkPolicy: Int

  """Percentage of empty values for workPolicy"""
  percentageEmptyWorkPolicy: Float

  """Percentage of non-empty values for workPolicy"""
  percentageNotEmptyWorkPolicy: Float

  """Number of unique values for visaSponsorship"""
  countUniqueValuesVisaSponsorship: Int

  """Number of empty values for visaSponsorship"""
  countEmptyVisaSponsorship: Int

  """Number of non-empty values for visaSponsorship"""
  countNotEmptyVisaSponsorship: Int

  """Percentage of empty values for visaSponsorship"""
  percentageEmptyVisaSponsorship: Float

  """Percentage of non-empty values for visaSponsorship"""
  percentageNotEmptyVisaSponsorship: Float

  """Count of true values in the field visaSponsorship"""
  countTrueVisaSponsorship: Int

  """Count of false values in the field visaSponsorship"""
  countFalseVisaSponsorship: Int
  edges: [CompanyEdge!]
  pageInfo: PageInfo
}

"""A connected account"""
type ConnectedAccountConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for handle"""
  countUniqueValuesHandle: Int

  """Number of empty values for handle"""
  countEmptyHandle: Int

  """Number of non-empty values for handle"""
  countNotEmptyHandle: Int

  """Percentage of empty values for handle"""
  percentageEmptyHandle: Float

  """Percentage of non-empty values for handle"""
  percentageNotEmptyHandle: Float

  """Number of unique values for provider"""
  countUniqueValuesProvider: Int

  """Number of empty values for provider"""
  countEmptyProvider: Int

  """Number of non-empty values for provider"""
  countNotEmptyProvider: Int

  """Percentage of empty values for provider"""
  percentageEmptyProvider: Float

  """Percentage of non-empty values for provider"""
  percentageNotEmptyProvider: Float

  """Number of unique values for accessToken"""
  countUniqueValuesAccessToken: Int

  """Number of empty values for accessToken"""
  countEmptyAccessToken: Int

  """Number of non-empty values for accessToken"""
  countNotEmptyAccessToken: Int

  """Percentage of empty values for accessToken"""
  percentageEmptyAccessToken: Float

  """Percentage of non-empty values for accessToken"""
  percentageNotEmptyAccessToken: Float

  """Number of unique values for refreshToken"""
  countUniqueValuesRefreshToken: Int

  """Number of empty values for refreshToken"""
  countEmptyRefreshToken: Int

  """Number of non-empty values for refreshToken"""
  countNotEmptyRefreshToken: Int

  """Percentage of empty values for refreshToken"""
  percentageEmptyRefreshToken: Float

  """Percentage of non-empty values for refreshToken"""
  percentageNotEmptyRefreshToken: Float

  """Number of unique values for lastSyncHistoryId"""
  countUniqueValuesLastSyncHistoryId: Int

  """Number of empty values for lastSyncHistoryId"""
  countEmptyLastSyncHistoryId: Int

  """Number of non-empty values for lastSyncHistoryId"""
  countNotEmptyLastSyncHistoryId: Int

  """Percentage of empty values for lastSyncHistoryId"""
  percentageEmptyLastSyncHistoryId: Float

  """Percentage of non-empty values for lastSyncHistoryId"""
  percentageNotEmptyLastSyncHistoryId: Float

  """Number of unique values for authFailedAt"""
  countUniqueValuesAuthFailedAt: Int

  """Number of empty values for authFailedAt"""
  countEmptyAuthFailedAt: Int

  """Number of non-empty values for authFailedAt"""
  countNotEmptyAuthFailedAt: Int

  """Percentage of empty values for authFailedAt"""
  percentageEmptyAuthFailedAt: Float

  """Percentage of non-empty values for authFailedAt"""
  percentageNotEmptyAuthFailedAt: Float

  """Earliest date contained in the field authFailedAt"""
  minAuthFailedAt: DateTime

  """Latest date contained in the field authFailedAt"""
  maxAuthFailedAt: DateTime

  """Number of unique values for handleAliases"""
  countUniqueValuesHandleAliases: Int

  """Number of empty values for handleAliases"""
  countEmptyHandleAliases: Int

  """Number of non-empty values for handleAliases"""
  countNotEmptyHandleAliases: Int

  """Percentage of empty values for handleAliases"""
  percentageEmptyHandleAliases: Float

  """Percentage of non-empty values for handleAliases"""
  percentageNotEmptyHandleAliases: Float

  """Number of unique values for scopes"""
  countUniqueValuesScopes: Int

  """Number of empty values for scopes"""
  countEmptyScopes: Int

  """Number of non-empty values for scopes"""
  countNotEmptyScopes: Int

  """Percentage of empty values for scopes"""
  percentageEmptyScopes: Float

  """Percentage of non-empty values for scopes"""
  percentageNotEmptyScopes: Float

  """Number of unique values for connectionParameters"""
  countUniqueValuesConnectionParameters: Int

  """Number of empty values for connectionParameters"""
  countEmptyConnectionParameters: Int

  """Number of non-empty values for connectionParameters"""
  countNotEmptyConnectionParameters: Int

  """Percentage of empty values for connectionParameters"""
  percentageEmptyConnectionParameters: Float

  """Percentage of non-empty values for connectionParameters"""
  percentageNotEmptyConnectionParameters: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [ConnectedAccountEdge!]
  pageInfo: PageInfo
}

"""A favorite that can be accessed from the left menu"""
type FavoriteConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Minimum amount contained in the field position"""
  minPosition: Float

  """Maximum amount contained in the field position"""
  maxPosition: Float

  """Average amount contained in the field position"""
  avgPosition: Float

  """Sum of amounts contained in the field position"""
  sumPosition: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [FavoriteEdge!]
  pageInfo: PageInfo
}

"""A Folder of favorites"""
type FavoriteFolderConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Minimum amount contained in the field position"""
  minPosition: Float

  """Maximum amount contained in the field position"""
  maxPosition: Float

  """Average amount contained in the field position"""
  avgPosition: Float

  """Sum of amounts contained in the field position"""
  sumPosition: Float

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [FavoriteFolderEdge!]
  pageInfo: PageInfo
}

"""Aggregated / filtered event to be displayed on the timeline"""
type TimelineActivityConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for happensAt"""
  countUniqueValuesHappensAt: Int

  """Number of empty values for happensAt"""
  countEmptyHappensAt: Int

  """Number of non-empty values for happensAt"""
  countNotEmptyHappensAt: Int

  """Percentage of empty values for happensAt"""
  percentageEmptyHappensAt: Float

  """Percentage of non-empty values for happensAt"""
  percentageNotEmptyHappensAt: Float

  """Earliest date contained in the field happensAt"""
  minHappensAt: DateTime

  """Latest date contained in the field happensAt"""
  maxHappensAt: DateTime

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for properties"""
  countUniqueValuesProperties: Int

  """Number of empty values for properties"""
  countEmptyProperties: Int

  """Number of non-empty values for properties"""
  countNotEmptyProperties: Int

  """Percentage of empty values for properties"""
  percentageEmptyProperties: Float

  """Percentage of non-empty values for properties"""
  percentageNotEmptyProperties: Float

  """Number of unique values for linkedRecordCachedName"""
  countUniqueValuesLinkedRecordCachedName: Int

  """Number of empty values for linkedRecordCachedName"""
  countEmptyLinkedRecordCachedName: Int

  """Number of non-empty values for linkedRecordCachedName"""
  countNotEmptyLinkedRecordCachedName: Int

  """Percentage of empty values for linkedRecordCachedName"""
  percentageEmptyLinkedRecordCachedName: Float

  """Percentage of non-empty values for linkedRecordCachedName"""
  percentageNotEmptyLinkedRecordCachedName: Float

  """Number of unique values for linkedRecordId"""
  countUniqueValuesLinkedRecordId: Int

  """Number of empty values for linkedRecordId"""
  countEmptyLinkedRecordId: Int

  """Number of non-empty values for linkedRecordId"""
  countNotEmptyLinkedRecordId: Int

  """Percentage of empty values for linkedRecordId"""
  percentageEmptyLinkedRecordId: Float

  """Percentage of non-empty values for linkedRecordId"""
  percentageNotEmptyLinkedRecordId: Float

  """Number of unique values for linkedObjectMetadataId"""
  countUniqueValuesLinkedObjectMetadataId: Int

  """Number of empty values for linkedObjectMetadataId"""
  countEmptyLinkedObjectMetadataId: Int

  """Number of non-empty values for linkedObjectMetadataId"""
  countNotEmptyLinkedObjectMetadataId: Int

  """Percentage of empty values for linkedObjectMetadataId"""
  percentageEmptyLinkedObjectMetadataId: Float

  """Percentage of non-empty values for linkedObjectMetadataId"""
  percentageNotEmptyLinkedObjectMetadataId: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [TimelineActivityEdge!]
  pageInfo: PageInfo
}

"""(System) View Fields"""
type ViewFieldConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for fieldMetadataId"""
  countUniqueValuesFieldMetadataId: Int

  """Number of empty values for fieldMetadataId"""
  countEmptyFieldMetadataId: Int

  """Number of non-empty values for fieldMetadataId"""
  countNotEmptyFieldMetadataId: Int

  """Percentage of empty values for fieldMetadataId"""
  percentageEmptyFieldMetadataId: Float

  """Percentage of non-empty values for fieldMetadataId"""
  percentageNotEmptyFieldMetadataId: Float

  """Number of unique values for isVisible"""
  countUniqueValuesIsVisible: Int

  """Number of empty values for isVisible"""
  countEmptyIsVisible: Int

  """Number of non-empty values for isVisible"""
  countNotEmptyIsVisible: Int

  """Percentage of empty values for isVisible"""
  percentageEmptyIsVisible: Float

  """Percentage of non-empty values for isVisible"""
  percentageNotEmptyIsVisible: Float

  """Count of true values in the field isVisible"""
  countTrueIsVisible: Int

  """Count of false values in the field isVisible"""
  countFalseIsVisible: Int

  """Number of unique values for size"""
  countUniqueValuesSize: Int

  """Number of empty values for size"""
  countEmptySize: Int

  """Number of non-empty values for size"""
  countNotEmptySize: Int

  """Percentage of empty values for size"""
  percentageEmptySize: Float

  """Percentage of non-empty values for size"""
  percentageNotEmptySize: Float

  """Minimum amount contained in the field size"""
  minSize: Float

  """Maximum amount contained in the field size"""
  maxSize: Float

  """Average amount contained in the field size"""
  avgSize: Float

  """Sum of amounts contained in the field size"""
  sumSize: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Minimum amount contained in the field position"""
  minPosition: Float

  """Maximum amount contained in the field position"""
  maxPosition: Float

  """Average amount contained in the field position"""
  avgPosition: Float

  """Sum of amounts contained in the field position"""
  sumPosition: Float

  """Number of unique values for aggregateOperation"""
  countUniqueValuesAggregateOperation: Int

  """Number of empty values for aggregateOperation"""
  countEmptyAggregateOperation: Int

  """Number of non-empty values for aggregateOperation"""
  countNotEmptyAggregateOperation: Int

  """Percentage of empty values for aggregateOperation"""
  percentageEmptyAggregateOperation: Float

  """Percentage of non-empty values for aggregateOperation"""
  percentageNotEmptyAggregateOperation: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [ViewFieldEdge!]
  pageInfo: PageInfo
}

"""(System) View Filter Groups"""
type ViewFilterGroupConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for logicalOperator"""
  countUniqueValuesLogicalOperator: Int

  """Number of empty values for logicalOperator"""
  countEmptyLogicalOperator: Int

  """Number of non-empty values for logicalOperator"""
  countNotEmptyLogicalOperator: Int

  """Percentage of empty values for logicalOperator"""
  percentageEmptyLogicalOperator: Float

  """Percentage of non-empty values for logicalOperator"""
  percentageNotEmptyLogicalOperator: Float

  """Number of unique values for positionInViewFilterGroup"""
  countUniqueValuesPositionInViewFilterGroup: Int

  """Number of empty values for positionInViewFilterGroup"""
  countEmptyPositionInViewFilterGroup: Int

  """Number of non-empty values for positionInViewFilterGroup"""
  countNotEmptyPositionInViewFilterGroup: Int

  """Percentage of empty values for positionInViewFilterGroup"""
  percentageEmptyPositionInViewFilterGroup: Float

  """Percentage of non-empty values for positionInViewFilterGroup"""
  percentageNotEmptyPositionInViewFilterGroup: Float

  """Minimum amount contained in the field positionInViewFilterGroup"""
  minPositionInViewFilterGroup: Float

  """Maximum amount contained in the field positionInViewFilterGroup"""
  maxPositionInViewFilterGroup: Float

  """Average amount contained in the field positionInViewFilterGroup"""
  avgPositionInViewFilterGroup: Float

  """Sum of amounts contained in the field positionInViewFilterGroup"""
  sumPositionInViewFilterGroup: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime

  """Number of unique values for parentViewFilterGroupId"""
  countUniqueValuesParentViewFilterGroupId: Int

  """Number of empty values for parentViewFilterGroupId"""
  countEmptyParentViewFilterGroupId: Int

  """Number of non-empty values for parentViewFilterGroupId"""
  countNotEmptyParentViewFilterGroupId: Int

  """Percentage of empty values for parentViewFilterGroupId"""
  percentageEmptyParentViewFilterGroupId: Float

  """Percentage of non-empty values for parentViewFilterGroupId"""
  percentageNotEmptyParentViewFilterGroupId: Float
  edges: [ViewFilterGroupEdge!]
  pageInfo: PageInfo
}

"""(System) View Groups"""
type ViewGroupConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for fieldMetadataId"""
  countUniqueValuesFieldMetadataId: Int

  """Number of empty values for fieldMetadataId"""
  countEmptyFieldMetadataId: Int

  """Number of non-empty values for fieldMetadataId"""
  countNotEmptyFieldMetadataId: Int

  """Percentage of empty values for fieldMetadataId"""
  percentageEmptyFieldMetadataId: Float

  """Percentage of non-empty values for fieldMetadataId"""
  percentageNotEmptyFieldMetadataId: Float

  """Number of unique values for isVisible"""
  countUniqueValuesIsVisible: Int

  """Number of empty values for isVisible"""
  countEmptyIsVisible: Int

  """Number of non-empty values for isVisible"""
  countNotEmptyIsVisible: Int

  """Percentage of empty values for isVisible"""
  percentageEmptyIsVisible: Float

  """Percentage of non-empty values for isVisible"""
  percentageNotEmptyIsVisible: Float

  """Count of true values in the field isVisible"""
  countTrueIsVisible: Int

  """Count of false values in the field isVisible"""
  countFalseIsVisible: Int

  """Number of unique values for fieldValue"""
  countUniqueValuesFieldValue: Int

  """Number of empty values for fieldValue"""
  countEmptyFieldValue: Int

  """Number of non-empty values for fieldValue"""
  countNotEmptyFieldValue: Int

  """Percentage of empty values for fieldValue"""
  percentageEmptyFieldValue: Float

  """Percentage of non-empty values for fieldValue"""
  percentageNotEmptyFieldValue: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Minimum amount contained in the field position"""
  minPosition: Float

  """Maximum amount contained in the field position"""
  maxPosition: Float

  """Average amount contained in the field position"""
  avgPosition: Float

  """Sum of amounts contained in the field position"""
  sumPosition: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [ViewGroupEdge!]
  pageInfo: PageInfo
}

"""(System) View Filters"""
type ViewFilterConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for fieldMetadataId"""
  countUniqueValuesFieldMetadataId: Int

  """Number of empty values for fieldMetadataId"""
  countEmptyFieldMetadataId: Int

  """Number of non-empty values for fieldMetadataId"""
  countNotEmptyFieldMetadataId: Int

  """Percentage of empty values for fieldMetadataId"""
  percentageEmptyFieldMetadataId: Float

  """Percentage of non-empty values for fieldMetadataId"""
  percentageNotEmptyFieldMetadataId: Float

  """Number of unique values for operand"""
  countUniqueValuesOperand: Int

  """Number of empty values for operand"""
  countEmptyOperand: Int

  """Number of non-empty values for operand"""
  countNotEmptyOperand: Int

  """Percentage of empty values for operand"""
  percentageEmptyOperand: Float

  """Percentage of non-empty values for operand"""
  percentageNotEmptyOperand: Float

  """Number of unique values for value"""
  countUniqueValuesValue: Int

  """Number of empty values for value"""
  countEmptyValue: Int

  """Number of non-empty values for value"""
  countNotEmptyValue: Int

  """Percentage of empty values for value"""
  percentageEmptyValue: Float

  """Percentage of non-empty values for value"""
  percentageNotEmptyValue: Float

  """Number of unique values for displayValue"""
  countUniqueValuesDisplayValue: Int

  """Number of empty values for displayValue"""
  countEmptyDisplayValue: Int

  """Number of non-empty values for displayValue"""
  countNotEmptyDisplayValue: Int

  """Percentage of empty values for displayValue"""
  percentageEmptyDisplayValue: Float

  """Percentage of non-empty values for displayValue"""
  percentageNotEmptyDisplayValue: Float

  """Number of unique values for viewFilterGroupId"""
  countUniqueValuesViewFilterGroupId: Int

  """Number of empty values for viewFilterGroupId"""
  countEmptyViewFilterGroupId: Int

  """Number of non-empty values for viewFilterGroupId"""
  countNotEmptyViewFilterGroupId: Int

  """Percentage of empty values for viewFilterGroupId"""
  percentageEmptyViewFilterGroupId: Float

  """Percentage of non-empty values for viewFilterGroupId"""
  percentageNotEmptyViewFilterGroupId: Float

  """Number of unique values for positionInViewFilterGroup"""
  countUniqueValuesPositionInViewFilterGroup: Int

  """Number of empty values for positionInViewFilterGroup"""
  countEmptyPositionInViewFilterGroup: Int

  """Number of non-empty values for positionInViewFilterGroup"""
  countNotEmptyPositionInViewFilterGroup: Int

  """Percentage of empty values for positionInViewFilterGroup"""
  percentageEmptyPositionInViewFilterGroup: Float

  """Percentage of non-empty values for positionInViewFilterGroup"""
  percentageNotEmptyPositionInViewFilterGroup: Float

  """Minimum amount contained in the field positionInViewFilterGroup"""
  minPositionInViewFilterGroup: Float

  """Maximum amount contained in the field positionInViewFilterGroup"""
  maxPositionInViewFilterGroup: Float

  """Average amount contained in the field positionInViewFilterGroup"""
  avgPositionInViewFilterGroup: Float

  """Sum of amounts contained in the field positionInViewFilterGroup"""
  sumPositionInViewFilterGroup: Float

  """Number of unique values for subFieldName"""
  countUniqueValuesSubFieldName: Int

  """Number of empty values for subFieldName"""
  countEmptySubFieldName: Int

  """Number of non-empty values for subFieldName"""
  countNotEmptySubFieldName: Int

  """Percentage of empty values for subFieldName"""
  percentageEmptySubFieldName: Float

  """Percentage of non-empty values for subFieldName"""
  percentageNotEmptySubFieldName: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [ViewFilterEdge!]
  pageInfo: PageInfo
}

"""(System) View Sorts"""
type ViewSortConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for fieldMetadataId"""
  countUniqueValuesFieldMetadataId: Int

  """Number of empty values for fieldMetadataId"""
  countEmptyFieldMetadataId: Int

  """Number of non-empty values for fieldMetadataId"""
  countNotEmptyFieldMetadataId: Int

  """Percentage of empty values for fieldMetadataId"""
  percentageEmptyFieldMetadataId: Float

  """Percentage of non-empty values for fieldMetadataId"""
  percentageNotEmptyFieldMetadataId: Float

  """Number of unique values for direction"""
  countUniqueValuesDirection: Int

  """Number of empty values for direction"""
  countEmptyDirection: Int

  """Number of non-empty values for direction"""
  countNotEmptyDirection: Int

  """Percentage of empty values for direction"""
  percentageEmptyDirection: Float

  """Percentage of non-empty values for direction"""
  percentageNotEmptyDirection: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [ViewSortEdge!]
  pageInfo: PageInfo
}

"""(System) Views"""
type ViewConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for objectMetadataId"""
  countUniqueValuesObjectMetadataId: Int

  """Number of empty values for objectMetadataId"""
  countEmptyObjectMetadataId: Int

  """Number of non-empty values for objectMetadataId"""
  countNotEmptyObjectMetadataId: Int

  """Percentage of empty values for objectMetadataId"""
  percentageEmptyObjectMetadataId: Float

  """Percentage of non-empty values for objectMetadataId"""
  percentageNotEmptyObjectMetadataId: Float

  """Number of unique values for type"""
  countUniqueValuesType: Int

  """Number of empty values for type"""
  countEmptyType: Int

  """Number of non-empty values for type"""
  countNotEmptyType: Int

  """Percentage of empty values for type"""
  percentageEmptyType: Float

  """Percentage of non-empty values for type"""
  percentageNotEmptyType: Float

  """Number of unique values for key"""
  countUniqueValuesKey: Int

  """Number of empty values for key"""
  countEmptyKey: Int

  """Number of non-empty values for key"""
  countNotEmptyKey: Int

  """Percentage of empty values for key"""
  percentageEmptyKey: Float

  """Percentage of non-empty values for key"""
  percentageNotEmptyKey: Float

  """Number of unique values for icon"""
  countUniqueValuesIcon: Int

  """Number of empty values for icon"""
  countEmptyIcon: Int

  """Number of non-empty values for icon"""
  countNotEmptyIcon: Int

  """Percentage of empty values for icon"""
  percentageEmptyIcon: Float

  """Percentage of non-empty values for icon"""
  percentageNotEmptyIcon: Float

  """Number of unique values for kanbanFieldMetadataId"""
  countUniqueValuesKanbanFieldMetadataId: Int

  """Number of empty values for kanbanFieldMetadataId"""
  countEmptyKanbanFieldMetadataId: Int

  """Number of non-empty values for kanbanFieldMetadataId"""
  countNotEmptyKanbanFieldMetadataId: Int

  """Percentage of empty values for kanbanFieldMetadataId"""
  percentageEmptyKanbanFieldMetadataId: Float

  """Percentage of non-empty values for kanbanFieldMetadataId"""
  percentageNotEmptyKanbanFieldMetadataId: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for isCompact"""
  countUniqueValuesIsCompact: Int

  """Number of empty values for isCompact"""
  countEmptyIsCompact: Int

  """Number of non-empty values for isCompact"""
  countNotEmptyIsCompact: Int

  """Percentage of empty values for isCompact"""
  percentageEmptyIsCompact: Float

  """Percentage of non-empty values for isCompact"""
  percentageNotEmptyIsCompact: Float

  """Count of true values in the field isCompact"""
  countTrueIsCompact: Int

  """Count of false values in the field isCompact"""
  countFalseIsCompact: Int

  """Number of unique values for openRecordIn"""
  countUniqueValuesOpenRecordIn: Int

  """Number of empty values for openRecordIn"""
  countEmptyOpenRecordIn: Int

  """Number of non-empty values for openRecordIn"""
  countNotEmptyOpenRecordIn: Int

  """Percentage of empty values for openRecordIn"""
  percentageEmptyOpenRecordIn: Float

  """Percentage of non-empty values for openRecordIn"""
  percentageNotEmptyOpenRecordIn: Float

  """Number of unique values for kanbanAggregateOperation"""
  countUniqueValuesKanbanAggregateOperation: Int

  """Number of empty values for kanbanAggregateOperation"""
  countEmptyKanbanAggregateOperation: Int

  """Number of non-empty values for kanbanAggregateOperation"""
  countNotEmptyKanbanAggregateOperation: Int

  """Percentage of empty values for kanbanAggregateOperation"""
  percentageEmptyKanbanAggregateOperation: Float

  """Percentage of non-empty values for kanbanAggregateOperation"""
  percentageNotEmptyKanbanAggregateOperation: Float

  """Number of unique values for kanbanAggregateOperationFieldMetadataId"""
  countUniqueValuesKanbanAggregateOperationFieldMetadataId: Int

  """Number of empty values for kanbanAggregateOperationFieldMetadataId"""
  countEmptyKanbanAggregateOperationFieldMetadataId: Int

  """Number of non-empty values for kanbanAggregateOperationFieldMetadataId"""
  countNotEmptyKanbanAggregateOperationFieldMetadataId: Int

  """Percentage of empty values for kanbanAggregateOperationFieldMetadataId"""
  percentageEmptyKanbanAggregateOperationFieldMetadataId: Float

  """
  Percentage of non-empty values for kanbanAggregateOperationFieldMetadataId
  """
  percentageNotEmptyKanbanAggregateOperationFieldMetadataId: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [ViewEdge!]
  pageInfo: PageInfo
}

"""A webhook"""
type WebhookConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for targetUrl"""
  countUniqueValuesTargetUrl: Int

  """Number of empty values for targetUrl"""
  countEmptyTargetUrl: Int

  """Number of non-empty values for targetUrl"""
  countNotEmptyTargetUrl: Int

  """Percentage of empty values for targetUrl"""
  percentageEmptyTargetUrl: Float

  """Percentage of non-empty values for targetUrl"""
  percentageNotEmptyTargetUrl: Float

  """Number of unique values for operations"""
  countUniqueValuesOperations: Int

  """Number of empty values for operations"""
  countEmptyOperations: Int

  """Number of non-empty values for operations"""
  countNotEmptyOperations: Int

  """Percentage of empty values for operations"""
  percentageEmptyOperations: Float

  """Percentage of non-empty values for operations"""
  percentageNotEmptyOperations: Float

  """Number of unique values for description"""
  countUniqueValuesDescription: Int

  """Number of empty values for description"""
  countEmptyDescription: Int

  """Number of non-empty values for description"""
  countNotEmptyDescription: Int

  """Percentage of empty values for description"""
  percentageEmptyDescription: Float

  """Percentage of non-empty values for description"""
  percentageNotEmptyDescription: Float

  """Number of unique values for secret"""
  countUniqueValuesSecret: Int

  """Number of empty values for secret"""
  countEmptySecret: Int

  """Number of non-empty values for secret"""
  countNotEmptySecret: Int

  """Percentage of empty values for secret"""
  percentageEmptySecret: Float

  """Percentage of non-empty values for secret"""
  percentageNotEmptySecret: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [WebhookEdge!]
  pageInfo: PageInfo
}

"""A workflow"""
type WorkflowConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for lastPublishedVersionId"""
  countUniqueValuesLastPublishedVersionId: Int

  """Number of empty values for lastPublishedVersionId"""
  countEmptyLastPublishedVersionId: Int

  """Number of non-empty values for lastPublishedVersionId"""
  countNotEmptyLastPublishedVersionId: Int

  """Percentage of empty values for lastPublishedVersionId"""
  percentageEmptyLastPublishedVersionId: Float

  """Percentage of non-empty values for lastPublishedVersionId"""
  percentageNotEmptyLastPublishedVersionId: Float

  """Number of unique values for statuses"""
  countUniqueValuesStatuses: Int

  """Number of empty values for statuses"""
  countEmptyStatuses: Int

  """Number of non-empty values for statuses"""
  countNotEmptyStatuses: Int

  """Percentage of empty values for statuses"""
  percentageEmptyStatuses: Float

  """Percentage of non-empty values for statuses"""
  percentageNotEmptyStatuses: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for createdBy"""
  countUniqueValuesCreatedBy: Int

  """Number of empty values for createdBy"""
  countEmptyCreatedBy: Int

  """Number of non-empty values for createdBy"""
  countNotEmptyCreatedBy: Int

  """Percentage of empty values for createdBy"""
  percentageEmptyCreatedBy: Float

  """Percentage of non-empty values for createdBy"""
  percentageNotEmptyCreatedBy: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [WorkflowEdge!]
  pageInfo: PageInfo
}

"""A workflow version"""
type WorkflowVersionConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for trigger"""
  countUniqueValuesTrigger: Int

  """Number of empty values for trigger"""
  countEmptyTrigger: Int

  """Number of non-empty values for trigger"""
  countNotEmptyTrigger: Int

  """Percentage of empty values for trigger"""
  percentageEmptyTrigger: Float

  """Percentage of non-empty values for trigger"""
  percentageNotEmptyTrigger: Float

  """Number of unique values for steps"""
  countUniqueValuesSteps: Int

  """Number of empty values for steps"""
  countEmptySteps: Int

  """Number of non-empty values for steps"""
  countNotEmptySteps: Int

  """Percentage of empty values for steps"""
  percentageEmptySteps: Float

  """Percentage of non-empty values for steps"""
  percentageNotEmptySteps: Float

  """Number of unique values for status"""
  countUniqueValuesStatus: Int

  """Number of empty values for status"""
  countEmptyStatus: Int

  """Number of non-empty values for status"""
  countNotEmptyStatus: Int

  """Percentage of empty values for status"""
  percentageEmptyStatus: Float

  """Percentage of non-empty values for status"""
  percentageNotEmptyStatus: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [WorkflowVersionEdge!]
  pageInfo: PageInfo
}

"""A workflow run"""
type WorkflowRunConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for startedAt"""
  countUniqueValuesStartedAt: Int

  """Number of empty values for startedAt"""
  countEmptyStartedAt: Int

  """Number of non-empty values for startedAt"""
  countNotEmptyStartedAt: Int

  """Percentage of empty values for startedAt"""
  percentageEmptyStartedAt: Float

  """Percentage of non-empty values for startedAt"""
  percentageNotEmptyStartedAt: Float

  """Earliest date contained in the field startedAt"""
  minStartedAt: DateTime

  """Latest date contained in the field startedAt"""
  maxStartedAt: DateTime

  """Number of unique values for endedAt"""
  countUniqueValuesEndedAt: Int

  """Number of empty values for endedAt"""
  countEmptyEndedAt: Int

  """Number of non-empty values for endedAt"""
  countNotEmptyEndedAt: Int

  """Percentage of empty values for endedAt"""
  percentageEmptyEndedAt: Float

  """Percentage of non-empty values for endedAt"""
  percentageNotEmptyEndedAt: Float

  """Earliest date contained in the field endedAt"""
  minEndedAt: DateTime

  """Latest date contained in the field endedAt"""
  maxEndedAt: DateTime

  """Number of unique values for status"""
  countUniqueValuesStatus: Int

  """Number of empty values for status"""
  countEmptyStatus: Int

  """Number of non-empty values for status"""
  countNotEmptyStatus: Int

  """Percentage of empty values for status"""
  percentageEmptyStatus: Float

  """Percentage of non-empty values for status"""
  percentageNotEmptyStatus: Float

  """Number of unique values for createdBy"""
  countUniqueValuesCreatedBy: Int

  """Number of empty values for createdBy"""
  countEmptyCreatedBy: Int

  """Number of non-empty values for createdBy"""
  countNotEmptyCreatedBy: Int

  """Percentage of empty values for createdBy"""
  percentageEmptyCreatedBy: Float

  """Percentage of non-empty values for createdBy"""
  percentageNotEmptyCreatedBy: Float

  """Number of unique values for output"""
  countUniqueValuesOutput: Int

  """Number of empty values for output"""
  countEmptyOutput: Int

  """Number of non-empty values for output"""
  countNotEmptyOutput: Int

  """Percentage of empty values for output"""
  percentageEmptyOutput: Float

  """Percentage of non-empty values for output"""
  percentageNotEmptyOutput: Float

  """Number of unique values for context"""
  countUniqueValuesContext: Int

  """Number of empty values for context"""
  countEmptyContext: Int

  """Number of non-empty values for context"""
  countNotEmptyContext: Int

  """Percentage of empty values for context"""
  percentageEmptyContext: Float

  """Percentage of non-empty values for context"""
  percentageNotEmptyContext: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [WorkflowRunEdge!]
  pageInfo: PageInfo
}

"""A workflow automated trigger"""
type WorkflowAutomatedTriggerConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for type"""
  countUniqueValuesType: Int

  """Number of empty values for type"""
  countEmptyType: Int

  """Number of non-empty values for type"""
  countNotEmptyType: Int

  """Percentage of empty values for type"""
  percentageEmptyType: Float

  """Percentage of non-empty values for type"""
  percentageNotEmptyType: Float

  """Number of unique values for settings"""
  countUniqueValuesSettings: Int

  """Number of empty values for settings"""
  countEmptySettings: Int

  """Number of non-empty values for settings"""
  countNotEmptySettings: Int

  """Percentage of empty values for settings"""
  percentageEmptySettings: Float

  """Percentage of non-empty values for settings"""
  percentageNotEmptySettings: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [WorkflowAutomatedTriggerEdge!]
  pageInfo: PageInfo
}

"""A workspace member"""
type WorkspaceMemberConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for colorScheme"""
  countUniqueValuesColorScheme: Int

  """Number of empty values for colorScheme"""
  countEmptyColorScheme: Int

  """Number of non-empty values for colorScheme"""
  countNotEmptyColorScheme: Int

  """Percentage of empty values for colorScheme"""
  percentageEmptyColorScheme: Float

  """Percentage of non-empty values for colorScheme"""
  percentageNotEmptyColorScheme: Float

  """Number of unique values for locale"""
  countUniqueValuesLocale: Int

  """Number of empty values for locale"""
  countEmptyLocale: Int

  """Number of non-empty values for locale"""
  countNotEmptyLocale: Int

  """Percentage of empty values for locale"""
  percentageEmptyLocale: Float

  """Percentage of non-empty values for locale"""
  percentageNotEmptyLocale: Float

  """Number of unique values for avatarUrl"""
  countUniqueValuesAvatarUrl: Int

  """Number of empty values for avatarUrl"""
  countEmptyAvatarUrl: Int

  """Number of non-empty values for avatarUrl"""
  countNotEmptyAvatarUrl: Int

  """Percentage of empty values for avatarUrl"""
  percentageEmptyAvatarUrl: Float

  """Percentage of non-empty values for avatarUrl"""
  percentageNotEmptyAvatarUrl: Float

  """Number of unique values for userEmail"""
  countUniqueValuesUserEmail: Int

  """Number of empty values for userEmail"""
  countEmptyUserEmail: Int

  """Number of non-empty values for userEmail"""
  countNotEmptyUserEmail: Int

  """Percentage of empty values for userEmail"""
  percentageEmptyUserEmail: Float

  """Percentage of non-empty values for userEmail"""
  percentageNotEmptyUserEmail: Float

  """Number of unique values for userId"""
  countUniqueValuesUserId: Int

  """Number of empty values for userId"""
  countEmptyUserId: Int

  """Number of non-empty values for userId"""
  countNotEmptyUserId: Int

  """Percentage of empty values for userId"""
  percentageEmptyUserId: Float

  """Percentage of non-empty values for userId"""
  percentageNotEmptyUserId: Float

  """Number of unique values for timeZone"""
  countUniqueValuesTimeZone: Int

  """Number of empty values for timeZone"""
  countEmptyTimeZone: Int

  """Number of non-empty values for timeZone"""
  countNotEmptyTimeZone: Int

  """Percentage of empty values for timeZone"""
  percentageEmptyTimeZone: Float

  """Percentage of non-empty values for timeZone"""
  percentageNotEmptyTimeZone: Float

  """Number of unique values for dateFormat"""
  countUniqueValuesDateFormat: Int

  """Number of empty values for dateFormat"""
  countEmptyDateFormat: Int

  """Number of non-empty values for dateFormat"""
  countNotEmptyDateFormat: Int

  """Percentage of empty values for dateFormat"""
  percentageEmptyDateFormat: Float

  """Percentage of non-empty values for dateFormat"""
  percentageNotEmptyDateFormat: Float

  """Number of unique values for timeFormat"""
  countUniqueValuesTimeFormat: Int

  """Number of empty values for timeFormat"""
  countEmptyTimeFormat: Int

  """Number of non-empty values for timeFormat"""
  countNotEmptyTimeFormat: Int

  """Percentage of empty values for timeFormat"""
  percentageEmptyTimeFormat: Float

  """Percentage of non-empty values for timeFormat"""
  percentageNotEmptyTimeFormat: Float

  """Number of unique values for searchVector"""
  countUniqueValuesSearchVector: Int

  """Number of empty values for searchVector"""
  countEmptySearchVector: Int

  """Number of non-empty values for searchVector"""
  countNotEmptySearchVector: Int

  """Percentage of empty values for searchVector"""
  percentageEmptySearchVector: Float

  """Percentage of non-empty values for searchVector"""
  percentageNotEmptySearchVector: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [WorkspaceMemberEdge!]
  pageInfo: PageInfo
}

"""A note"""
type NoteConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for title"""
  countUniqueValuesTitle: Int

  """Number of empty values for title"""
  countEmptyTitle: Int

  """Number of non-empty values for title"""
  countNotEmptyTitle: Int

  """Percentage of empty values for title"""
  percentageEmptyTitle: Float

  """Percentage of non-empty values for title"""
  percentageNotEmptyTitle: Float

  """Number of unique values for body"""
  countUniqueValuesBody: Int

  """Number of empty values for body"""
  countEmptyBody: Int

  """Number of non-empty values for body"""
  countNotEmptyBody: Int

  """Percentage of empty values for body"""
  percentageEmptyBody: Float

  """Percentage of non-empty values for body"""
  percentageNotEmptyBody: Float

  """Number of unique values for bodyV2"""
  countUniqueValuesBodyV2: Int

  """Number of empty values for bodyV2"""
  countEmptyBodyV2: Int

  """Number of non-empty values for bodyV2"""
  countNotEmptyBodyV2: Int

  """Percentage of empty values for bodyV2"""
  percentageEmptyBodyV2: Float

  """Percentage of non-empty values for bodyV2"""
  percentageNotEmptyBodyV2: Float

  """Number of unique values for createdBy"""
  countUniqueValuesCreatedBy: Int

  """Number of empty values for createdBy"""
  countEmptyCreatedBy: Int

  """Number of non-empty values for createdBy"""
  countNotEmptyCreatedBy: Int

  """Percentage of empty values for createdBy"""
  percentageEmptyCreatedBy: Float

  """Percentage of non-empty values for createdBy"""
  percentageNotEmptyCreatedBy: Float

  """Number of unique values for searchVector"""
  countUniqueValuesSearchVector: Int

  """Number of empty values for searchVector"""
  countEmptySearchVector: Int

  """Number of non-empty values for searchVector"""
  countNotEmptySearchVector: Int

  """Percentage of empty values for searchVector"""
  percentageEmptySearchVector: Float

  """Percentage of non-empty values for searchVector"""
  percentageNotEmptySearchVector: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime
  edges: [NoteEdge!]
  pageInfo: PageInfo
}

"""A task target"""
type TaskTargetConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [TaskTargetEdge!]
  pageInfo: PageInfo
}

"""A group of related messages (e.g. email thread, chat thread)"""
type MessageThreadConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [MessageThreadEdge!]
  pageInfo: PageInfo
}

"""
A message sent or received through a messaging channel (email, chat, etc.)
"""
type MessageConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for headerMessageId"""
  countUniqueValuesHeaderMessageId: Int

  """Number of empty values for headerMessageId"""
  countEmptyHeaderMessageId: Int

  """Number of non-empty values for headerMessageId"""
  countNotEmptyHeaderMessageId: Int

  """Percentage of empty values for headerMessageId"""
  percentageEmptyHeaderMessageId: Float

  """Percentage of non-empty values for headerMessageId"""
  percentageNotEmptyHeaderMessageId: Float

  """Number of unique values for subject"""
  countUniqueValuesSubject: Int

  """Number of empty values for subject"""
  countEmptySubject: Int

  """Number of non-empty values for subject"""
  countNotEmptySubject: Int

  """Percentage of empty values for subject"""
  percentageEmptySubject: Float

  """Percentage of non-empty values for subject"""
  percentageNotEmptySubject: Float

  """Number of unique values for text"""
  countUniqueValuesText: Int

  """Number of empty values for text"""
  countEmptyText: Int

  """Number of non-empty values for text"""
  countNotEmptyText: Int

  """Percentage of empty values for text"""
  percentageEmptyText: Float

  """Percentage of non-empty values for text"""
  percentageNotEmptyText: Float

  """Number of unique values for receivedAt"""
  countUniqueValuesReceivedAt: Int

  """Number of empty values for receivedAt"""
  countEmptyReceivedAt: Int

  """Number of non-empty values for receivedAt"""
  countNotEmptyReceivedAt: Int

  """Percentage of empty values for receivedAt"""
  percentageEmptyReceivedAt: Float

  """Percentage of non-empty values for receivedAt"""
  percentageNotEmptyReceivedAt: Float

  """Earliest date contained in the field receivedAt"""
  minReceivedAt: DateTime

  """Latest date contained in the field receivedAt"""
  maxReceivedAt: DateTime

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [MessageEdge!]
  pageInfo: PageInfo
}

"""Message Channels"""
type MessageChannelConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for visibility"""
  countUniqueValuesVisibility: Int

  """Number of empty values for visibility"""
  countEmptyVisibility: Int

  """Number of non-empty values for visibility"""
  countNotEmptyVisibility: Int

  """Percentage of empty values for visibility"""
  percentageEmptyVisibility: Float

  """Percentage of non-empty values for visibility"""
  percentageNotEmptyVisibility: Float

  """Number of unique values for handle"""
  countUniqueValuesHandle: Int

  """Number of empty values for handle"""
  countEmptyHandle: Int

  """Number of non-empty values for handle"""
  countNotEmptyHandle: Int

  """Percentage of empty values for handle"""
  percentageEmptyHandle: Float

  """Percentage of non-empty values for handle"""
  percentageNotEmptyHandle: Float

  """Number of unique values for type"""
  countUniqueValuesType: Int

  """Number of empty values for type"""
  countEmptyType: Int

  """Number of non-empty values for type"""
  countNotEmptyType: Int

  """Percentage of empty values for type"""
  percentageEmptyType: Float

  """Percentage of non-empty values for type"""
  percentageNotEmptyType: Float

  """Number of unique values for isContactAutoCreationEnabled"""
  countUniqueValuesIsContactAutoCreationEnabled: Int

  """Number of empty values for isContactAutoCreationEnabled"""
  countEmptyIsContactAutoCreationEnabled: Int

  """Number of non-empty values for isContactAutoCreationEnabled"""
  countNotEmptyIsContactAutoCreationEnabled: Int

  """Percentage of empty values for isContactAutoCreationEnabled"""
  percentageEmptyIsContactAutoCreationEnabled: Float

  """Percentage of non-empty values for isContactAutoCreationEnabled"""
  percentageNotEmptyIsContactAutoCreationEnabled: Float

  """Count of true values in the field isContactAutoCreationEnabled"""
  countTrueIsContactAutoCreationEnabled: Int

  """Count of false values in the field isContactAutoCreationEnabled"""
  countFalseIsContactAutoCreationEnabled: Int

  """Number of unique values for contactAutoCreationPolicy"""
  countUniqueValuesContactAutoCreationPolicy: Int

  """Number of empty values for contactAutoCreationPolicy"""
  countEmptyContactAutoCreationPolicy: Int

  """Number of non-empty values for contactAutoCreationPolicy"""
  countNotEmptyContactAutoCreationPolicy: Int

  """Percentage of empty values for contactAutoCreationPolicy"""
  percentageEmptyContactAutoCreationPolicy: Float

  """Percentage of non-empty values for contactAutoCreationPolicy"""
  percentageNotEmptyContactAutoCreationPolicy: Float

  """Number of unique values for excludeNonProfessionalEmails"""
  countUniqueValuesExcludeNonProfessionalEmails: Int

  """Number of empty values for excludeNonProfessionalEmails"""
  countEmptyExcludeNonProfessionalEmails: Int

  """Number of non-empty values for excludeNonProfessionalEmails"""
  countNotEmptyExcludeNonProfessionalEmails: Int

  """Percentage of empty values for excludeNonProfessionalEmails"""
  percentageEmptyExcludeNonProfessionalEmails: Float

  """Percentage of non-empty values for excludeNonProfessionalEmails"""
  percentageNotEmptyExcludeNonProfessionalEmails: Float

  """Count of true values in the field excludeNonProfessionalEmails"""
  countTrueExcludeNonProfessionalEmails: Int

  """Count of false values in the field excludeNonProfessionalEmails"""
  countFalseExcludeNonProfessionalEmails: Int

  """Number of unique values for excludeGroupEmails"""
  countUniqueValuesExcludeGroupEmails: Int

  """Number of empty values for excludeGroupEmails"""
  countEmptyExcludeGroupEmails: Int

  """Number of non-empty values for excludeGroupEmails"""
  countNotEmptyExcludeGroupEmails: Int

  """Percentage of empty values for excludeGroupEmails"""
  percentageEmptyExcludeGroupEmails: Float

  """Percentage of non-empty values for excludeGroupEmails"""
  percentageNotEmptyExcludeGroupEmails: Float

  """Count of true values in the field excludeGroupEmails"""
  countTrueExcludeGroupEmails: Int

  """Count of false values in the field excludeGroupEmails"""
  countFalseExcludeGroupEmails: Int

  """Number of unique values for isSyncEnabled"""
  countUniqueValuesIsSyncEnabled: Int

  """Number of empty values for isSyncEnabled"""
  countEmptyIsSyncEnabled: Int

  """Number of non-empty values for isSyncEnabled"""
  countNotEmptyIsSyncEnabled: Int

  """Percentage of empty values for isSyncEnabled"""
  percentageEmptyIsSyncEnabled: Float

  """Percentage of non-empty values for isSyncEnabled"""
  percentageNotEmptyIsSyncEnabled: Float

  """Count of true values in the field isSyncEnabled"""
  countTrueIsSyncEnabled: Int

  """Count of false values in the field isSyncEnabled"""
  countFalseIsSyncEnabled: Int

  """Number of unique values for syncCursor"""
  countUniqueValuesSyncCursor: Int

  """Number of empty values for syncCursor"""
  countEmptySyncCursor: Int

  """Number of non-empty values for syncCursor"""
  countNotEmptySyncCursor: Int

  """Percentage of empty values for syncCursor"""
  percentageEmptySyncCursor: Float

  """Percentage of non-empty values for syncCursor"""
  percentageNotEmptySyncCursor: Float

  """Number of unique values for syncedAt"""
  countUniqueValuesSyncedAt: Int

  """Number of empty values for syncedAt"""
  countEmptySyncedAt: Int

  """Number of non-empty values for syncedAt"""
  countNotEmptySyncedAt: Int

  """Percentage of empty values for syncedAt"""
  percentageEmptySyncedAt: Float

  """Percentage of non-empty values for syncedAt"""
  percentageNotEmptySyncedAt: Float

  """Earliest date contained in the field syncedAt"""
  minSyncedAt: DateTime

  """Latest date contained in the field syncedAt"""
  maxSyncedAt: DateTime

  """Number of unique values for syncStatus"""
  countUniqueValuesSyncStatus: Int

  """Number of empty values for syncStatus"""
  countEmptySyncStatus: Int

  """Number of non-empty values for syncStatus"""
  countNotEmptySyncStatus: Int

  """Percentage of empty values for syncStatus"""
  percentageEmptySyncStatus: Float

  """Percentage of non-empty values for syncStatus"""
  percentageNotEmptySyncStatus: Float

  """Number of unique values for syncStage"""
  countUniqueValuesSyncStage: Int

  """Number of empty values for syncStage"""
  countEmptySyncStage: Int

  """Number of non-empty values for syncStage"""
  countNotEmptySyncStage: Int

  """Percentage of empty values for syncStage"""
  percentageEmptySyncStage: Float

  """Percentage of non-empty values for syncStage"""
  percentageNotEmptySyncStage: Float

  """Number of unique values for syncStageStartedAt"""
  countUniqueValuesSyncStageStartedAt: Int

  """Number of empty values for syncStageStartedAt"""
  countEmptySyncStageStartedAt: Int

  """Number of non-empty values for syncStageStartedAt"""
  countNotEmptySyncStageStartedAt: Int

  """Percentage of empty values for syncStageStartedAt"""
  percentageEmptySyncStageStartedAt: Float

  """Percentage of non-empty values for syncStageStartedAt"""
  percentageNotEmptySyncStageStartedAt: Float

  """Earliest date contained in the field syncStageStartedAt"""
  minSyncStageStartedAt: DateTime

  """Latest date contained in the field syncStageStartedAt"""
  maxSyncStageStartedAt: DateTime

  """Number of unique values for throttleFailureCount"""
  countUniqueValuesThrottleFailureCount: Int

  """Number of empty values for throttleFailureCount"""
  countEmptyThrottleFailureCount: Int

  """Number of non-empty values for throttleFailureCount"""
  countNotEmptyThrottleFailureCount: Int

  """Percentage of empty values for throttleFailureCount"""
  percentageEmptyThrottleFailureCount: Float

  """Percentage of non-empty values for throttleFailureCount"""
  percentageNotEmptyThrottleFailureCount: Float

  """Minimum amount contained in the field throttleFailureCount"""
  minThrottleFailureCount: Float

  """Maximum amount contained in the field throttleFailureCount"""
  maxThrottleFailureCount: Float

  """Average amount contained in the field throttleFailureCount"""
  avgThrottleFailureCount: Float

  """Sum of amounts contained in the field throttleFailureCount"""
  sumThrottleFailureCount: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [MessageChannelEdge!]
  pageInfo: PageInfo
}

"""Message Participants"""
type MessageParticipantConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for role"""
  countUniqueValuesRole: Int

  """Number of empty values for role"""
  countEmptyRole: Int

  """Number of non-empty values for role"""
  countNotEmptyRole: Int

  """Percentage of empty values for role"""
  percentageEmptyRole: Float

  """Percentage of non-empty values for role"""
  percentageNotEmptyRole: Float

  """Number of unique values for handle"""
  countUniqueValuesHandle: Int

  """Number of empty values for handle"""
  countEmptyHandle: Int

  """Number of non-empty values for handle"""
  countNotEmptyHandle: Int

  """Percentage of empty values for handle"""
  percentageEmptyHandle: Float

  """Percentage of non-empty values for handle"""
  percentageNotEmptyHandle: Float

  """Number of unique values for displayName"""
  countUniqueValuesDisplayName: Int

  """Number of empty values for displayName"""
  countEmptyDisplayName: Int

  """Number of non-empty values for displayName"""
  countNotEmptyDisplayName: Int

  """Percentage of empty values for displayName"""
  percentageEmptyDisplayName: Float

  """Percentage of non-empty values for displayName"""
  percentageNotEmptyDisplayName: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [MessageParticipantEdge!]
  pageInfo: PageInfo
}

"""Folder for Message Channel"""
type MessageFolderConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for syncCursor"""
  countUniqueValuesSyncCursor: Int

  """Number of empty values for syncCursor"""
  countEmptySyncCursor: Int

  """Number of non-empty values for syncCursor"""
  countNotEmptySyncCursor: Int

  """Percentage of empty values for syncCursor"""
  percentageEmptySyncCursor: Float

  """Percentage of non-empty values for syncCursor"""
  percentageNotEmptySyncCursor: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [MessageFolderEdge!]
  pageInfo: PageInfo
}

"""Message Synced with a Message Channel"""
type MessageChannelMessageAssociationConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for messageExternalId"""
  countUniqueValuesMessageExternalId: Int

  """Number of empty values for messageExternalId"""
  countEmptyMessageExternalId: Int

  """Number of non-empty values for messageExternalId"""
  countNotEmptyMessageExternalId: Int

  """Percentage of empty values for messageExternalId"""
  percentageEmptyMessageExternalId: Float

  """Percentage of non-empty values for messageExternalId"""
  percentageNotEmptyMessageExternalId: Float

  """Number of unique values for messageThreadExternalId"""
  countUniqueValuesMessageThreadExternalId: Int

  """Number of empty values for messageThreadExternalId"""
  countEmptyMessageThreadExternalId: Int

  """Number of non-empty values for messageThreadExternalId"""
  countNotEmptyMessageThreadExternalId: Int

  """Percentage of empty values for messageThreadExternalId"""
  percentageEmptyMessageThreadExternalId: Float

  """Percentage of non-empty values for messageThreadExternalId"""
  percentageNotEmptyMessageThreadExternalId: Float

  """Number of unique values for direction"""
  countUniqueValuesDirection: Int

  """Number of empty values for direction"""
  countEmptyDirection: Int

  """Number of non-empty values for direction"""
  countNotEmptyDirection: Int

  """Percentage of empty values for direction"""
  percentageEmptyDirection: Float

  """Percentage of non-empty values for direction"""
  percentageNotEmptyDirection: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [MessageChannelMessageAssociationEdge!]
  pageInfo: PageInfo
}

"""A note target"""
type NoteTargetConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [NoteTargetEdge!]
  pageInfo: PageInfo
}

"""An opportunity"""
type OpportunityConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for amount"""
  countUniqueValuesAmount: Int

  """Number of empty values for amount"""
  countEmptyAmount: Int

  """Number of non-empty values for amount"""
  countNotEmptyAmount: Int

  """Percentage of empty values for amount"""
  percentageEmptyAmount: Float

  """Percentage of non-empty values for amount"""
  percentageNotEmptyAmount: Float

  """Minimum amount contained in the field amount"""
  minAmountAmountMicros: Float

  """Maximal amount contained in the field amount"""
  maxAmountAmountMicros: Float

  """Sum of amounts contained in the field amount"""
  sumAmountAmountMicros: Float

  """Average amount contained in the field amount"""
  avgAmountAmountMicros: Float

  """Number of unique values for closeDate"""
  countUniqueValuesCloseDate: Int

  """Number of empty values for closeDate"""
  countEmptyCloseDate: Int

  """Number of non-empty values for closeDate"""
  countNotEmptyCloseDate: Int

  """Percentage of empty values for closeDate"""
  percentageEmptyCloseDate: Float

  """Percentage of non-empty values for closeDate"""
  percentageNotEmptyCloseDate: Float

  """Earliest date contained in the field closeDate"""
  minCloseDate: DateTime

  """Latest date contained in the field closeDate"""
  maxCloseDate: DateTime

  """Number of unique values for stage"""
  countUniqueValuesStage: Int

  """Number of empty values for stage"""
  countEmptyStage: Int

  """Number of non-empty values for stage"""
  countNotEmptyStage: Int

  """Percentage of empty values for stage"""
  percentageEmptyStage: Float

  """Percentage of non-empty values for stage"""
  percentageNotEmptyStage: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for createdBy"""
  countUniqueValuesCreatedBy: Int

  """Number of empty values for createdBy"""
  countEmptyCreatedBy: Int

  """Number of non-empty values for createdBy"""
  countNotEmptyCreatedBy: Int

  """Percentage of empty values for createdBy"""
  percentageEmptyCreatedBy: Float

  """Percentage of non-empty values for createdBy"""
  percentageNotEmptyCreatedBy: Float

  """Number of unique values for searchVector"""
  countUniqueValuesSearchVector: Int

  """Number of empty values for searchVector"""
  countEmptySearchVector: Int

  """Number of non-empty values for searchVector"""
  countNotEmptySearchVector: Int

  """Percentage of empty values for searchVector"""
  percentageEmptySearchVector: Float

  """Percentage of non-empty values for searchVector"""
  percentageNotEmptySearchVector: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [OpportunityEdge!]
  pageInfo: PageInfo
}

"""A person"""
type PersonConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for emails"""
  countUniqueValuesEmails: Int

  """Number of empty values for emails"""
  countEmptyEmails: Int

  """Number of non-empty values for emails"""
  countNotEmptyEmails: Int

  """Percentage of empty values for emails"""
  percentageEmptyEmails: Float

  """Percentage of non-empty values for emails"""
  percentageNotEmptyEmails: Float

  """Number of unique values for linkedinLink"""
  countUniqueValuesLinkedinLink: Int

  """Number of empty values for linkedinLink"""
  countEmptyLinkedinLink: Int

  """Number of non-empty values for linkedinLink"""
  countNotEmptyLinkedinLink: Int

  """Percentage of empty values for linkedinLink"""
  percentageEmptyLinkedinLink: Float

  """Percentage of non-empty values for linkedinLink"""
  percentageNotEmptyLinkedinLink: Float

  """Number of unique values for xLink"""
  countUniqueValuesXLink: Int

  """Number of empty values for xLink"""
  countEmptyXLink: Int

  """Number of non-empty values for xLink"""
  countNotEmptyXLink: Int

  """Percentage of empty values for xLink"""
  percentageEmptyXLink: Float

  """Percentage of non-empty values for xLink"""
  percentageNotEmptyXLink: Float

  """Number of unique values for jobTitle"""
  countUniqueValuesJobTitle: Int

  """Number of empty values for jobTitle"""
  countEmptyJobTitle: Int

  """Number of non-empty values for jobTitle"""
  countNotEmptyJobTitle: Int

  """Percentage of empty values for jobTitle"""
  percentageEmptyJobTitle: Float

  """Percentage of non-empty values for jobTitle"""
  percentageNotEmptyJobTitle: Float

  """Number of unique values for phones"""
  countUniqueValuesPhones: Int

  """Number of empty values for phones"""
  countEmptyPhones: Int

  """Number of non-empty values for phones"""
  countNotEmptyPhones: Int

  """Percentage of empty values for phones"""
  percentageEmptyPhones: Float

  """Percentage of non-empty values for phones"""
  percentageNotEmptyPhones: Float

  """Number of unique values for city"""
  countUniqueValuesCity: Int

  """Number of empty values for city"""
  countEmptyCity: Int

  """Number of non-empty values for city"""
  countNotEmptyCity: Int

  """Percentage of empty values for city"""
  percentageEmptyCity: Float

  """Percentage of non-empty values for city"""
  percentageNotEmptyCity: Float

  """Number of unique values for avatarUrl"""
  countUniqueValuesAvatarUrl: Int

  """Number of empty values for avatarUrl"""
  countEmptyAvatarUrl: Int

  """Number of non-empty values for avatarUrl"""
  countNotEmptyAvatarUrl: Int

  """Percentage of empty values for avatarUrl"""
  percentageEmptyAvatarUrl: Float

  """Percentage of non-empty values for avatarUrl"""
  percentageNotEmptyAvatarUrl: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for createdBy"""
  countUniqueValuesCreatedBy: Int

  """Number of empty values for createdBy"""
  countEmptyCreatedBy: Int

  """Number of non-empty values for createdBy"""
  countNotEmptyCreatedBy: Int

  """Percentage of empty values for createdBy"""
  percentageEmptyCreatedBy: Float

  """Percentage of non-empty values for createdBy"""
  percentageNotEmptyCreatedBy: Float

  """Number of unique values for searchVector"""
  countUniqueValuesSearchVector: Int

  """Number of empty values for searchVector"""
  countEmptySearchVector: Int

  """Number of non-empty values for searchVector"""
  countNotEmptySearchVector: Int

  """Percentage of empty values for searchVector"""
  percentageEmptySearchVector: Float

  """Percentage of non-empty values for searchVector"""
  percentageNotEmptySearchVector: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime

  """Number of unique values for intro"""
  countUniqueValuesIntro: Int

  """Number of empty values for intro"""
  countEmptyIntro: Int

  """Number of non-empty values for intro"""
  countNotEmptyIntro: Int

  """Percentage of empty values for intro"""
  percentageEmptyIntro: Float

  """Percentage of non-empty values for intro"""
  percentageNotEmptyIntro: Float

  """Number of unique values for whatsapp"""
  countUniqueValuesWhatsapp: Int

  """Number of empty values for whatsapp"""
  countEmptyWhatsapp: Int

  """Number of non-empty values for whatsapp"""
  countNotEmptyWhatsapp: Int

  """Percentage of empty values for whatsapp"""
  percentageEmptyWhatsapp: Float

  """Percentage of non-empty values for whatsapp"""
  percentageNotEmptyWhatsapp: Float

  """Number of unique values for workPreference"""
  countUniqueValuesWorkPreference: Int

  """Number of empty values for workPreference"""
  countEmptyWorkPreference: Int

  """Number of non-empty values for workPreference"""
  countNotEmptyWorkPreference: Int

  """Percentage of empty values for workPreference"""
  percentageEmptyWorkPreference: Float

  """Percentage of non-empty values for workPreference"""
  percentageNotEmptyWorkPreference: Float

  """Number of unique values for performanceRating"""
  countUniqueValuesPerformanceRating: Int

  """Number of empty values for performanceRating"""
  countEmptyPerformanceRating: Int

  """Number of non-empty values for performanceRating"""
  countNotEmptyPerformanceRating: Int

  """Percentage of empty values for performanceRating"""
  percentageEmptyPerformanceRating: Float

  """Percentage of non-empty values for performanceRating"""
  percentageNotEmptyPerformanceRating: Float
  edges: [PersonEdge!]
  pageInfo: PageInfo
}

"""A task"""
type TaskConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for title"""
  countUniqueValuesTitle: Int

  """Number of empty values for title"""
  countEmptyTitle: Int

  """Number of non-empty values for title"""
  countNotEmptyTitle: Int

  """Percentage of empty values for title"""
  percentageEmptyTitle: Float

  """Percentage of non-empty values for title"""
  percentageNotEmptyTitle: Float

  """Number of unique values for body"""
  countUniqueValuesBody: Int

  """Number of empty values for body"""
  countEmptyBody: Int

  """Number of non-empty values for body"""
  countNotEmptyBody: Int

  """Percentage of empty values for body"""
  percentageEmptyBody: Float

  """Percentage of non-empty values for body"""
  percentageNotEmptyBody: Float

  """Number of unique values for bodyV2"""
  countUniqueValuesBodyV2: Int

  """Number of empty values for bodyV2"""
  countEmptyBodyV2: Int

  """Number of non-empty values for bodyV2"""
  countNotEmptyBodyV2: Int

  """Percentage of empty values for bodyV2"""
  percentageEmptyBodyV2: Float

  """Percentage of non-empty values for bodyV2"""
  percentageNotEmptyBodyV2: Float

  """Number of unique values for dueAt"""
  countUniqueValuesDueAt: Int

  """Number of empty values for dueAt"""
  countEmptyDueAt: Int

  """Number of non-empty values for dueAt"""
  countNotEmptyDueAt: Int

  """Percentage of empty values for dueAt"""
  percentageEmptyDueAt: Float

  """Percentage of non-empty values for dueAt"""
  percentageNotEmptyDueAt: Float

  """Earliest date contained in the field dueAt"""
  minDueAt: DateTime

  """Latest date contained in the field dueAt"""
  maxDueAt: DateTime

  """Number of unique values for status"""
  countUniqueValuesStatus: Int

  """Number of empty values for status"""
  countEmptyStatus: Int

  """Number of non-empty values for status"""
  countNotEmptyStatus: Int

  """Percentage of empty values for status"""
  percentageEmptyStatus: Float

  """Percentage of non-empty values for status"""
  percentageNotEmptyStatus: Float

  """Number of unique values for createdBy"""
  countUniqueValuesCreatedBy: Int

  """Number of empty values for createdBy"""
  countEmptyCreatedBy: Int

  """Number of non-empty values for createdBy"""
  countNotEmptyCreatedBy: Int

  """Percentage of empty values for createdBy"""
  percentageEmptyCreatedBy: Float

  """Percentage of non-empty values for createdBy"""
  percentageNotEmptyCreatedBy: Float

  """Number of unique values for searchVector"""
  countUniqueValuesSearchVector: Int

  """Number of empty values for searchVector"""
  countEmptySearchVector: Int

  """Number of non-empty values for searchVector"""
  countNotEmptySearchVector: Int

  """Percentage of empty values for searchVector"""
  percentageEmptySearchVector: Float

  """Percentage of non-empty values for searchVector"""
  percentageNotEmptySearchVector: Float

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime
  edges: [TaskEdge!]
  pageInfo: PageInfo
}

"""A rocket"""
type RocketConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime

  """Number of unique values for createdBy"""
  countUniqueValuesCreatedBy: Int

  """Number of empty values for createdBy"""
  countEmptyCreatedBy: Int

  """Number of non-empty values for createdBy"""
  countNotEmptyCreatedBy: Int

  """Percentage of empty values for createdBy"""
  percentageEmptyCreatedBy: Float

  """Percentage of non-empty values for createdBy"""
  percentageNotEmptyCreatedBy: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for searchVector"""
  countUniqueValuesSearchVector: Int

  """Number of empty values for searchVector"""
  countEmptySearchVector: Int

  """Number of non-empty values for searchVector"""
  countNotEmptySearchVector: Int

  """Percentage of empty values for searchVector"""
  percentageEmptySearchVector: Float

  """Percentage of non-empty values for searchVector"""
  percentageNotEmptySearchVector: Float
  edges: [RocketEdge!]
  pageInfo: PageInfo
}

type SurveyResultConnection {
  """Total number of records in the connection"""
  totalCount: Int

  """Number of unique values for id"""
  countUniqueValuesId: Int

  """Number of empty values for id"""
  countEmptyId: Int

  """Number of non-empty values for id"""
  countNotEmptyId: Int

  """Percentage of empty values for id"""
  percentageEmptyId: Float

  """Percentage of non-empty values for id"""
  percentageNotEmptyId: Float

  """Number of unique values for name"""
  countUniqueValuesName: Int

  """Number of empty values for name"""
  countEmptyName: Int

  """Number of non-empty values for name"""
  countNotEmptyName: Int

  """Percentage of empty values for name"""
  percentageEmptyName: Float

  """Percentage of non-empty values for name"""
  percentageNotEmptyName: Float

  """Number of unique values for createdAt"""
  countUniqueValuesCreatedAt: Int

  """Number of empty values for createdAt"""
  countEmptyCreatedAt: Int

  """Number of non-empty values for createdAt"""
  countNotEmptyCreatedAt: Int

  """Percentage of empty values for createdAt"""
  percentageEmptyCreatedAt: Float

  """Percentage of non-empty values for createdAt"""
  percentageNotEmptyCreatedAt: Float

  """Earliest date contained in the field createdAt"""
  minCreatedAt: DateTime

  """Latest date contained in the field createdAt"""
  maxCreatedAt: DateTime

  """Number of unique values for updatedAt"""
  countUniqueValuesUpdatedAt: Int

  """Number of empty values for updatedAt"""
  countEmptyUpdatedAt: Int

  """Number of non-empty values for updatedAt"""
  countNotEmptyUpdatedAt: Int

  """Percentage of empty values for updatedAt"""
  percentageEmptyUpdatedAt: Float

  """Percentage of non-empty values for updatedAt"""
  percentageNotEmptyUpdatedAt: Float

  """Earliest date contained in the field updatedAt"""
  minUpdatedAt: DateTime

  """Latest date contained in the field updatedAt"""
  maxUpdatedAt: DateTime

  """Number of unique values for deletedAt"""
  countUniqueValuesDeletedAt: Int

  """Number of empty values for deletedAt"""
  countEmptyDeletedAt: Int

  """Number of non-empty values for deletedAt"""
  countNotEmptyDeletedAt: Int

  """Percentage of empty values for deletedAt"""
  percentageEmptyDeletedAt: Float

  """Percentage of non-empty values for deletedAt"""
  percentageNotEmptyDeletedAt: Float

  """Earliest date contained in the field deletedAt"""
  minDeletedAt: DateTime

  """Latest date contained in the field deletedAt"""
  maxDeletedAt: DateTime

  """Number of unique values for createdBy"""
  countUniqueValuesCreatedBy: Int

  """Number of empty values for createdBy"""
  countEmptyCreatedBy: Int

  """Number of non-empty values for createdBy"""
  countNotEmptyCreatedBy: Int

  """Percentage of empty values for createdBy"""
  percentageEmptyCreatedBy: Float

  """Percentage of non-empty values for createdBy"""
  percentageNotEmptyCreatedBy: Float

  """Number of unique values for position"""
  countUniqueValuesPosition: Int

  """Number of empty values for position"""
  countEmptyPosition: Int

  """Number of non-empty values for position"""
  countNotEmptyPosition: Int

  """Percentage of empty values for position"""
  percentageEmptyPosition: Float

  """Percentage of non-empty values for position"""
  percentageNotEmptyPosition: Float

  """Number of unique values for searchVector"""
  countUniqueValuesSearchVector: Int

  """Number of empty values for searchVector"""
  countEmptySearchVector: Int

  """Number of non-empty values for searchVector"""
  countNotEmptySearchVector: Int

  """Percentage of empty values for searchVector"""
  percentageEmptySearchVector: Float

  """Percentage of non-empty values for searchVector"""
  percentageNotEmptySearchVector: Float

  """Number of unique values for score"""
  countUniqueValuesScore: Int

  """Number of empty values for score"""
  countEmptyScore: Int

  """Number of non-empty values for score"""
  countNotEmptyScore: Int

  """Percentage of empty values for score"""
  percentageEmptyScore: Float

  """Percentage of non-empty values for score"""
  percentageNotEmptyScore: Float

  """Minimum amount contained in the field score"""
  minScore: Float

  """Maximum amount contained in the field score"""
  maxScore: Float

  """Average amount contained in the field score"""
  avgScore: Float

  """Sum of amounts contained in the field score"""
  sumScore: Float

  """Number of unique values for percentageOfCompletion"""
  countUniqueValuesPercentageOfCompletion: Int

  """Number of empty values for percentageOfCompletion"""
  countEmptyPercentageOfCompletion: Int

  """Number of non-empty values for percentageOfCompletion"""
  countNotEmptyPercentageOfCompletion: Int

  """Percentage of empty values for percentageOfCompletion"""
  percentageEmptyPercentageOfCompletion: Float

  """Percentage of non-empty values for percentageOfCompletion"""
  percentageNotEmptyPercentageOfCompletion: Float

  """Minimum amount contained in the field percentageOfCompletion"""
  minPercentageOfCompletion: Float

  """Maximum amount contained in the field percentageOfCompletion"""
  maxPercentageOfCompletion: Float

  """Average amount contained in the field percentageOfCompletion"""
  avgPercentageOfCompletion: Float

  """Sum of amounts contained in the field percentageOfCompletion"""
  sumPercentageOfCompletion: Float

  """Number of unique values for participants"""
  countUniqueValuesParticipants: Int

  """Number of empty values for participants"""
  countEmptyParticipants: Int

  """Number of non-empty values for participants"""
  countNotEmptyParticipants: Int

  """Percentage of empty values for participants"""
  percentageEmptyParticipants: Float

  """Percentage of non-empty values for participants"""
  percentageNotEmptyParticipants: Float

  """Minimum amount contained in the field participants"""
  minParticipants: Float

  """Maximum amount contained in the field participants"""
  maxParticipants: Float

  """Average amount contained in the field participants"""
  avgParticipants: Float

  """Sum of amounts contained in the field participants"""
  sumParticipants: Float

  """Number of unique values for averageEstimatedNumberOfAtomsInTheUniverse"""
  countUniqueValuesAverageEstimatedNumberOfAtomsInTheUniverse: Int

  """Number of empty values for averageEstimatedNumberOfAtomsInTheUniverse"""
  countEmptyAverageEstimatedNumberOfAtomsInTheUniverse: Int

  """
  Number of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse
  """
  countNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse: Int

  """
  Percentage of empty values for averageEstimatedNumberOfAtomsInTheUniverse
  """
  percentageEmptyAverageEstimatedNumberOfAtomsInTheUniverse: Float

  """
  Percentage of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse
  """
  percentageNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse: Float

  """
  Minimum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse
  """
  minAverageEstimatedNumberOfAtomsInTheUniverse: Float

  """
  Maximum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse
  """
  maxAverageEstimatedNumberOfAtomsInTheUniverse: Float

  """
  Average amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse
  """
  avgAverageEstimatedNumberOfAtomsInTheUniverse: Float

  """
  Sum of amounts contained in the field averageEstimatedNumberOfAtomsInTheUniverse
  """
  sumAverageEstimatedNumberOfAtomsInTheUniverse: Float

  """Number of unique values for comments"""
  countUniqueValuesComments: Int

  """Number of empty values for comments"""
  countEmptyComments: Int

  """Number of non-empty values for comments"""
  countNotEmptyComments: Int

  """Percentage of empty values for comments"""
  percentageEmptyComments: Float

  """Percentage of non-empty values for comments"""
  percentageNotEmptyComments: Float

  """Number of unique values for shortNotes"""
  countUniqueValuesShortNotes: Int

  """Number of empty values for shortNotes"""
  countEmptyShortNotes: Int

  """Number of non-empty values for shortNotes"""
  countNotEmptyShortNotes: Int

  """Percentage of empty values for shortNotes"""
  percentageEmptyShortNotes: Float

  """Percentage of non-empty values for shortNotes"""
  percentageNotEmptyShortNotes: Float
  edges: [SurveyResultEdge!]
  pageInfo: PageInfo
}

input LinksCreateInput {
  primaryLinkLabel: String
  primaryLinkUrl: String
  secondaryLinks: RawJSONScalar
}

input LinksUpdateInput {
  primaryLinkLabel: String
  primaryLinkUrl: String
  secondaryLinks: RawJSONScalar
}

input LinksFilterInput {
  primaryLinkLabel: StringFilter
  primaryLinkUrl: StringFilter
  secondaryLinks: RawJsonFilter
}

input StringFilter {
  eq: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  neq: String
  startsWith: String
  like: String
  ilike: String
  regex: String
  iregex: String
  is: FilterIs
}

"""This enum to filter by nullability"""
enum FilterIs {
  """Nulish values"""
  NULL

  """Non-nulish values"""
  NOT_NULL
}

input RawJsonFilter {
  is: FilterIs
  like: String
}

input LinksOrderByInput {
  primaryLinkLabel: OrderByDirection
  primaryLinkUrl: OrderByDirection
  secondaryLinks: OrderByDirection
}

"""This enum is used to specify the order of results"""
enum OrderByDirection {
  """Ascending order, nulls first"""
  AscNullsFirst

  """Ascending order, nulls last"""
  AscNullsLast

  """Descending order, nulls first"""
  DescNullsFirst

  """Descending order, nulls last"""
  DescNullsLast
}

input CurrencyCreateInput {
  amountMicros: BigFloat
  currencyCode: String
}

input CurrencyUpdateInput {
  amountMicros: BigFloat
  currencyCode: String
}

input CurrencyFilterInput {
  amountMicros: BigFloatFilter
  currencyCode: StringFilter
}

input BigFloatFilter {
  eq: BigFloat
  gt: BigFloat
  gte: BigFloat
  in: [BigFloat!]
  lt: BigFloat
  lte: BigFloat
  neq: BigFloat
  is: FilterIs
}

input CurrencyOrderByInput {
  amountMicros: OrderByDirection
  currencyCode: OrderByDirection
}

input FullNameCreateInput {
  firstName: String
  lastName: String
}

input FullNameUpdateInput {
  firstName: String
  lastName: String
}

input FullNameFilterInput {
  firstName: StringFilter
  lastName: StringFilter
}

input FullNameOrderByInput {
  firstName: OrderByDirection
  lastName: OrderByDirection
}

input AddressCreateInput {
  addressStreet1: String
  addressStreet2: String
  addressCity: String
  addressPostcode: String
  addressState: String
  addressCountry: String
  addressLat: BigFloat
  addressLng: BigFloat
}

input AddressUpdateInput {
  addressStreet1: String
  addressStreet2: String
  addressCity: String
  addressPostcode: String
  addressState: String
  addressCountry: String
  addressLat: BigFloat
  addressLng: BigFloat
}

input AddressFilterInput {
  addressStreet1: StringFilter
  addressStreet2: StringFilter
  addressCity: StringFilter
  addressPostcode: StringFilter
  addressState: StringFilter
  addressCountry: StringFilter
  addressLat: BigFloatFilter
  addressLng: BigFloatFilter
}

input AddressOrderByInput {
  addressStreet1: OrderByDirection
  addressStreet2: OrderByDirection
  addressCity: OrderByDirection
  addressPostcode: OrderByDirection
  addressState: OrderByDirection
  addressCountry: OrderByDirection
  addressLat: OrderByDirection
  addressLng: OrderByDirection
}

input ActorCreateInput {
  source: ActorSourceEnum
  context: RawJSONScalar
}

input ActorUpdateInput {
  source: ActorSourceEnum
  context: RawJSONScalar
}

input ActorFilterInput {
  source: ActorSourceEnumFilter
  workspaceMemberId: UUIDFilter
  name: StringFilter
  context: RawJsonFilter
}

input ActorSourceEnumFilter {
  eq: ActorSourceEnum
  neq: ActorSourceEnum
  in: [ActorSourceEnum]
  containsAny: [ActorSourceEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input UUIDFilter {
  eq: UUID
  gt: UUID
  gte: UUID
  in: [UUID]
  lt: UUID
  lte: UUID
  neq: UUID
  is: FilterIs
}

input ActorOrderByInput {
  source: OrderByDirection
  workspaceMemberId: OrderByDirection
  name: OrderByDirection
  context: OrderByDirection
}

input EmailsCreateInput {
  primaryEmail: String
  additionalEmails: RawJSONScalar
}

input EmailsUpdateInput {
  primaryEmail: String
  additionalEmails: RawJSONScalar
}

input EmailsFilterInput {
  primaryEmail: StringFilter
  additionalEmails: RawJsonFilter
}

input EmailsOrderByInput {
  primaryEmail: OrderByDirection
  additionalEmails: OrderByDirection
}

input PhonesCreateInput {
  primaryPhoneNumber: String
  primaryPhoneCountryCode: String
  primaryPhoneCallingCode: String
  additionalPhones: RawJSONScalar
}

input PhonesUpdateInput {
  primaryPhoneNumber: String
  primaryPhoneCountryCode: String
  primaryPhoneCallingCode: String
  additionalPhones: RawJSONScalar
}

input PhonesFilterInput {
  primaryPhoneNumber: StringFilter
  primaryPhoneCountryCode: StringFilter
  primaryPhoneCallingCode: StringFilter
  additionalPhones: RawJsonFilter
}

input PhonesOrderByInput {
  primaryPhoneNumber: OrderByDirection
  primaryPhoneCountryCode: OrderByDirection
  primaryPhoneCallingCode: OrderByDirection
  additionalPhones: OrderByDirection
}

input RichTextV2CreateInput {
  blocknote: String
  markdown: String
}

input RichTextV2UpdateInput {
  blocknote: String
  markdown: String
}

input RichTextV2FilterInput {
  blocknote: StringFilter
  markdown: StringFilter
}

input RichTextV2OrderByInput {
  blocknote: OrderByDirection
  markdown: OrderByDirection
}

"""An API key"""
input ApiKeyCreateInput {
  """ApiKey name"""
  name: String

  """ApiKey expiration date"""
  expiresAt: DateTime!

  """ApiKey revocation date"""
  revokedAt: DateTime

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""An API key"""
input ApiKeyUpdateInput {
  """ApiKey name"""
  name: String

  """ApiKey expiration date"""
  expiresAt: DateTime

  """ApiKey revocation date"""
  revokedAt: DateTime

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""An API key"""
input ApiKeyFilterInput {
  """ApiKey name"""
  name: StringFilter

  """ApiKey expiration date"""
  expiresAt: DateFilter

  """ApiKey revocation date"""
  revokedAt: DateFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter
  and: [ApiKeyFilterInput]
  or: [ApiKeyFilterInput]
  not: ApiKeyFilterInput
}

input DateFilter {
  eq: Date
  gt: Date
  gte: Date
  in: [Date!]
  lt: Date
  lte: Date
  neq: Date
  is: FilterIs
}

"""Date custom scalar type"""
scalar Date

"""An API key"""
input ApiKeyOrderByInput {
  """ApiKey name"""
  name: OrderByDirection

  """ApiKey expiration date"""
  expiresAt: OrderByDirection

  """ApiKey revocation date"""
  revokedAt: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection
}

"""An attachment"""
input AttachmentCreateInput {
  """Attachment name"""
  name: String

  """Attachment full path"""
  fullPath: String

  """Attachment type"""
  type: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Attachment author"""
  authorId: ID

  """Attachment author"""
  author: ID

  """Attachment task"""
  taskId: ID

  """Attachment task"""
  task: ID

  """Attachment note"""
  noteId: ID

  """Attachment note"""
  note: ID

  """Attachment person"""
  personId: ID

  """Attachment person"""
  person: ID

  """Attachment company"""
  companyId: ID

  """Attachment company"""
  company: ID

  """Attachment opportunity"""
  opportunityId: ID

  """Attachment opportunity"""
  opportunity: ID

  """Attachments Rocket"""
  rocketId: ID

  """Attachments Rocket"""
  rocket: ID

  """Attachments Pet"""
  petId: ID

  """Attachments Pet"""
  pet: ID

  """Attachments Survey result"""
  surveyResultId: ID

  """Attachments Survey result"""
  surveyResult: ID
}

"""An attachment"""
input AttachmentUpdateInput {
  """Attachment name"""
  name: String

  """Attachment full path"""
  fullPath: String

  """Attachment type"""
  type: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Attachment author"""
  authorId: ID

  """Attachment author"""
  author: ID

  """Attachment task"""
  taskId: ID

  """Attachment task"""
  task: ID

  """Attachment note"""
  noteId: ID

  """Attachment note"""
  note: ID

  """Attachment person"""
  personId: ID

  """Attachment person"""
  person: ID

  """Attachment company"""
  companyId: ID

  """Attachment company"""
  company: ID

  """Attachment opportunity"""
  opportunityId: ID

  """Attachment opportunity"""
  opportunity: ID

  """Attachments Rocket"""
  rocketId: ID

  """Attachments Rocket"""
  rocket: ID

  """Attachments Pet"""
  petId: ID

  """Attachments Pet"""
  pet: ID

  """Attachments Survey result"""
  surveyResultId: ID

  """Attachments Survey result"""
  surveyResult: ID
}

"""An attachment"""
input AttachmentFilterInput {
  """Attachment name"""
  name: StringFilter

  """Attachment full path"""
  fullPath: StringFilter

  """Attachment type"""
  type: StringFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Attachment author"""
  authorId: UUIDFilter

  """Attachment author"""
  author: UUIDFilter

  """Attachment task"""
  taskId: UUIDFilter

  """Attachment task"""
  task: UUIDFilter

  """Attachment note"""
  noteId: UUIDFilter

  """Attachment note"""
  note: UUIDFilter

  """Attachment person"""
  personId: UUIDFilter

  """Attachment person"""
  person: UUIDFilter

  """Attachment company"""
  companyId: UUIDFilter

  """Attachment company"""
  company: UUIDFilter

  """Attachment opportunity"""
  opportunityId: UUIDFilter

  """Attachment opportunity"""
  opportunity: UUIDFilter

  """Attachments Rocket"""
  rocketId: UUIDFilter

  """Attachments Rocket"""
  rocket: UUIDFilter

  """Attachments Pet"""
  petId: UUIDFilter

  """Attachments Pet"""
  pet: UUIDFilter

  """Attachments Survey result"""
  surveyResultId: UUIDFilter

  """Attachments Survey result"""
  surveyResult: UUIDFilter
  and: [AttachmentFilterInput]
  or: [AttachmentFilterInput]
  not: AttachmentFilterInput
}

"""An attachment"""
input AttachmentOrderByInput {
  """Attachment name"""
  name: OrderByDirection

  """Attachment full path"""
  fullPath: OrderByDirection

  """Attachment type"""
  type: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Attachment author"""
  authorId: OrderByDirection

  """Attachment author"""
  author: OrderByDirection

  """Attachment task"""
  taskId: OrderByDirection

  """Attachment task"""
  task: OrderByDirection

  """Attachment note"""
  noteId: OrderByDirection

  """Attachment note"""
  note: OrderByDirection

  """Attachment person"""
  personId: OrderByDirection

  """Attachment person"""
  person: OrderByDirection

  """Attachment company"""
  companyId: OrderByDirection

  """Attachment company"""
  company: OrderByDirection

  """Attachment opportunity"""
  opportunityId: OrderByDirection

  """Attachment opportunity"""
  opportunity: OrderByDirection

  """Attachments Rocket"""
  rocketId: OrderByDirection

  """Attachments Rocket"""
  rocket: OrderByDirection

  """Attachments Pet"""
  petId: OrderByDirection

  """Attachments Pet"""
  pet: OrderByDirection

  """Attachments Survey result"""
  surveyResultId: OrderByDirection

  """Attachments Survey result"""
  surveyResult: OrderByDirection
}

input PetCreateInput {
  coco: String

  """Id"""
  id: ID

  """Name"""
  name: String

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Deletion date"""
  deletedAt: DateTime

  """The creator of the record"""
  createdBy: ActorCreateInput

  """Position"""
  position: Position

  """Field used for full-text search"""
  searchVector: TSVector
  species: PetSpeciesEnum
  traits: [PetTraitsEnum]
  comments: String
  age: Float
  location: AddressCreateInput
  vetPhone: PhonesCreateInput
  vetEmail: EmailsCreateInput
  birthday: DateTime
  isGoodWithKids: Boolean
  pictures: LinksCreateInput
  averageCostOfKibblePerMonth: CurrencyCreateInput
  makesOwnerThinkOf: FullNameCreateInput
  soundSwag: PetSoundSwagEnum
  bio: String
  interestingFacts: [String]
  extraData: RawJSONScalar
}

input PetUpdateInput {
  coco: String

  """Id"""
  id: ID

  """Name"""
  name: String

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Deletion date"""
  deletedAt: DateTime

  """The creator of the record"""
  createdBy: ActorUpdateInput

  """Position"""
  position: Position

  """Field used for full-text search"""
  searchVector: TSVector
  species: PetSpeciesEnum
  traits: [PetTraitsEnum]
  comments: String
  age: Float
  location: AddressUpdateInput
  vetPhone: PhonesUpdateInput
  vetEmail: EmailsUpdateInput
  birthday: DateTime
  isGoodWithKids: Boolean
  pictures: LinksUpdateInput
  averageCostOfKibblePerMonth: CurrencyUpdateInput
  makesOwnerThinkOf: FullNameUpdateInput
  soundSwag: PetSoundSwagEnum
  bio: String
  interestingFacts: [String]
  extraData: RawJSONScalar
}

input PetFilterInput {
  coco: StringFilter

  """Id"""
  id: UUIDFilter

  """Name"""
  name: StringFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Deletion date"""
  deletedAt: DateFilter

  """The creator of the record"""
  createdBy: ActorFilterInput

  """Position"""
  position: FloatFilter

  """Field used for full-text search"""
  searchVector: TSVectorFilter
  species: PetSpeciesEnumFilter
  traits: PetTraitsEnumFilter
  comments: StringFilter
  age: FloatFilter
  location: AddressFilterInput
  vetPhone: PhonesFilterInput
  vetEmail: EmailsFilterInput
  birthday: DateFilter
  isGoodWithKids: BooleanFilter
  pictures: LinksFilterInput
  averageCostOfKibblePerMonth: CurrencyFilterInput
  makesOwnerThinkOf: FullNameFilterInput
  soundSwag: PetSoundSwagEnumFilter
  bio: StringFilter
  interestingFacts: ArrayFilter
  extraData: RawJsonFilter
  and: [PetFilterInput]
  or: [PetFilterInput]
  not: PetFilterInput
}

input FloatFilter {
  eq: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  neq: Float
  is: FilterIs
}

input TSVectorFilter {
  search: String
}

input PetSpeciesEnumFilter {
  eq: PetSpeciesEnum
  neq: PetSpeciesEnum
  in: [PetSpeciesEnum]
  containsAny: [PetSpeciesEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input PetTraitsEnumFilter {
  eq: PetTraitsEnum
  neq: PetTraitsEnum
  in: [PetTraitsEnum]
  containsAny: [PetTraitsEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input BooleanFilter {
  eq: Boolean
  is: FilterIs
}

input PetSoundSwagEnumFilter {
  eq: PetSoundSwagEnum
  neq: PetSoundSwagEnum
  in: [PetSoundSwagEnum]
  containsAny: [PetSoundSwagEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input ArrayFilter {
  containsIlike: String
  is: FilterIs
  isEmptyArray: Boolean
}

input PetOrderByInput {
  coco: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Name"""
  name: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Deletion date"""
  deletedAt: OrderByDirection

  """The creator of the record"""
  createdBy: ActorOrderByInput

  """Position"""
  position: OrderByDirection

  """Field used for full-text search"""
  searchVector: OrderByDirection
  species: OrderByDirection
  traits: [OrderByDirection]
  comments: OrderByDirection
  age: OrderByDirection
  location: AddressOrderByInput
  vetPhone: PhonesOrderByInput
  vetEmail: EmailsOrderByInput
  birthday: OrderByDirection
  isGoodWithKids: OrderByDirection
  pictures: LinksOrderByInput
  averageCostOfKibblePerMonth: CurrencyOrderByInput
  makesOwnerThinkOf: FullNameOrderByInput
  soundSwag: OrderByDirection
  bio: OrderByDirection
  interestingFacts: OrderByDirection
  extraData: OrderByDirection
}

"""Blocklist"""
input BlocklistCreateInput {
  """Handle"""
  handle: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """WorkspaceMember"""
  workspaceMemberId: ID

  """WorkspaceMember"""
  workspaceMember: ID
}

"""Blocklist"""
input BlocklistUpdateInput {
  """Handle"""
  handle: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """WorkspaceMember"""
  workspaceMemberId: ID

  """WorkspaceMember"""
  workspaceMember: ID
}

"""Blocklist"""
input BlocklistFilterInput {
  """Handle"""
  handle: StringFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """WorkspaceMember"""
  workspaceMemberId: UUIDFilter

  """WorkspaceMember"""
  workspaceMember: UUIDFilter
  and: [BlocklistFilterInput]
  or: [BlocklistFilterInput]
  not: BlocklistFilterInput
}

"""Blocklist"""
input BlocklistOrderByInput {
  """Handle"""
  handle: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """WorkspaceMember"""
  workspaceMemberId: OrderByDirection

  """WorkspaceMember"""
  workspaceMember: OrderByDirection
}

"""Calendar events"""
input CalendarEventCreateInput {
  """Title"""
  title: String

  """Is canceled"""
  isCanceled: Boolean

  """Is Full Day"""
  isFullDay: Boolean

  """Start Date"""
  startsAt: DateTime

  """End Date"""
  endsAt: DateTime

  """Creation DateTime"""
  externalCreatedAt: DateTime

  """Update DateTime"""
  externalUpdatedAt: DateTime

  """Description"""
  description: String

  """Location"""
  location: String

  """iCal UID"""
  iCalUID: String

  """Conference Solution"""
  conferenceSolution: String

  """Meet Link"""
  conferenceLink: LinksCreateInput

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""Calendar events"""
input CalendarEventUpdateInput {
  """Title"""
  title: String

  """Is canceled"""
  isCanceled: Boolean

  """Is Full Day"""
  isFullDay: Boolean

  """Start Date"""
  startsAt: DateTime

  """End Date"""
  endsAt: DateTime

  """Creation DateTime"""
  externalCreatedAt: DateTime

  """Update DateTime"""
  externalUpdatedAt: DateTime

  """Description"""
  description: String

  """Location"""
  location: String

  """iCal UID"""
  iCalUID: String

  """Conference Solution"""
  conferenceSolution: String

  """Meet Link"""
  conferenceLink: LinksUpdateInput

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""Calendar events"""
input CalendarEventFilterInput {
  """Title"""
  title: StringFilter

  """Is canceled"""
  isCanceled: BooleanFilter

  """Is Full Day"""
  isFullDay: BooleanFilter

  """Start Date"""
  startsAt: DateFilter

  """End Date"""
  endsAt: DateFilter

  """Creation DateTime"""
  externalCreatedAt: DateFilter

  """Update DateTime"""
  externalUpdatedAt: DateFilter

  """Description"""
  description: StringFilter

  """Location"""
  location: StringFilter

  """iCal UID"""
  iCalUID: StringFilter

  """Conference Solution"""
  conferenceSolution: StringFilter

  """Meet Link"""
  conferenceLink: LinksFilterInput

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter
  and: [CalendarEventFilterInput]
  or: [CalendarEventFilterInput]
  not: CalendarEventFilterInput
}

"""Calendar events"""
input CalendarEventOrderByInput {
  """Title"""
  title: OrderByDirection

  """Is canceled"""
  isCanceled: OrderByDirection

  """Is Full Day"""
  isFullDay: OrderByDirection

  """Start Date"""
  startsAt: OrderByDirection

  """End Date"""
  endsAt: OrderByDirection

  """Creation DateTime"""
  externalCreatedAt: OrderByDirection

  """Update DateTime"""
  externalUpdatedAt: OrderByDirection

  """Description"""
  description: OrderByDirection

  """Location"""
  location: OrderByDirection

  """iCal UID"""
  iCalUID: OrderByDirection

  """Conference Solution"""
  conferenceSolution: OrderByDirection

  """Meet Link"""
  conferenceLink: LinksOrderByInput

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection
}

"""Calendar Channels"""
input CalendarChannelCreateInput {
  """Handle"""
  handle: String

  """Sync status"""
  syncStatus: CalendarChannelSyncStatusEnum

  """Sync stage"""
  syncStage: CalendarChannelSyncStageEnum

  """Visibility"""
  visibility: CalendarChannelVisibilityEnum

  """Is Contact Auto Creation Enabled"""
  isContactAutoCreationEnabled: Boolean

  """
  Automatically create records for people you participated with in an event.
  """
  contactAutoCreationPolicy: CalendarChannelContactAutoCreationPolicyEnum

  """Is Sync Enabled"""
  isSyncEnabled: Boolean

  """Sync Cursor. Used for syncing events from the calendar provider"""
  syncCursor: String

  """Last sync date"""
  syncedAt: DateTime

  """Sync stage started at"""
  syncStageStartedAt: DateTime

  """Throttle Failure Count"""
  throttleFailureCount: Float

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Connected Account"""
  connectedAccountId: ID

  """Connected Account"""
  connectedAccount: ID
}

"""Calendar Channels"""
input CalendarChannelUpdateInput {
  """Handle"""
  handle: String

  """Sync status"""
  syncStatus: CalendarChannelSyncStatusEnum

  """Sync stage"""
  syncStage: CalendarChannelSyncStageEnum

  """Visibility"""
  visibility: CalendarChannelVisibilityEnum

  """Is Contact Auto Creation Enabled"""
  isContactAutoCreationEnabled: Boolean

  """
  Automatically create records for people you participated with in an event.
  """
  contactAutoCreationPolicy: CalendarChannelContactAutoCreationPolicyEnum

  """Is Sync Enabled"""
  isSyncEnabled: Boolean

  """Sync Cursor. Used for syncing events from the calendar provider"""
  syncCursor: String

  """Last sync date"""
  syncedAt: DateTime

  """Sync stage started at"""
  syncStageStartedAt: DateTime

  """Throttle Failure Count"""
  throttleFailureCount: Float

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Connected Account"""
  connectedAccountId: ID

  """Connected Account"""
  connectedAccount: ID
}

"""Calendar Channels"""
input CalendarChannelFilterInput {
  """Handle"""
  handle: StringFilter

  """Sync status"""
  syncStatus: CalendarChannelSyncStatusEnumFilter

  """Sync stage"""
  syncStage: CalendarChannelSyncStageEnumFilter

  """Visibility"""
  visibility: CalendarChannelVisibilityEnumFilter

  """Is Contact Auto Creation Enabled"""
  isContactAutoCreationEnabled: BooleanFilter

  """
  Automatically create records for people you participated with in an event.
  """
  contactAutoCreationPolicy: CalendarChannelContactAutoCreationPolicyEnumFilter

  """Is Sync Enabled"""
  isSyncEnabled: BooleanFilter

  """Sync Cursor. Used for syncing events from the calendar provider"""
  syncCursor: StringFilter

  """Last sync date"""
  syncedAt: DateFilter

  """Sync stage started at"""
  syncStageStartedAt: DateFilter

  """Throttle Failure Count"""
  throttleFailureCount: FloatFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Connected Account"""
  connectedAccountId: UUIDFilter

  """Connected Account"""
  connectedAccount: UUIDFilter
  and: [CalendarChannelFilterInput]
  or: [CalendarChannelFilterInput]
  not: CalendarChannelFilterInput
}

input CalendarChannelSyncStatusEnumFilter {
  eq: CalendarChannelSyncStatusEnum
  neq: CalendarChannelSyncStatusEnum
  in: [CalendarChannelSyncStatusEnum]
  containsAny: [CalendarChannelSyncStatusEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input CalendarChannelSyncStageEnumFilter {
  eq: CalendarChannelSyncStageEnum
  neq: CalendarChannelSyncStageEnum
  in: [CalendarChannelSyncStageEnum]
  containsAny: [CalendarChannelSyncStageEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input CalendarChannelVisibilityEnumFilter {
  eq: CalendarChannelVisibilityEnum
  neq: CalendarChannelVisibilityEnum
  in: [CalendarChannelVisibilityEnum]
  containsAny: [CalendarChannelVisibilityEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input CalendarChannelContactAutoCreationPolicyEnumFilter {
  eq: CalendarChannelContactAutoCreationPolicyEnum
  neq: CalendarChannelContactAutoCreationPolicyEnum
  in: [CalendarChannelContactAutoCreationPolicyEnum]
  containsAny: [CalendarChannelContactAutoCreationPolicyEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""Calendar Channels"""
input CalendarChannelOrderByInput {
  """Handle"""
  handle: OrderByDirection

  """Sync status"""
  syncStatus: OrderByDirection

  """Sync stage"""
  syncStage: OrderByDirection

  """Visibility"""
  visibility: OrderByDirection

  """Is Contact Auto Creation Enabled"""
  isContactAutoCreationEnabled: OrderByDirection

  """
  Automatically create records for people you participated with in an event.
  """
  contactAutoCreationPolicy: OrderByDirection

  """Is Sync Enabled"""
  isSyncEnabled: OrderByDirection

  """Sync Cursor. Used for syncing events from the calendar provider"""
  syncCursor: OrderByDirection

  """Last sync date"""
  syncedAt: OrderByDirection

  """Sync stage started at"""
  syncStageStartedAt: OrderByDirection

  """Throttle Failure Count"""
  throttleFailureCount: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Connected Account"""
  connectedAccountId: OrderByDirection

  """Connected Account"""
  connectedAccount: OrderByDirection
}

"""Calendar Channel Event Associations"""
input CalendarChannelEventAssociationCreateInput {
  """Event external ID"""
  eventExternalId: String

  """Recurring Event ID"""
  recurringEventExternalId: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Channel ID"""
  calendarChannelId: ID

  """Channel ID"""
  calendarChannel: ID

  """Event ID"""
  calendarEventId: ID

  """Event ID"""
  calendarEvent: ID
}

"""Calendar Channel Event Associations"""
input CalendarChannelEventAssociationUpdateInput {
  """Event external ID"""
  eventExternalId: String

  """Recurring Event ID"""
  recurringEventExternalId: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Channel ID"""
  calendarChannelId: ID

  """Channel ID"""
  calendarChannel: ID

  """Event ID"""
  calendarEventId: ID

  """Event ID"""
  calendarEvent: ID
}

"""Calendar Channel Event Associations"""
input CalendarChannelEventAssociationFilterInput {
  """Event external ID"""
  eventExternalId: StringFilter

  """Recurring Event ID"""
  recurringEventExternalId: StringFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Channel ID"""
  calendarChannelId: UUIDFilter

  """Channel ID"""
  calendarChannel: UUIDFilter

  """Event ID"""
  calendarEventId: UUIDFilter

  """Event ID"""
  calendarEvent: UUIDFilter
  and: [CalendarChannelEventAssociationFilterInput]
  or: [CalendarChannelEventAssociationFilterInput]
  not: CalendarChannelEventAssociationFilterInput
}

"""Calendar Channel Event Associations"""
input CalendarChannelEventAssociationOrderByInput {
  """Event external ID"""
  eventExternalId: OrderByDirection

  """Recurring Event ID"""
  recurringEventExternalId: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Channel ID"""
  calendarChannelId: OrderByDirection

  """Channel ID"""
  calendarChannel: OrderByDirection

  """Event ID"""
  calendarEventId: OrderByDirection

  """Event ID"""
  calendarEvent: OrderByDirection
}

"""Calendar event participants"""
input CalendarEventParticipantCreateInput {
  """Handle"""
  handle: String

  """Display Name"""
  displayName: String

  """Is Organizer"""
  isOrganizer: Boolean

  """Response Status"""
  responseStatus: CalendarEventParticipantResponseStatusEnum

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Event ID"""
  calendarEventId: ID

  """Event ID"""
  calendarEvent: ID

  """Person"""
  personId: ID

  """Person"""
  person: ID

  """Workspace Member"""
  workspaceMemberId: ID

  """Workspace Member"""
  workspaceMember: ID
}

"""Calendar event participants"""
input CalendarEventParticipantUpdateInput {
  """Handle"""
  handle: String

  """Display Name"""
  displayName: String

  """Is Organizer"""
  isOrganizer: Boolean

  """Response Status"""
  responseStatus: CalendarEventParticipantResponseStatusEnum

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Event ID"""
  calendarEventId: ID

  """Event ID"""
  calendarEvent: ID

  """Person"""
  personId: ID

  """Person"""
  person: ID

  """Workspace Member"""
  workspaceMemberId: ID

  """Workspace Member"""
  workspaceMember: ID
}

"""Calendar event participants"""
input CalendarEventParticipantFilterInput {
  """Handle"""
  handle: StringFilter

  """Display Name"""
  displayName: StringFilter

  """Is Organizer"""
  isOrganizer: BooleanFilter

  """Response Status"""
  responseStatus: CalendarEventParticipantResponseStatusEnumFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Event ID"""
  calendarEventId: UUIDFilter

  """Event ID"""
  calendarEvent: UUIDFilter

  """Person"""
  personId: UUIDFilter

  """Person"""
  person: UUIDFilter

  """Workspace Member"""
  workspaceMemberId: UUIDFilter

  """Workspace Member"""
  workspaceMember: UUIDFilter
  and: [CalendarEventParticipantFilterInput]
  or: [CalendarEventParticipantFilterInput]
  not: CalendarEventParticipantFilterInput
}

input CalendarEventParticipantResponseStatusEnumFilter {
  eq: CalendarEventParticipantResponseStatusEnum
  neq: CalendarEventParticipantResponseStatusEnum
  in: [CalendarEventParticipantResponseStatusEnum]
  containsAny: [CalendarEventParticipantResponseStatusEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""Calendar event participants"""
input CalendarEventParticipantOrderByInput {
  """Handle"""
  handle: OrderByDirection

  """Display Name"""
  displayName: OrderByDirection

  """Is Organizer"""
  isOrganizer: OrderByDirection

  """Response Status"""
  responseStatus: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Event ID"""
  calendarEventId: OrderByDirection

  """Event ID"""
  calendarEvent: OrderByDirection

  """Person"""
  personId: OrderByDirection

  """Person"""
  person: OrderByDirection

  """Workspace Member"""
  workspaceMemberId: OrderByDirection

  """Workspace Member"""
  workspaceMember: OrderByDirection
}

"""A company"""
input CompanyCreateInput {
  """The company name"""
  name: String

  """The company website URL. We use this url to fetch the company icon"""
  domainName: LinksCreateInput

  """Number of employees in the company"""
  employees: Float

  """The company Linkedin account"""
  linkedinLink: LinksCreateInput

  """The company Twitter/X account"""
  xLink: LinksCreateInput

  """
  Annual Recurring Revenue: The actual or estimated annual revenue of the company
  """
  annualRecurringRevenue: CurrencyCreateInput

  """Address of the company"""
  address: AddressCreateInput

  """
  Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you
  """
  idealCustomerProfile: Boolean

  """Company record position"""
  position: Position

  """The creator of the record"""
  createdBy: ActorCreateInput

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Your team member responsible for managing the company account"""
  accountOwnerId: ID

  """Your team member responsible for managing the company account"""
  accountOwner: ID
  tagline: String
  introVideo: LinksCreateInput
  workPolicy: [CompanyWorkPolicyEnum]
  visaSponsorship: Boolean
}

"""A company"""
input CompanyUpdateInput {
  """The company name"""
  name: String

  """The company website URL. We use this url to fetch the company icon"""
  domainName: LinksUpdateInput

  """Number of employees in the company"""
  employees: Float

  """The company Linkedin account"""
  linkedinLink: LinksUpdateInput

  """The company Twitter/X account"""
  xLink: LinksUpdateInput

  """
  Annual Recurring Revenue: The actual or estimated annual revenue of the company
  """
  annualRecurringRevenue: CurrencyUpdateInput

  """Address of the company"""
  address: AddressUpdateInput

  """
  Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you
  """
  idealCustomerProfile: Boolean

  """Company record position"""
  position: Position

  """The creator of the record"""
  createdBy: ActorUpdateInput

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Your team member responsible for managing the company account"""
  accountOwnerId: ID

  """Your team member responsible for managing the company account"""
  accountOwner: ID
  tagline: String
  introVideo: LinksUpdateInput
  workPolicy: [CompanyWorkPolicyEnum]
  visaSponsorship: Boolean
}

"""A company"""
input CompanyFilterInput {
  """The company name"""
  name: StringFilter

  """The company website URL. We use this url to fetch the company icon"""
  domainName: LinksFilterInput

  """Number of employees in the company"""
  employees: FloatFilter

  """The company Linkedin account"""
  linkedinLink: LinksFilterInput

  """The company Twitter/X account"""
  xLink: LinksFilterInput

  """
  Annual Recurring Revenue: The actual or estimated annual revenue of the company
  """
  annualRecurringRevenue: CurrencyFilterInput

  """Address of the company"""
  address: AddressFilterInput

  """
  Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you
  """
  idealCustomerProfile: BooleanFilter

  """Company record position"""
  position: FloatFilter

  """The creator of the record"""
  createdBy: ActorFilterInput

  """Field used for full-text search"""
  searchVector: TSVectorFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Your team member responsible for managing the company account"""
  accountOwnerId: UUIDFilter

  """Your team member responsible for managing the company account"""
  accountOwner: UUIDFilter
  tagline: StringFilter
  introVideo: LinksFilterInput
  workPolicy: CompanyWorkPolicyEnumFilter
  visaSponsorship: BooleanFilter
  and: [CompanyFilterInput]
  or: [CompanyFilterInput]
  not: CompanyFilterInput
}

input CompanyWorkPolicyEnumFilter {
  eq: CompanyWorkPolicyEnum
  neq: CompanyWorkPolicyEnum
  in: [CompanyWorkPolicyEnum]
  containsAny: [CompanyWorkPolicyEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""A company"""
input CompanyOrderByInput {
  """The company name"""
  name: OrderByDirection

  """The company website URL. We use this url to fetch the company icon"""
  domainName: LinksOrderByInput

  """Number of employees in the company"""
  employees: OrderByDirection

  """The company Linkedin account"""
  linkedinLink: LinksOrderByInput

  """The company Twitter/X account"""
  xLink: LinksOrderByInput

  """
  Annual Recurring Revenue: The actual or estimated annual revenue of the company
  """
  annualRecurringRevenue: CurrencyOrderByInput

  """Address of the company"""
  address: AddressOrderByInput

  """
  Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you
  """
  idealCustomerProfile: OrderByDirection

  """Company record position"""
  position: OrderByDirection

  """The creator of the record"""
  createdBy: ActorOrderByInput

  """Field used for full-text search"""
  searchVector: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Your team member responsible for managing the company account"""
  accountOwnerId: OrderByDirection

  """Your team member responsible for managing the company account"""
  accountOwner: OrderByDirection
  tagline: OrderByDirection
  introVideo: LinksOrderByInput
  workPolicy: [OrderByDirection]
  visaSponsorship: OrderByDirection
}

"""A connected account"""
input ConnectedAccountCreateInput {
  """The account handle (email, username, phone number, etc.)"""
  handle: String

  """The account provider"""
  provider: String

  """Messaging provider access token"""
  accessToken: String

  """Messaging provider refresh token"""
  refreshToken: String

  """Last sync history ID"""
  lastSyncHistoryId: String

  """Auth failed at"""
  authFailedAt: DateTime

  """Handle Aliases"""
  handleAliases: String

  """Scopes"""
  scopes: [String]

  """JSON object containing custom connection parameters"""
  connectionParameters: RawJSONScalar

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Account Owner"""
  accountOwnerId: ID

  """Account Owner"""
  accountOwner: ID
}

"""A connected account"""
input ConnectedAccountUpdateInput {
  """The account handle (email, username, phone number, etc.)"""
  handle: String

  """The account provider"""
  provider: String

  """Messaging provider access token"""
  accessToken: String

  """Messaging provider refresh token"""
  refreshToken: String

  """Last sync history ID"""
  lastSyncHistoryId: String

  """Auth failed at"""
  authFailedAt: DateTime

  """Handle Aliases"""
  handleAliases: String

  """Scopes"""
  scopes: [String]

  """JSON object containing custom connection parameters"""
  connectionParameters: RawJSONScalar

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Account Owner"""
  accountOwnerId: ID

  """Account Owner"""
  accountOwner: ID
}

"""A connected account"""
input ConnectedAccountFilterInput {
  """The account handle (email, username, phone number, etc.)"""
  handle: StringFilter

  """The account provider"""
  provider: StringFilter

  """Messaging provider access token"""
  accessToken: StringFilter

  """Messaging provider refresh token"""
  refreshToken: StringFilter

  """Last sync history ID"""
  lastSyncHistoryId: StringFilter

  """Auth failed at"""
  authFailedAt: DateFilter

  """Handle Aliases"""
  handleAliases: StringFilter

  """Scopes"""
  scopes: ArrayFilter

  """JSON object containing custom connection parameters"""
  connectionParameters: RawJsonFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Account Owner"""
  accountOwnerId: UUIDFilter

  """Account Owner"""
  accountOwner: UUIDFilter
  and: [ConnectedAccountFilterInput]
  or: [ConnectedAccountFilterInput]
  not: ConnectedAccountFilterInput
}

"""A connected account"""
input ConnectedAccountOrderByInput {
  """The account handle (email, username, phone number, etc.)"""
  handle: OrderByDirection

  """The account provider"""
  provider: OrderByDirection

  """Messaging provider access token"""
  accessToken: OrderByDirection

  """Messaging provider refresh token"""
  refreshToken: OrderByDirection

  """Last sync history ID"""
  lastSyncHistoryId: OrderByDirection

  """Auth failed at"""
  authFailedAt: OrderByDirection

  """Handle Aliases"""
  handleAliases: OrderByDirection

  """Scopes"""
  scopes: OrderByDirection

  """JSON object containing custom connection parameters"""
  connectionParameters: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Account Owner"""
  accountOwnerId: OrderByDirection

  """Account Owner"""
  accountOwner: OrderByDirection
}

"""A favorite that can be accessed from the left menu"""
input FavoriteCreateInput {
  """Favorite position"""
  position: Float

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Favorite task"""
  taskId: ID

  """Favorite task"""
  task: ID

  """Favorite note"""
  noteId: ID

  """Favorite note"""
  note: ID

  """Favorite workspace member"""
  forWorkspaceMemberId: ID

  """Favorite workspace member"""
  forWorkspaceMember: ID

  """Favorite person"""
  personId: ID

  """Favorite person"""
  person: ID

  """Favorite company"""
  companyId: ID

  """Favorite company"""
  company: ID

  """The folder this favorite belongs to"""
  favoriteFolderId: ID

  """The folder this favorite belongs to"""
  favoriteFolder: ID

  """Favorite opportunity"""
  opportunityId: ID

  """Favorite opportunity"""
  opportunity: ID

  """Favorite workflow"""
  workflowId: ID

  """Favorite workflow"""
  workflow: ID

  """Favorite workflow version"""
  workflowVersionId: ID

  """Favorite workflow version"""
  workflowVersion: ID

  """Favorite workflow run"""
  workflowRunId: ID

  """Favorite workflow run"""
  workflowRun: ID

  """Favorite view"""
  viewId: ID

  """Favorite view"""
  view: ID

  """Favorites Rocket"""
  rocketId: ID

  """Favorites Rocket"""
  rocket: ID

  """Favorites Pet"""
  petId: ID

  """Favorites Pet"""
  pet: ID

  """Favorites Survey result"""
  surveyResultId: ID

  """Favorites Survey result"""
  surveyResult: ID
}

"""A favorite that can be accessed from the left menu"""
input FavoriteUpdateInput {
  """Favorite position"""
  position: Float

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Favorite task"""
  taskId: ID

  """Favorite task"""
  task: ID

  """Favorite note"""
  noteId: ID

  """Favorite note"""
  note: ID

  """Favorite workspace member"""
  forWorkspaceMemberId: ID

  """Favorite workspace member"""
  forWorkspaceMember: ID

  """Favorite person"""
  personId: ID

  """Favorite person"""
  person: ID

  """Favorite company"""
  companyId: ID

  """Favorite company"""
  company: ID

  """The folder this favorite belongs to"""
  favoriteFolderId: ID

  """The folder this favorite belongs to"""
  favoriteFolder: ID

  """Favorite opportunity"""
  opportunityId: ID

  """Favorite opportunity"""
  opportunity: ID

  """Favorite workflow"""
  workflowId: ID

  """Favorite workflow"""
  workflow: ID

  """Favorite workflow version"""
  workflowVersionId: ID

  """Favorite workflow version"""
  workflowVersion: ID

  """Favorite workflow run"""
  workflowRunId: ID

  """Favorite workflow run"""
  workflowRun: ID

  """Favorite view"""
  viewId: ID

  """Favorite view"""
  view: ID

  """Favorites Rocket"""
  rocketId: ID

  """Favorites Rocket"""
  rocket: ID

  """Favorites Pet"""
  petId: ID

  """Favorites Pet"""
  pet: ID

  """Favorites Survey result"""
  surveyResultId: ID

  """Favorites Survey result"""
  surveyResult: ID
}

"""A favorite that can be accessed from the left menu"""
input FavoriteFilterInput {
  """Favorite position"""
  position: FloatFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Favorite task"""
  taskId: UUIDFilter

  """Favorite task"""
  task: UUIDFilter

  """Favorite note"""
  noteId: UUIDFilter

  """Favorite note"""
  note: UUIDFilter

  """Favorite workspace member"""
  forWorkspaceMemberId: UUIDFilter

  """Favorite workspace member"""
  forWorkspaceMember: UUIDFilter

  """Favorite person"""
  personId: UUIDFilter

  """Favorite person"""
  person: UUIDFilter

  """Favorite company"""
  companyId: UUIDFilter

  """Favorite company"""
  company: UUIDFilter

  """The folder this favorite belongs to"""
  favoriteFolderId: UUIDFilter

  """The folder this favorite belongs to"""
  favoriteFolder: UUIDFilter

  """Favorite opportunity"""
  opportunityId: UUIDFilter

  """Favorite opportunity"""
  opportunity: UUIDFilter

  """Favorite workflow"""
  workflowId: UUIDFilter

  """Favorite workflow"""
  workflow: UUIDFilter

  """Favorite workflow version"""
  workflowVersionId: UUIDFilter

  """Favorite workflow version"""
  workflowVersion: UUIDFilter

  """Favorite workflow run"""
  workflowRunId: UUIDFilter

  """Favorite workflow run"""
  workflowRun: UUIDFilter

  """Favorite view"""
  viewId: UUIDFilter

  """Favorite view"""
  view: UUIDFilter

  """Favorites Rocket"""
  rocketId: UUIDFilter

  """Favorites Rocket"""
  rocket: UUIDFilter

  """Favorites Pet"""
  petId: UUIDFilter

  """Favorites Pet"""
  pet: UUIDFilter

  """Favorites Survey result"""
  surveyResultId: UUIDFilter

  """Favorites Survey result"""
  surveyResult: UUIDFilter
  and: [FavoriteFilterInput]
  or: [FavoriteFilterInput]
  not: FavoriteFilterInput
}

"""A favorite that can be accessed from the left menu"""
input FavoriteOrderByInput {
  """Favorite position"""
  position: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Favorite task"""
  taskId: OrderByDirection

  """Favorite task"""
  task: OrderByDirection

  """Favorite note"""
  noteId: OrderByDirection

  """Favorite note"""
  note: OrderByDirection

  """Favorite workspace member"""
  forWorkspaceMemberId: OrderByDirection

  """Favorite workspace member"""
  forWorkspaceMember: OrderByDirection

  """Favorite person"""
  personId: OrderByDirection

  """Favorite person"""
  person: OrderByDirection

  """Favorite company"""
  companyId: OrderByDirection

  """Favorite company"""
  company: OrderByDirection

  """The folder this favorite belongs to"""
  favoriteFolderId: OrderByDirection

  """The folder this favorite belongs to"""
  favoriteFolder: OrderByDirection

  """Favorite opportunity"""
  opportunityId: OrderByDirection

  """Favorite opportunity"""
  opportunity: OrderByDirection

  """Favorite workflow"""
  workflowId: OrderByDirection

  """Favorite workflow"""
  workflow: OrderByDirection

  """Favorite workflow version"""
  workflowVersionId: OrderByDirection

  """Favorite workflow version"""
  workflowVersion: OrderByDirection

  """Favorite workflow run"""
  workflowRunId: OrderByDirection

  """Favorite workflow run"""
  workflowRun: OrderByDirection

  """Favorite view"""
  viewId: OrderByDirection

  """Favorite view"""
  view: OrderByDirection

  """Favorites Rocket"""
  rocketId: OrderByDirection

  """Favorites Rocket"""
  rocket: OrderByDirection

  """Favorites Pet"""
  petId: OrderByDirection

  """Favorites Pet"""
  pet: OrderByDirection

  """Favorites Survey result"""
  surveyResultId: OrderByDirection

  """Favorites Survey result"""
  surveyResult: OrderByDirection
}

"""A Folder of favorites"""
input FavoriteFolderCreateInput {
  """Favorite folder position"""
  position: Float

  """Name of the favorite folder"""
  name: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A Folder of favorites"""
input FavoriteFolderUpdateInput {
  """Favorite folder position"""
  position: Float

  """Name of the favorite folder"""
  name: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A Folder of favorites"""
input FavoriteFolderFilterInput {
  """Favorite folder position"""
  position: FloatFilter

  """Name of the favorite folder"""
  name: StringFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter
  and: [FavoriteFolderFilterInput]
  or: [FavoriteFolderFilterInput]
  not: FavoriteFolderFilterInput
}

"""A Folder of favorites"""
input FavoriteFolderOrderByInput {
  """Favorite folder position"""
  position: OrderByDirection

  """Name of the favorite folder"""
  name: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection
}

"""Aggregated / filtered event to be displayed on the timeline"""
input TimelineActivityCreateInput {
  """Creation date"""
  happensAt: DateTime

  """Event name"""
  name: String

  """Json value for event details"""
  properties: RawJSONScalar

  """Cached record name"""
  linkedRecordCachedName: String

  """Linked Record id"""
  linkedRecordId: UUID

  """Linked Object Metadata Id"""
  linkedObjectMetadataId: UUID

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Event workspace member"""
  workspaceMemberId: ID

  """Event workspace member"""
  workspaceMember: ID

  """Event person"""
  personId: ID

  """Event person"""
  person: ID

  """Event company"""
  companyId: ID

  """Event company"""
  company: ID

  """Event opportunity"""
  opportunityId: ID

  """Event opportunity"""
  opportunity: ID

  """Event note"""
  noteId: ID

  """Event note"""
  note: ID

  """Event task"""
  taskId: ID

  """Event task"""
  task: ID

  """Event workflow"""
  workflowId: ID

  """Event workflow"""
  workflow: ID

  """Event workflow version"""
  workflowVersionId: ID

  """Event workflow version"""
  workflowVersion: ID

  """Event workflow run"""
  workflowRunId: ID

  """Event workflow run"""
  workflowRun: ID

  """TimelineActivities Rocket"""
  rocketId: ID

  """TimelineActivities Rocket"""
  rocket: ID

  """TimelineActivities Pet"""
  petId: ID

  """TimelineActivities Pet"""
  pet: ID

  """TimelineActivities Survey result"""
  surveyResultId: ID

  """TimelineActivities Survey result"""
  surveyResult: ID
}

"""Aggregated / filtered event to be displayed on the timeline"""
input TimelineActivityUpdateInput {
  """Creation date"""
  happensAt: DateTime

  """Event name"""
  name: String

  """Json value for event details"""
  properties: RawJSONScalar

  """Cached record name"""
  linkedRecordCachedName: String

  """Linked Record id"""
  linkedRecordId: UUID

  """Linked Object Metadata Id"""
  linkedObjectMetadataId: UUID

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Event workspace member"""
  workspaceMemberId: ID

  """Event workspace member"""
  workspaceMember: ID

  """Event person"""
  personId: ID

  """Event person"""
  person: ID

  """Event company"""
  companyId: ID

  """Event company"""
  company: ID

  """Event opportunity"""
  opportunityId: ID

  """Event opportunity"""
  opportunity: ID

  """Event note"""
  noteId: ID

  """Event note"""
  note: ID

  """Event task"""
  taskId: ID

  """Event task"""
  task: ID

  """Event workflow"""
  workflowId: ID

  """Event workflow"""
  workflow: ID

  """Event workflow version"""
  workflowVersionId: ID

  """Event workflow version"""
  workflowVersion: ID

  """Event workflow run"""
  workflowRunId: ID

  """Event workflow run"""
  workflowRun: ID

  """TimelineActivities Rocket"""
  rocketId: ID

  """TimelineActivities Rocket"""
  rocket: ID

  """TimelineActivities Pet"""
  petId: ID

  """TimelineActivities Pet"""
  pet: ID

  """TimelineActivities Survey result"""
  surveyResultId: ID

  """TimelineActivities Survey result"""
  surveyResult: ID
}

"""Aggregated / filtered event to be displayed on the timeline"""
input TimelineActivityFilterInput {
  """Creation date"""
  happensAt: DateFilter

  """Event name"""
  name: StringFilter

  """Json value for event details"""
  properties: RawJsonFilter

  """Cached record name"""
  linkedRecordCachedName: StringFilter

  """Linked Record id"""
  linkedRecordId: UUIDFilter

  """Linked Object Metadata Id"""
  linkedObjectMetadataId: UUIDFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Event workspace member"""
  workspaceMemberId: UUIDFilter

  """Event workspace member"""
  workspaceMember: UUIDFilter

  """Event person"""
  personId: UUIDFilter

  """Event person"""
  person: UUIDFilter

  """Event company"""
  companyId: UUIDFilter

  """Event company"""
  company: UUIDFilter

  """Event opportunity"""
  opportunityId: UUIDFilter

  """Event opportunity"""
  opportunity: UUIDFilter

  """Event note"""
  noteId: UUIDFilter

  """Event note"""
  note: UUIDFilter

  """Event task"""
  taskId: UUIDFilter

  """Event task"""
  task: UUIDFilter

  """Event workflow"""
  workflowId: UUIDFilter

  """Event workflow"""
  workflow: UUIDFilter

  """Event workflow version"""
  workflowVersionId: UUIDFilter

  """Event workflow version"""
  workflowVersion: UUIDFilter

  """Event workflow run"""
  workflowRunId: UUIDFilter

  """Event workflow run"""
  workflowRun: UUIDFilter

  """TimelineActivities Rocket"""
  rocketId: UUIDFilter

  """TimelineActivities Rocket"""
  rocket: UUIDFilter

  """TimelineActivities Pet"""
  petId: UUIDFilter

  """TimelineActivities Pet"""
  pet: UUIDFilter

  """TimelineActivities Survey result"""
  surveyResultId: UUIDFilter

  """TimelineActivities Survey result"""
  surveyResult: UUIDFilter
  and: [TimelineActivityFilterInput]
  or: [TimelineActivityFilterInput]
  not: TimelineActivityFilterInput
}

"""Aggregated / filtered event to be displayed on the timeline"""
input TimelineActivityOrderByInput {
  """Creation date"""
  happensAt: OrderByDirection

  """Event name"""
  name: OrderByDirection

  """Json value for event details"""
  properties: OrderByDirection

  """Cached record name"""
  linkedRecordCachedName: OrderByDirection

  """Linked Record id"""
  linkedRecordId: OrderByDirection

  """Linked Object Metadata Id"""
  linkedObjectMetadataId: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Event workspace member"""
  workspaceMemberId: OrderByDirection

  """Event workspace member"""
  workspaceMember: OrderByDirection

  """Event person"""
  personId: OrderByDirection

  """Event person"""
  person: OrderByDirection

  """Event company"""
  companyId: OrderByDirection

  """Event company"""
  company: OrderByDirection

  """Event opportunity"""
  opportunityId: OrderByDirection

  """Event opportunity"""
  opportunity: OrderByDirection

  """Event note"""
  noteId: OrderByDirection

  """Event note"""
  note: OrderByDirection

  """Event task"""
  taskId: OrderByDirection

  """Event task"""
  task: OrderByDirection

  """Event workflow"""
  workflowId: OrderByDirection

  """Event workflow"""
  workflow: OrderByDirection

  """Event workflow version"""
  workflowVersionId: OrderByDirection

  """Event workflow version"""
  workflowVersion: OrderByDirection

  """Event workflow run"""
  workflowRunId: OrderByDirection

  """Event workflow run"""
  workflowRun: OrderByDirection

  """TimelineActivities Rocket"""
  rocketId: OrderByDirection

  """TimelineActivities Rocket"""
  rocket: OrderByDirection

  """TimelineActivities Pet"""
  petId: OrderByDirection

  """TimelineActivities Pet"""
  pet: OrderByDirection

  """TimelineActivities Survey result"""
  surveyResultId: OrderByDirection

  """TimelineActivities Survey result"""
  surveyResult: OrderByDirection
}

"""(System) View Fields"""
input ViewFieldCreateInput {
  """View Field target field"""
  fieldMetadataId: UUID!

  """View Field visibility"""
  isVisible: Boolean

  """View Field size"""
  size: Float

  """View Field position"""
  position: Float

  """Optional aggregate operation"""
  aggregateOperation: ViewFieldAggregateOperationEnum

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Field related view"""
  viewId: ID

  """View Field related view"""
  view: ID
}

"""(System) View Fields"""
input ViewFieldUpdateInput {
  """View Field target field"""
  fieldMetadataId: UUID

  """View Field visibility"""
  isVisible: Boolean

  """View Field size"""
  size: Float

  """View Field position"""
  position: Float

  """Optional aggregate operation"""
  aggregateOperation: ViewFieldAggregateOperationEnum

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Field related view"""
  viewId: ID

  """View Field related view"""
  view: ID
}

"""(System) View Fields"""
input ViewFieldFilterInput {
  """View Field target field"""
  fieldMetadataId: UUIDFilter

  """View Field visibility"""
  isVisible: BooleanFilter

  """View Field size"""
  size: FloatFilter

  """View Field position"""
  position: FloatFilter

  """Optional aggregate operation"""
  aggregateOperation: ViewFieldAggregateOperationEnumFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """View Field related view"""
  viewId: UUIDFilter

  """View Field related view"""
  view: UUIDFilter
  and: [ViewFieldFilterInput]
  or: [ViewFieldFilterInput]
  not: ViewFieldFilterInput
}

input ViewFieldAggregateOperationEnumFilter {
  eq: ViewFieldAggregateOperationEnum
  neq: ViewFieldAggregateOperationEnum
  in: [ViewFieldAggregateOperationEnum]
  containsAny: [ViewFieldAggregateOperationEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""(System) View Fields"""
input ViewFieldOrderByInput {
  """View Field target field"""
  fieldMetadataId: OrderByDirection

  """View Field visibility"""
  isVisible: OrderByDirection

  """View Field size"""
  size: OrderByDirection

  """View Field position"""
  position: OrderByDirection

  """Optional aggregate operation"""
  aggregateOperation: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """View Field related view"""
  viewId: OrderByDirection

  """View Field related view"""
  view: OrderByDirection
}

"""(System) View Filter Groups"""
input ViewFilterGroupCreateInput {
  """Logical operator for the filter group"""
  logicalOperator: ViewFilterGroupLogicalOperatorEnum

  """Position in the parent view filter group"""
  positionInViewFilterGroup: Float

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Parent View Filter Group"""
  parentViewFilterGroupId: UUID

  """View"""
  viewId: ID

  """View"""
  view: ID
}

"""(System) View Filter Groups"""
input ViewFilterGroupUpdateInput {
  """Logical operator for the filter group"""
  logicalOperator: ViewFilterGroupLogicalOperatorEnum

  """Position in the parent view filter group"""
  positionInViewFilterGroup: Float

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Parent View Filter Group"""
  parentViewFilterGroupId: UUID

  """View"""
  viewId: ID

  """View"""
  view: ID
}

"""(System) View Filter Groups"""
input ViewFilterGroupFilterInput {
  """Logical operator for the filter group"""
  logicalOperator: ViewFilterGroupLogicalOperatorEnumFilter

  """Position in the parent view filter group"""
  positionInViewFilterGroup: FloatFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Parent View Filter Group"""
  parentViewFilterGroupId: UUIDFilter

  """View"""
  viewId: UUIDFilter

  """View"""
  view: UUIDFilter
  and: [ViewFilterGroupFilterInput]
  or: [ViewFilterGroupFilterInput]
  not: ViewFilterGroupFilterInput
}

input ViewFilterGroupLogicalOperatorEnumFilter {
  eq: ViewFilterGroupLogicalOperatorEnum
  neq: ViewFilterGroupLogicalOperatorEnum
  in: [ViewFilterGroupLogicalOperatorEnum]
  containsAny: [ViewFilterGroupLogicalOperatorEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""(System) View Filter Groups"""
input ViewFilterGroupOrderByInput {
  """Logical operator for the filter group"""
  logicalOperator: OrderByDirection

  """Position in the parent view filter group"""
  positionInViewFilterGroup: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Parent View Filter Group"""
  parentViewFilterGroupId: OrderByDirection

  """View"""
  viewId: OrderByDirection

  """View"""
  view: OrderByDirection
}

"""(System) View Groups"""
input ViewGroupCreateInput {
  """View Group target field"""
  fieldMetadataId: UUID!

  """View Group visibility"""
  isVisible: Boolean

  """Group by this field value"""
  fieldValue: String

  """View Field position"""
  position: Float

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Group related view"""
  viewId: ID

  """View Group related view"""
  view: ID
}

"""(System) View Groups"""
input ViewGroupUpdateInput {
  """View Group target field"""
  fieldMetadataId: UUID

  """View Group visibility"""
  isVisible: Boolean

  """Group by this field value"""
  fieldValue: String

  """View Field position"""
  position: Float

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Group related view"""
  viewId: ID

  """View Group related view"""
  view: ID
}

"""(System) View Groups"""
input ViewGroupFilterInput {
  """View Group target field"""
  fieldMetadataId: UUIDFilter

  """View Group visibility"""
  isVisible: BooleanFilter

  """Group by this field value"""
  fieldValue: StringFilter

  """View Field position"""
  position: FloatFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """View Group related view"""
  viewId: UUIDFilter

  """View Group related view"""
  view: UUIDFilter
  and: [ViewGroupFilterInput]
  or: [ViewGroupFilterInput]
  not: ViewGroupFilterInput
}

"""(System) View Groups"""
input ViewGroupOrderByInput {
  """View Group target field"""
  fieldMetadataId: OrderByDirection

  """View Group visibility"""
  isVisible: OrderByDirection

  """Group by this field value"""
  fieldValue: OrderByDirection

  """View Field position"""
  position: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """View Group related view"""
  viewId: OrderByDirection

  """View Group related view"""
  view: OrderByDirection
}

"""(System) View Filters"""
input ViewFilterCreateInput {
  """View Filter target field"""
  fieldMetadataId: UUID!

  """View Filter operand"""
  operand: String

  """View Filter value"""
  value: String

  """View Filter Display Value"""
  displayValue: String

  """View Filter Group"""
  viewFilterGroupId: UUID

  """Position in the view filter group"""
  positionInViewFilterGroup: Float

  """Sub field name"""
  subFieldName: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Filter related view"""
  viewId: ID

  """View Filter related view"""
  view: ID
}

"""(System) View Filters"""
input ViewFilterUpdateInput {
  """View Filter target field"""
  fieldMetadataId: UUID

  """View Filter operand"""
  operand: String

  """View Filter value"""
  value: String

  """View Filter Display Value"""
  displayValue: String

  """View Filter Group"""
  viewFilterGroupId: UUID

  """Position in the view filter group"""
  positionInViewFilterGroup: Float

  """Sub field name"""
  subFieldName: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Filter related view"""
  viewId: ID

  """View Filter related view"""
  view: ID
}

"""(System) View Filters"""
input ViewFilterFilterInput {
  """View Filter target field"""
  fieldMetadataId: UUIDFilter

  """View Filter operand"""
  operand: StringFilter

  """View Filter value"""
  value: StringFilter

  """View Filter Display Value"""
  displayValue: StringFilter

  """View Filter Group"""
  viewFilterGroupId: UUIDFilter

  """Position in the view filter group"""
  positionInViewFilterGroup: FloatFilter

  """Sub field name"""
  subFieldName: StringFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """View Filter related view"""
  viewId: UUIDFilter

  """View Filter related view"""
  view: UUIDFilter
  and: [ViewFilterFilterInput]
  or: [ViewFilterFilterInput]
  not: ViewFilterFilterInput
}

"""(System) View Filters"""
input ViewFilterOrderByInput {
  """View Filter target field"""
  fieldMetadataId: OrderByDirection

  """View Filter operand"""
  operand: OrderByDirection

  """View Filter value"""
  value: OrderByDirection

  """View Filter Display Value"""
  displayValue: OrderByDirection

  """View Filter Group"""
  viewFilterGroupId: OrderByDirection

  """Position in the view filter group"""
  positionInViewFilterGroup: OrderByDirection

  """Sub field name"""
  subFieldName: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """View Filter related view"""
  viewId: OrderByDirection

  """View Filter related view"""
  view: OrderByDirection
}

"""(System) View Sorts"""
input ViewSortCreateInput {
  """View Sort target field"""
  fieldMetadataId: UUID!

  """View Sort direction"""
  direction: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Sort related view"""
  viewId: ID

  """View Sort related view"""
  view: ID
}

"""(System) View Sorts"""
input ViewSortUpdateInput {
  """View Sort target field"""
  fieldMetadataId: UUID

  """View Sort direction"""
  direction: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """View Sort related view"""
  viewId: ID

  """View Sort related view"""
  view: ID
}

"""(System) View Sorts"""
input ViewSortFilterInput {
  """View Sort target field"""
  fieldMetadataId: UUIDFilter

  """View Sort direction"""
  direction: StringFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """View Sort related view"""
  viewId: UUIDFilter

  """View Sort related view"""
  view: UUIDFilter
  and: [ViewSortFilterInput]
  or: [ViewSortFilterInput]
  not: ViewSortFilterInput
}

"""(System) View Sorts"""
input ViewSortOrderByInput {
  """View Sort target field"""
  fieldMetadataId: OrderByDirection

  """View Sort direction"""
  direction: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """View Sort related view"""
  viewId: OrderByDirection

  """View Sort related view"""
  view: OrderByDirection
}

"""(System) Views"""
input ViewCreateInput {
  """View name"""
  name: String

  """View target object"""
  objectMetadataId: UUID!

  """View type"""
  type: String

  """View key"""
  key: ViewKeyEnum

  """View icon"""
  icon: String

  """View Kanban column field"""
  kanbanFieldMetadataId: String

  """View position"""
  position: Position

  """Describes if the view is in compact mode"""
  isCompact: Boolean

  """Display the records in a side panel or in a record page"""
  openRecordIn: ViewOpenRecordInEnum

  """Optional aggregate operation"""
  kanbanAggregateOperation: ViewKanbanAggregateOperationEnum

  """Field metadata used for aggregate operation"""
  kanbanAggregateOperationFieldMetadataId: UUID

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""(System) Views"""
input ViewUpdateInput {
  """View name"""
  name: String

  """View target object"""
  objectMetadataId: UUID

  """View type"""
  type: String

  """View key"""
  key: ViewKeyEnum

  """View icon"""
  icon: String

  """View Kanban column field"""
  kanbanFieldMetadataId: String

  """View position"""
  position: Position

  """Describes if the view is in compact mode"""
  isCompact: Boolean

  """Display the records in a side panel or in a record page"""
  openRecordIn: ViewOpenRecordInEnum

  """Optional aggregate operation"""
  kanbanAggregateOperation: ViewKanbanAggregateOperationEnum

  """Field metadata used for aggregate operation"""
  kanbanAggregateOperationFieldMetadataId: UUID

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""(System) Views"""
input ViewFilterInput {
  """View name"""
  name: StringFilter

  """View target object"""
  objectMetadataId: UUIDFilter

  """View type"""
  type: StringFilter

  """View key"""
  key: ViewKeyEnumFilter

  """View icon"""
  icon: StringFilter

  """View Kanban column field"""
  kanbanFieldMetadataId: StringFilter

  """View position"""
  position: FloatFilter

  """Describes if the view is in compact mode"""
  isCompact: BooleanFilter

  """Display the records in a side panel or in a record page"""
  openRecordIn: ViewOpenRecordInEnumFilter

  """Optional aggregate operation"""
  kanbanAggregateOperation: ViewKanbanAggregateOperationEnumFilter

  """Field metadata used for aggregate operation"""
  kanbanAggregateOperationFieldMetadataId: UUIDFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter
  and: [ViewFilterInput]
  or: [ViewFilterInput]
  not: ViewFilterInput
}

input ViewKeyEnumFilter {
  eq: ViewKeyEnum
  neq: ViewKeyEnum
  in: [ViewKeyEnum]
  containsAny: [ViewKeyEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input ViewOpenRecordInEnumFilter {
  eq: ViewOpenRecordInEnum
  neq: ViewOpenRecordInEnum
  in: [ViewOpenRecordInEnum]
  containsAny: [ViewOpenRecordInEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input ViewKanbanAggregateOperationEnumFilter {
  eq: ViewKanbanAggregateOperationEnum
  neq: ViewKanbanAggregateOperationEnum
  in: [ViewKanbanAggregateOperationEnum]
  containsAny: [ViewKanbanAggregateOperationEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""(System) Views"""
input ViewOrderByInput {
  """View name"""
  name: OrderByDirection

  """View target object"""
  objectMetadataId: OrderByDirection

  """View type"""
  type: OrderByDirection

  """View key"""
  key: OrderByDirection

  """View icon"""
  icon: OrderByDirection

  """View Kanban column field"""
  kanbanFieldMetadataId: OrderByDirection

  """View position"""
  position: OrderByDirection

  """Describes if the view is in compact mode"""
  isCompact: OrderByDirection

  """Display the records in a side panel or in a record page"""
  openRecordIn: OrderByDirection

  """Optional aggregate operation"""
  kanbanAggregateOperation: OrderByDirection

  """Field metadata used for aggregate operation"""
  kanbanAggregateOperationFieldMetadataId: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection
}

"""A webhook"""
input WebhookCreateInput {
  """Webhook target url"""
  targetUrl: String

  """Webhook operations"""
  operations: [String]

  """"""
  description: String

  """
  Optional secret used to compute the HMAC signature for webhook payloads. This secret is shared between Twenty and the webhook consumer to authenticate webhook requests.
  """
  secret: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A webhook"""
input WebhookUpdateInput {
  """Webhook target url"""
  targetUrl: String

  """Webhook operations"""
  operations: [String]

  """"""
  description: String

  """
  Optional secret used to compute the HMAC signature for webhook payloads. This secret is shared between Twenty and the webhook consumer to authenticate webhook requests.
  """
  secret: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A webhook"""
input WebhookFilterInput {
  """Webhook target url"""
  targetUrl: StringFilter

  """Webhook operations"""
  operations: ArrayFilter

  """"""
  description: StringFilter

  """
  Optional secret used to compute the HMAC signature for webhook payloads. This secret is shared between Twenty and the webhook consumer to authenticate webhook requests.
  """
  secret: StringFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter
  and: [WebhookFilterInput]
  or: [WebhookFilterInput]
  not: WebhookFilterInput
}

"""A webhook"""
input WebhookOrderByInput {
  """Webhook target url"""
  targetUrl: OrderByDirection

  """Webhook operations"""
  operations: OrderByDirection

  """"""
  description: OrderByDirection

  """
  Optional secret used to compute the HMAC signature for webhook payloads. This secret is shared between Twenty and the webhook consumer to authenticate webhook requests.
  """
  secret: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection
}

"""A workflow"""
input WorkflowCreateInput {
  """The workflow name"""
  name: String

  """The workflow last published version id"""
  lastPublishedVersionId: String

  """The current statuses of the workflow versions"""
  statuses: [WorkflowStatusesEnum]

  """Workflow record position"""
  position: Position

  """The creator of the record"""
  createdBy: ActorCreateInput

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A workflow"""
input WorkflowUpdateInput {
  """The workflow name"""
  name: String

  """The workflow last published version id"""
  lastPublishedVersionId: String

  """The current statuses of the workflow versions"""
  statuses: [WorkflowStatusesEnum]

  """Workflow record position"""
  position: Position

  """The creator of the record"""
  createdBy: ActorUpdateInput

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A workflow"""
input WorkflowFilterInput {
  """The workflow name"""
  name: StringFilter

  """The workflow last published version id"""
  lastPublishedVersionId: StringFilter

  """The current statuses of the workflow versions"""
  statuses: WorkflowStatusesEnumFilter

  """Workflow record position"""
  position: FloatFilter

  """The creator of the record"""
  createdBy: ActorFilterInput

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter
  and: [WorkflowFilterInput]
  or: [WorkflowFilterInput]
  not: WorkflowFilterInput
}

input WorkflowStatusesEnumFilter {
  eq: WorkflowStatusesEnum
  neq: WorkflowStatusesEnum
  in: [WorkflowStatusesEnum]
  containsAny: [WorkflowStatusesEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""A workflow"""
input WorkflowOrderByInput {
  """The workflow name"""
  name: OrderByDirection

  """The workflow last published version id"""
  lastPublishedVersionId: OrderByDirection

  """The current statuses of the workflow versions"""
  statuses: [OrderByDirection]

  """Workflow record position"""
  position: OrderByDirection

  """The creator of the record"""
  createdBy: ActorOrderByInput

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection
}

"""A workflow version"""
input WorkflowVersionCreateInput {
  """The workflow version name"""
  name: String

  """Json object to provide trigger"""
  trigger: RawJSONScalar

  """Json object to provide steps"""
  steps: RawJSONScalar

  """The workflow version status"""
  status: WorkflowVersionStatusEnum

  """Workflow version position"""
  position: Position

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """WorkflowVersion workflow"""
  workflowId: ID

  """WorkflowVersion workflow"""
  workflow: ID
}

"""A workflow version"""
input WorkflowVersionUpdateInput {
  """The workflow version name"""
  name: String

  """Json object to provide trigger"""
  trigger: RawJSONScalar

  """Json object to provide steps"""
  steps: RawJSONScalar

  """The workflow version status"""
  status: WorkflowVersionStatusEnum

  """Workflow version position"""
  position: Position

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """WorkflowVersion workflow"""
  workflowId: ID

  """WorkflowVersion workflow"""
  workflow: ID
}

"""A workflow version"""
input WorkflowVersionFilterInput {
  """The workflow version name"""
  name: StringFilter

  """Json object to provide trigger"""
  trigger: RawJsonFilter

  """Json object to provide steps"""
  steps: RawJsonFilter

  """The workflow version status"""
  status: WorkflowVersionStatusEnumFilter

  """Workflow version position"""
  position: FloatFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """WorkflowVersion workflow"""
  workflowId: UUIDFilter

  """WorkflowVersion workflow"""
  workflow: UUIDFilter
  and: [WorkflowVersionFilterInput]
  or: [WorkflowVersionFilterInput]
  not: WorkflowVersionFilterInput
}

input WorkflowVersionStatusEnumFilter {
  eq: WorkflowVersionStatusEnum
  neq: WorkflowVersionStatusEnum
  in: [WorkflowVersionStatusEnum]
  containsAny: [WorkflowVersionStatusEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""A workflow version"""
input WorkflowVersionOrderByInput {
  """The workflow version name"""
  name: OrderByDirection

  """Json object to provide trigger"""
  trigger: OrderByDirection

  """Json object to provide steps"""
  steps: OrderByDirection

  """The workflow version status"""
  status: OrderByDirection

  """Workflow version position"""
  position: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """WorkflowVersion workflow"""
  workflowId: OrderByDirection

  """WorkflowVersion workflow"""
  workflow: OrderByDirection
}

"""A workflow run"""
input WorkflowRunCreateInput {
  """Name of the workflow run"""
  name: String

  """Workflow run started at"""
  startedAt: DateTime

  """Workflow run ended at"""
  endedAt: DateTime

  """Workflow run status"""
  status: WorkflowRunStatusEnum

  """The executor of the workflow"""
  createdBy: ActorCreateInput

  """Json object to provide output of the workflow run"""
  output: RawJSONScalar

  """Context"""
  context: RawJSONScalar

  """Workflow run position"""
  position: Position

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Workflow version linked to the run."""
  workflowVersionId: ID

  """Workflow version linked to the run."""
  workflowVersion: ID

  """Workflow linked to the run."""
  workflowId: ID

  """Workflow linked to the run."""
  workflow: ID
}

"""A workflow run"""
input WorkflowRunUpdateInput {
  """Name of the workflow run"""
  name: String

  """Workflow run started at"""
  startedAt: DateTime

  """Workflow run ended at"""
  endedAt: DateTime

  """Workflow run status"""
  status: WorkflowRunStatusEnum

  """The executor of the workflow"""
  createdBy: ActorUpdateInput

  """Json object to provide output of the workflow run"""
  output: RawJSONScalar

  """Context"""
  context: RawJSONScalar

  """Workflow run position"""
  position: Position

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Workflow version linked to the run."""
  workflowVersionId: ID

  """Workflow version linked to the run."""
  workflowVersion: ID

  """Workflow linked to the run."""
  workflowId: ID

  """Workflow linked to the run."""
  workflow: ID
}

"""A workflow run"""
input WorkflowRunFilterInput {
  """Name of the workflow run"""
  name: StringFilter

  """Workflow run started at"""
  startedAt: DateFilter

  """Workflow run ended at"""
  endedAt: DateFilter

  """Workflow run status"""
  status: WorkflowRunStatusEnumFilter

  """The executor of the workflow"""
  createdBy: ActorFilterInput

  """Json object to provide output of the workflow run"""
  output: RawJsonFilter

  """Context"""
  context: RawJsonFilter

  """Workflow run position"""
  position: FloatFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Workflow version linked to the run."""
  workflowVersionId: UUIDFilter

  """Workflow version linked to the run."""
  workflowVersion: UUIDFilter

  """Workflow linked to the run."""
  workflowId: UUIDFilter

  """Workflow linked to the run."""
  workflow: UUIDFilter
  and: [WorkflowRunFilterInput]
  or: [WorkflowRunFilterInput]
  not: WorkflowRunFilterInput
}

input WorkflowRunStatusEnumFilter {
  eq: WorkflowRunStatusEnum
  neq: WorkflowRunStatusEnum
  in: [WorkflowRunStatusEnum]
  containsAny: [WorkflowRunStatusEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""A workflow run"""
input WorkflowRunOrderByInput {
  """Name of the workflow run"""
  name: OrderByDirection

  """Workflow run started at"""
  startedAt: OrderByDirection

  """Workflow run ended at"""
  endedAt: OrderByDirection

  """Workflow run status"""
  status: OrderByDirection

  """The executor of the workflow"""
  createdBy: ActorOrderByInput

  """Json object to provide output of the workflow run"""
  output: OrderByDirection

  """Context"""
  context: OrderByDirection

  """Workflow run position"""
  position: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Workflow version linked to the run."""
  workflowVersionId: OrderByDirection

  """Workflow version linked to the run."""
  workflowVersion: OrderByDirection

  """Workflow linked to the run."""
  workflowId: OrderByDirection

  """Workflow linked to the run."""
  workflow: OrderByDirection
}

"""A workflow automated trigger"""
input WorkflowAutomatedTriggerCreateInput {
  """The workflow automated trigger type"""
  type: WorkflowAutomatedTriggerTypeEnum!

  """The workflow automated trigger settings"""
  settings: RawJSONScalar!

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """WorkflowAutomatedTrigger workflow"""
  workflowId: ID

  """WorkflowAutomatedTrigger workflow"""
  workflow: ID
}

"""A workflow automated trigger"""
input WorkflowAutomatedTriggerUpdateInput {
  """The workflow automated trigger type"""
  type: WorkflowAutomatedTriggerTypeEnum

  """The workflow automated trigger settings"""
  settings: RawJSONScalar

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """WorkflowAutomatedTrigger workflow"""
  workflowId: ID

  """WorkflowAutomatedTrigger workflow"""
  workflow: ID
}

"""A workflow automated trigger"""
input WorkflowAutomatedTriggerFilterInput {
  """The workflow automated trigger type"""
  type: WorkflowAutomatedTriggerTypeEnumFilter

  """The workflow automated trigger settings"""
  settings: RawJsonFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """WorkflowAutomatedTrigger workflow"""
  workflowId: UUIDFilter

  """WorkflowAutomatedTrigger workflow"""
  workflow: UUIDFilter
  and: [WorkflowAutomatedTriggerFilterInput]
  or: [WorkflowAutomatedTriggerFilterInput]
  not: WorkflowAutomatedTriggerFilterInput
}

input WorkflowAutomatedTriggerTypeEnumFilter {
  eq: WorkflowAutomatedTriggerTypeEnum
  neq: WorkflowAutomatedTriggerTypeEnum
  in: [WorkflowAutomatedTriggerTypeEnum]
  containsAny: [WorkflowAutomatedTriggerTypeEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""A workflow automated trigger"""
input WorkflowAutomatedTriggerOrderByInput {
  """The workflow automated trigger type"""
  type: OrderByDirection

  """The workflow automated trigger settings"""
  settings: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """WorkflowAutomatedTrigger workflow"""
  workflowId: OrderByDirection

  """WorkflowAutomatedTrigger workflow"""
  workflow: OrderByDirection
}

"""A workspace member"""
input WorkspaceMemberCreateInput {
  """Workspace member position"""
  position: Position

  """Workspace member name"""
  name: FullNameCreateInput

  """Preferred color scheme"""
  colorScheme: String

  """Preferred language"""
  locale: String

  """Workspace member avatar"""
  avatarUrl: String

  """Related user email address"""
  userEmail: String

  """Associated User Id"""
  userId: UUID!

  """User time zone"""
  timeZone: String

  """User's preferred date format"""
  dateFormat: WorkspaceMemberDateFormatEnum

  """User's preferred time format"""
  timeFormat: WorkspaceMemberTimeFormatEnum

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A workspace member"""
input WorkspaceMemberUpdateInput {
  """Workspace member position"""
  position: Position

  """Workspace member name"""
  name: FullNameUpdateInput

  """Preferred color scheme"""
  colorScheme: String

  """Preferred language"""
  locale: String

  """Workspace member avatar"""
  avatarUrl: String

  """Related user email address"""
  userEmail: String

  """Associated User Id"""
  userId: UUID

  """User time zone"""
  timeZone: String

  """User's preferred date format"""
  dateFormat: WorkspaceMemberDateFormatEnum

  """User's preferred time format"""
  timeFormat: WorkspaceMemberTimeFormatEnum

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A workspace member"""
input WorkspaceMemberFilterInput {
  """Workspace member position"""
  position: FloatFilter

  """Workspace member name"""
  name: FullNameFilterInput

  """Preferred color scheme"""
  colorScheme: StringFilter

  """Preferred language"""
  locale: StringFilter

  """Workspace member avatar"""
  avatarUrl: StringFilter

  """Related user email address"""
  userEmail: StringFilter

  """Associated User Id"""
  userId: UUIDFilter

  """User time zone"""
  timeZone: StringFilter

  """User's preferred date format"""
  dateFormat: WorkspaceMemberDateFormatEnumFilter

  """User's preferred time format"""
  timeFormat: WorkspaceMemberTimeFormatEnumFilter

  """Field used for full-text search"""
  searchVector: TSVectorFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter
  and: [WorkspaceMemberFilterInput]
  or: [WorkspaceMemberFilterInput]
  not: WorkspaceMemberFilterInput
}

input WorkspaceMemberDateFormatEnumFilter {
  eq: WorkspaceMemberDateFormatEnum
  neq: WorkspaceMemberDateFormatEnum
  in: [WorkspaceMemberDateFormatEnum]
  containsAny: [WorkspaceMemberDateFormatEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input WorkspaceMemberTimeFormatEnumFilter {
  eq: WorkspaceMemberTimeFormatEnum
  neq: WorkspaceMemberTimeFormatEnum
  in: [WorkspaceMemberTimeFormatEnum]
  containsAny: [WorkspaceMemberTimeFormatEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""A workspace member"""
input WorkspaceMemberOrderByInput {
  """Workspace member position"""
  position: OrderByDirection

  """Workspace member name"""
  name: FullNameOrderByInput

  """Preferred color scheme"""
  colorScheme: OrderByDirection

  """Preferred language"""
  locale: OrderByDirection

  """Workspace member avatar"""
  avatarUrl: OrderByDirection

  """Related user email address"""
  userEmail: OrderByDirection

  """Associated User Id"""
  userId: OrderByDirection

  """User time zone"""
  timeZone: OrderByDirection

  """User's preferred date format"""
  dateFormat: OrderByDirection

  """User's preferred time format"""
  timeFormat: OrderByDirection

  """Field used for full-text search"""
  searchVector: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection
}

"""A note"""
input NoteCreateInput {
  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Note record position"""
  position: Position

  """Note title"""
  title: String

  """Note body"""
  body: String

  """Note body"""
  bodyV2: RichTextV2CreateInput

  """The creator of the record"""
  createdBy: ActorCreateInput

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime
}

"""A note"""
input NoteUpdateInput {
  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Note record position"""
  position: Position

  """Note title"""
  title: String

  """Note body"""
  body: String

  """Note body"""
  bodyV2: RichTextV2UpdateInput

  """The creator of the record"""
  createdBy: ActorUpdateInput

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime
}

"""A note"""
input NoteFilterInput {
  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Note record position"""
  position: FloatFilter

  """Note title"""
  title: StringFilter

  """Note body"""
  body: StringFilter

  """Note body"""
  bodyV2: RichTextV2Filter

  """The creator of the record"""
  createdBy: ActorFilterInput

  """Field used for full-text search"""
  searchVector: TSVectorFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter
  and: [NoteFilterInput]
  or: [NoteFilterInput]
  not: NoteFilterInput
}

input RichTextV2Filter {
  blocknote: RichTextV2LeafFilter
  markdown: RichTextV2LeafFilter
}

input RichTextV2LeafFilter {
  ilike: String
}

"""A note"""
input NoteOrderByInput {
  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Note record position"""
  position: OrderByDirection

  """Note title"""
  title: OrderByDirection

  """Note body"""
  body: OrderByDirection

  """Note body"""
  bodyV2: RichTextV2OrderByInput

  """The creator of the record"""
  createdBy: ActorOrderByInput

  """Field used for full-text search"""
  searchVector: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection
}

"""A task target"""
input TaskTargetCreateInput {
  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """TaskTarget task"""
  taskId: ID

  """TaskTarget task"""
  task: ID

  """TaskTarget person"""
  personId: ID

  """TaskTarget person"""
  person: ID

  """TaskTarget company"""
  companyId: ID

  """TaskTarget company"""
  company: ID

  """TaskTarget opportunity"""
  opportunityId: ID

  """TaskTarget opportunity"""
  opportunity: ID

  """TaskTargets Rocket"""
  rocketId: ID

  """TaskTargets Rocket"""
  rocket: ID

  """TaskTargets Pet"""
  petId: ID

  """TaskTargets Pet"""
  pet: ID

  """TaskTargets Survey result"""
  surveyResultId: ID

  """TaskTargets Survey result"""
  surveyResult: ID
}

"""A task target"""
input TaskTargetUpdateInput {
  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """TaskTarget task"""
  taskId: ID

  """TaskTarget task"""
  task: ID

  """TaskTarget person"""
  personId: ID

  """TaskTarget person"""
  person: ID

  """TaskTarget company"""
  companyId: ID

  """TaskTarget company"""
  company: ID

  """TaskTarget opportunity"""
  opportunityId: ID

  """TaskTarget opportunity"""
  opportunity: ID

  """TaskTargets Rocket"""
  rocketId: ID

  """TaskTargets Rocket"""
  rocket: ID

  """TaskTargets Pet"""
  petId: ID

  """TaskTargets Pet"""
  pet: ID

  """TaskTargets Survey result"""
  surveyResultId: ID

  """TaskTargets Survey result"""
  surveyResult: ID
}

"""A task target"""
input TaskTargetFilterInput {
  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """TaskTarget task"""
  taskId: UUIDFilter

  """TaskTarget task"""
  task: UUIDFilter

  """TaskTarget person"""
  personId: UUIDFilter

  """TaskTarget person"""
  person: UUIDFilter

  """TaskTarget company"""
  companyId: UUIDFilter

  """TaskTarget company"""
  company: UUIDFilter

  """TaskTarget opportunity"""
  opportunityId: UUIDFilter

  """TaskTarget opportunity"""
  opportunity: UUIDFilter

  """TaskTargets Rocket"""
  rocketId: UUIDFilter

  """TaskTargets Rocket"""
  rocket: UUIDFilter

  """TaskTargets Pet"""
  petId: UUIDFilter

  """TaskTargets Pet"""
  pet: UUIDFilter

  """TaskTargets Survey result"""
  surveyResultId: UUIDFilter

  """TaskTargets Survey result"""
  surveyResult: UUIDFilter
  and: [TaskTargetFilterInput]
  or: [TaskTargetFilterInput]
  not: TaskTargetFilterInput
}

"""A task target"""
input TaskTargetOrderByInput {
  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """TaskTarget task"""
  taskId: OrderByDirection

  """TaskTarget task"""
  task: OrderByDirection

  """TaskTarget person"""
  personId: OrderByDirection

  """TaskTarget person"""
  person: OrderByDirection

  """TaskTarget company"""
  companyId: OrderByDirection

  """TaskTarget company"""
  company: OrderByDirection

  """TaskTarget opportunity"""
  opportunityId: OrderByDirection

  """TaskTarget opportunity"""
  opportunity: OrderByDirection

  """TaskTargets Rocket"""
  rocketId: OrderByDirection

  """TaskTargets Rocket"""
  rocket: OrderByDirection

  """TaskTargets Pet"""
  petId: OrderByDirection

  """TaskTargets Pet"""
  pet: OrderByDirection

  """TaskTargets Survey result"""
  surveyResultId: OrderByDirection

  """TaskTargets Survey result"""
  surveyResult: OrderByDirection
}

"""A group of related messages (e.g. email thread, chat thread)"""
input MessageThreadCreateInput {
  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A group of related messages (e.g. email thread, chat thread)"""
input MessageThreadUpdateInput {
  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime
}

"""A group of related messages (e.g. email thread, chat thread)"""
input MessageThreadFilterInput {
  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter
  and: [MessageThreadFilterInput]
  or: [MessageThreadFilterInput]
  not: MessageThreadFilterInput
}

"""A group of related messages (e.g. email thread, chat thread)"""
input MessageThreadOrderByInput {
  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection
}

"""
A message sent or received through a messaging channel (email, chat, etc.)
"""
input MessageCreateInput {
  """Message id from the message header"""
  headerMessageId: String

  """Subject"""
  subject: String

  """Text"""
  text: String

  """The date the message was received"""
  receivedAt: DateTime

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message Thread Id"""
  messageThreadId: ID

  """Message Thread Id"""
  messageThread: ID
}

"""
A message sent or received through a messaging channel (email, chat, etc.)
"""
input MessageUpdateInput {
  """Message id from the message header"""
  headerMessageId: String

  """Subject"""
  subject: String

  """Text"""
  text: String

  """The date the message was received"""
  receivedAt: DateTime

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message Thread Id"""
  messageThreadId: ID

  """Message Thread Id"""
  messageThread: ID
}

"""
A message sent or received through a messaging channel (email, chat, etc.)
"""
input MessageFilterInput {
  """Message id from the message header"""
  headerMessageId: StringFilter

  """Subject"""
  subject: StringFilter

  """Text"""
  text: StringFilter

  """The date the message was received"""
  receivedAt: DateFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Message Thread Id"""
  messageThreadId: UUIDFilter

  """Message Thread Id"""
  messageThread: UUIDFilter
  and: [MessageFilterInput]
  or: [MessageFilterInput]
  not: MessageFilterInput
}

"""
A message sent or received through a messaging channel (email, chat, etc.)
"""
input MessageOrderByInput {
  """Message id from the message header"""
  headerMessageId: OrderByDirection

  """Subject"""
  subject: OrderByDirection

  """Text"""
  text: OrderByDirection

  """The date the message was received"""
  receivedAt: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Message Thread Id"""
  messageThreadId: OrderByDirection

  """Message Thread Id"""
  messageThread: OrderByDirection
}

"""Message Channels"""
input MessageChannelCreateInput {
  """Visibility"""
  visibility: MessageChannelVisibilityEnum

  """Handle"""
  handle: String

  """Channel Type"""
  type: MessageChannelTypeEnum

  """Is Contact Auto Creation Enabled"""
  isContactAutoCreationEnabled: Boolean

  """Automatically create People records when receiving or sending emails"""
  contactAutoCreationPolicy: MessageChannelContactAutoCreationPolicyEnum

  """Exclude non professional emails"""
  excludeNonProfessionalEmails: Boolean

  """Exclude group emails"""
  excludeGroupEmails: Boolean

  """Is Sync Enabled"""
  isSyncEnabled: Boolean

  """Last sync cursor"""
  syncCursor: String

  """Last sync date"""
  syncedAt: DateTime

  """Sync status"""
  syncStatus: MessageChannelSyncStatusEnum

  """Sync stage"""
  syncStage: MessageChannelSyncStageEnum

  """Sync stage started at"""
  syncStageStartedAt: DateTime

  """Throttle Failure Count"""
  throttleFailureCount: Float

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Connected Account"""
  connectedAccountId: ID

  """Connected Account"""
  connectedAccount: ID
}

"""Message Channels"""
input MessageChannelUpdateInput {
  """Visibility"""
  visibility: MessageChannelVisibilityEnum

  """Handle"""
  handle: String

  """Channel Type"""
  type: MessageChannelTypeEnum

  """Is Contact Auto Creation Enabled"""
  isContactAutoCreationEnabled: Boolean

  """Automatically create People records when receiving or sending emails"""
  contactAutoCreationPolicy: MessageChannelContactAutoCreationPolicyEnum

  """Exclude non professional emails"""
  excludeNonProfessionalEmails: Boolean

  """Exclude group emails"""
  excludeGroupEmails: Boolean

  """Is Sync Enabled"""
  isSyncEnabled: Boolean

  """Last sync cursor"""
  syncCursor: String

  """Last sync date"""
  syncedAt: DateTime

  """Sync status"""
  syncStatus: MessageChannelSyncStatusEnum

  """Sync stage"""
  syncStage: MessageChannelSyncStageEnum

  """Sync stage started at"""
  syncStageStartedAt: DateTime

  """Throttle Failure Count"""
  throttleFailureCount: Float

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Connected Account"""
  connectedAccountId: ID

  """Connected Account"""
  connectedAccount: ID
}

"""Message Channels"""
input MessageChannelFilterInput {
  """Visibility"""
  visibility: MessageChannelVisibilityEnumFilter

  """Handle"""
  handle: StringFilter

  """Channel Type"""
  type: MessageChannelTypeEnumFilter

  """Is Contact Auto Creation Enabled"""
  isContactAutoCreationEnabled: BooleanFilter

  """Automatically create People records when receiving or sending emails"""
  contactAutoCreationPolicy: MessageChannelContactAutoCreationPolicyEnumFilter

  """Exclude non professional emails"""
  excludeNonProfessionalEmails: BooleanFilter

  """Exclude group emails"""
  excludeGroupEmails: BooleanFilter

  """Is Sync Enabled"""
  isSyncEnabled: BooleanFilter

  """Last sync cursor"""
  syncCursor: StringFilter

  """Last sync date"""
  syncedAt: DateFilter

  """Sync status"""
  syncStatus: MessageChannelSyncStatusEnumFilter

  """Sync stage"""
  syncStage: MessageChannelSyncStageEnumFilter

  """Sync stage started at"""
  syncStageStartedAt: DateFilter

  """Throttle Failure Count"""
  throttleFailureCount: FloatFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Connected Account"""
  connectedAccountId: UUIDFilter

  """Connected Account"""
  connectedAccount: UUIDFilter
  and: [MessageChannelFilterInput]
  or: [MessageChannelFilterInput]
  not: MessageChannelFilterInput
}

input MessageChannelVisibilityEnumFilter {
  eq: MessageChannelVisibilityEnum
  neq: MessageChannelVisibilityEnum
  in: [MessageChannelVisibilityEnum]
  containsAny: [MessageChannelVisibilityEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input MessageChannelTypeEnumFilter {
  eq: MessageChannelTypeEnum
  neq: MessageChannelTypeEnum
  in: [MessageChannelTypeEnum]
  containsAny: [MessageChannelTypeEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input MessageChannelContactAutoCreationPolicyEnumFilter {
  eq: MessageChannelContactAutoCreationPolicyEnum
  neq: MessageChannelContactAutoCreationPolicyEnum
  in: [MessageChannelContactAutoCreationPolicyEnum]
  containsAny: [MessageChannelContactAutoCreationPolicyEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input MessageChannelSyncStatusEnumFilter {
  eq: MessageChannelSyncStatusEnum
  neq: MessageChannelSyncStatusEnum
  in: [MessageChannelSyncStatusEnum]
  containsAny: [MessageChannelSyncStatusEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input MessageChannelSyncStageEnumFilter {
  eq: MessageChannelSyncStageEnum
  neq: MessageChannelSyncStageEnum
  in: [MessageChannelSyncStageEnum]
  containsAny: [MessageChannelSyncStageEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""Message Channels"""
input MessageChannelOrderByInput {
  """Visibility"""
  visibility: OrderByDirection

  """Handle"""
  handle: OrderByDirection

  """Channel Type"""
  type: OrderByDirection

  """Is Contact Auto Creation Enabled"""
  isContactAutoCreationEnabled: OrderByDirection

  """Automatically create People records when receiving or sending emails"""
  contactAutoCreationPolicy: OrderByDirection

  """Exclude non professional emails"""
  excludeNonProfessionalEmails: OrderByDirection

  """Exclude group emails"""
  excludeGroupEmails: OrderByDirection

  """Is Sync Enabled"""
  isSyncEnabled: OrderByDirection

  """Last sync cursor"""
  syncCursor: OrderByDirection

  """Last sync date"""
  syncedAt: OrderByDirection

  """Sync status"""
  syncStatus: OrderByDirection

  """Sync stage"""
  syncStage: OrderByDirection

  """Sync stage started at"""
  syncStageStartedAt: OrderByDirection

  """Throttle Failure Count"""
  throttleFailureCount: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Connected Account"""
  connectedAccountId: OrderByDirection

  """Connected Account"""
  connectedAccount: OrderByDirection
}

"""Message Participants"""
input MessageParticipantCreateInput {
  """Role"""
  role: MessageParticipantRoleEnum

  """Handle"""
  handle: String

  """Display Name"""
  displayName: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message"""
  messageId: ID

  """Message"""
  message: ID

  """Person"""
  personId: ID

  """Person"""
  person: ID

  """Workspace member"""
  workspaceMemberId: ID

  """Workspace member"""
  workspaceMember: ID
}

"""Message Participants"""
input MessageParticipantUpdateInput {
  """Role"""
  role: MessageParticipantRoleEnum

  """Handle"""
  handle: String

  """Display Name"""
  displayName: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message"""
  messageId: ID

  """Message"""
  message: ID

  """Person"""
  personId: ID

  """Person"""
  person: ID

  """Workspace member"""
  workspaceMemberId: ID

  """Workspace member"""
  workspaceMember: ID
}

"""Message Participants"""
input MessageParticipantFilterInput {
  """Role"""
  role: MessageParticipantRoleEnumFilter

  """Handle"""
  handle: StringFilter

  """Display Name"""
  displayName: StringFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Message"""
  messageId: UUIDFilter

  """Message"""
  message: UUIDFilter

  """Person"""
  personId: UUIDFilter

  """Person"""
  person: UUIDFilter

  """Workspace member"""
  workspaceMemberId: UUIDFilter

  """Workspace member"""
  workspaceMember: UUIDFilter
  and: [MessageParticipantFilterInput]
  or: [MessageParticipantFilterInput]
  not: MessageParticipantFilterInput
}

input MessageParticipantRoleEnumFilter {
  eq: MessageParticipantRoleEnum
  neq: MessageParticipantRoleEnum
  in: [MessageParticipantRoleEnum]
  containsAny: [MessageParticipantRoleEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""Message Participants"""
input MessageParticipantOrderByInput {
  """Role"""
  role: OrderByDirection

  """Handle"""
  handle: OrderByDirection

  """Display Name"""
  displayName: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Message"""
  messageId: OrderByDirection

  """Message"""
  message: OrderByDirection

  """Person"""
  personId: OrderByDirection

  """Person"""
  person: OrderByDirection

  """Workspace member"""
  workspaceMemberId: OrderByDirection

  """Workspace member"""
  workspaceMember: OrderByDirection
}

"""Folder for Message Channel"""
input MessageFolderCreateInput {
  """Folder name"""
  name: String

  """Sync Cursor"""
  syncCursor: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message Channel"""
  messageChannelId: ID

  """Message Channel"""
  messageChannel: ID
}

"""Folder for Message Channel"""
input MessageFolderUpdateInput {
  """Folder name"""
  name: String

  """Sync Cursor"""
  syncCursor: String

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message Channel"""
  messageChannelId: ID

  """Message Channel"""
  messageChannel: ID
}

"""Folder for Message Channel"""
input MessageFolderFilterInput {
  """Folder name"""
  name: StringFilter

  """Sync Cursor"""
  syncCursor: StringFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Message Channel"""
  messageChannelId: UUIDFilter

  """Message Channel"""
  messageChannel: UUIDFilter
  and: [MessageFolderFilterInput]
  or: [MessageFolderFilterInput]
  not: MessageFolderFilterInput
}

"""Folder for Message Channel"""
input MessageFolderOrderByInput {
  """Folder name"""
  name: OrderByDirection

  """Sync Cursor"""
  syncCursor: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Message Channel"""
  messageChannelId: OrderByDirection

  """Message Channel"""
  messageChannel: OrderByDirection
}

"""Message Synced with a Message Channel"""
input MessageChannelMessageAssociationCreateInput {
  """Message id from the messaging provider"""
  messageExternalId: String

  """Thread id from the messaging provider"""
  messageThreadExternalId: String

  """Message Direction"""
  direction: MessageChannelMessageAssociationDirectionEnum

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message Channel Id"""
  messageChannelId: ID

  """Message Channel Id"""
  messageChannel: ID

  """Message Id"""
  messageId: ID

  """Message Id"""
  message: ID
}

"""Message Synced with a Message Channel"""
input MessageChannelMessageAssociationUpdateInput {
  """Message id from the messaging provider"""
  messageExternalId: String

  """Thread id from the messaging provider"""
  messageThreadExternalId: String

  """Message Direction"""
  direction: MessageChannelMessageAssociationDirectionEnum

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Message Channel Id"""
  messageChannelId: ID

  """Message Channel Id"""
  messageChannel: ID

  """Message Id"""
  messageId: ID

  """Message Id"""
  message: ID
}

"""Message Synced with a Message Channel"""
input MessageChannelMessageAssociationFilterInput {
  """Message id from the messaging provider"""
  messageExternalId: StringFilter

  """Thread id from the messaging provider"""
  messageThreadExternalId: StringFilter

  """Message Direction"""
  direction: MessageChannelMessageAssociationDirectionEnumFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Message Channel Id"""
  messageChannelId: UUIDFilter

  """Message Channel Id"""
  messageChannel: UUIDFilter

  """Message Id"""
  messageId: UUIDFilter

  """Message Id"""
  message: UUIDFilter
  and: [MessageChannelMessageAssociationFilterInput]
  or: [MessageChannelMessageAssociationFilterInput]
  not: MessageChannelMessageAssociationFilterInput
}

input MessageChannelMessageAssociationDirectionEnumFilter {
  eq: MessageChannelMessageAssociationDirectionEnum
  neq: MessageChannelMessageAssociationDirectionEnum
  in: [MessageChannelMessageAssociationDirectionEnum]
  containsAny: [MessageChannelMessageAssociationDirectionEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""Message Synced with a Message Channel"""
input MessageChannelMessageAssociationOrderByInput {
  """Message id from the messaging provider"""
  messageExternalId: OrderByDirection

  """Thread id from the messaging provider"""
  messageThreadExternalId: OrderByDirection

  """Message Direction"""
  direction: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Message Channel Id"""
  messageChannelId: OrderByDirection

  """Message Channel Id"""
  messageChannel: OrderByDirection

  """Message Id"""
  messageId: OrderByDirection

  """Message Id"""
  message: OrderByDirection
}

"""A note target"""
input NoteTargetCreateInput {
  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """NoteTarget note"""
  noteId: ID

  """NoteTarget note"""
  note: ID

  """NoteTarget person"""
  personId: ID

  """NoteTarget person"""
  person: ID

  """NoteTarget company"""
  companyId: ID

  """NoteTarget company"""
  company: ID

  """NoteTarget opportunity"""
  opportunityId: ID

  """NoteTarget opportunity"""
  opportunity: ID

  """NoteTargets Rocket"""
  rocketId: ID

  """NoteTargets Rocket"""
  rocket: ID

  """NoteTargets Pet"""
  petId: ID

  """NoteTargets Pet"""
  pet: ID

  """NoteTargets Survey result"""
  surveyResultId: ID

  """NoteTargets Survey result"""
  surveyResult: ID
}

"""A note target"""
input NoteTargetUpdateInput {
  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """NoteTarget note"""
  noteId: ID

  """NoteTarget note"""
  note: ID

  """NoteTarget person"""
  personId: ID

  """NoteTarget person"""
  person: ID

  """NoteTarget company"""
  companyId: ID

  """NoteTarget company"""
  company: ID

  """NoteTarget opportunity"""
  opportunityId: ID

  """NoteTarget opportunity"""
  opportunity: ID

  """NoteTargets Rocket"""
  rocketId: ID

  """NoteTargets Rocket"""
  rocket: ID

  """NoteTargets Pet"""
  petId: ID

  """NoteTargets Pet"""
  pet: ID

  """NoteTargets Survey result"""
  surveyResultId: ID

  """NoteTargets Survey result"""
  surveyResult: ID
}

"""A note target"""
input NoteTargetFilterInput {
  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """NoteTarget note"""
  noteId: UUIDFilter

  """NoteTarget note"""
  note: UUIDFilter

  """NoteTarget person"""
  personId: UUIDFilter

  """NoteTarget person"""
  person: UUIDFilter

  """NoteTarget company"""
  companyId: UUIDFilter

  """NoteTarget company"""
  company: UUIDFilter

  """NoteTarget opportunity"""
  opportunityId: UUIDFilter

  """NoteTarget opportunity"""
  opportunity: UUIDFilter

  """NoteTargets Rocket"""
  rocketId: UUIDFilter

  """NoteTargets Rocket"""
  rocket: UUIDFilter

  """NoteTargets Pet"""
  petId: UUIDFilter

  """NoteTargets Pet"""
  pet: UUIDFilter

  """NoteTargets Survey result"""
  surveyResultId: UUIDFilter

  """NoteTargets Survey result"""
  surveyResult: UUIDFilter
  and: [NoteTargetFilterInput]
  or: [NoteTargetFilterInput]
  not: NoteTargetFilterInput
}

"""A note target"""
input NoteTargetOrderByInput {
  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """NoteTarget note"""
  noteId: OrderByDirection

  """NoteTarget note"""
  note: OrderByDirection

  """NoteTarget person"""
  personId: OrderByDirection

  """NoteTarget person"""
  person: OrderByDirection

  """NoteTarget company"""
  companyId: OrderByDirection

  """NoteTarget company"""
  company: OrderByDirection

  """NoteTarget opportunity"""
  opportunityId: OrderByDirection

  """NoteTarget opportunity"""
  opportunity: OrderByDirection

  """NoteTargets Rocket"""
  rocketId: OrderByDirection

  """NoteTargets Rocket"""
  rocket: OrderByDirection

  """NoteTargets Pet"""
  petId: OrderByDirection

  """NoteTargets Pet"""
  pet: OrderByDirection

  """NoteTargets Survey result"""
  surveyResultId: OrderByDirection

  """NoteTargets Survey result"""
  surveyResult: OrderByDirection
}

"""An opportunity"""
input OpportunityCreateInput {
  """The opportunity name"""
  name: String

  """Opportunity amount"""
  amount: CurrencyCreateInput

  """Opportunity close date"""
  closeDate: DateTime

  """Opportunity stage"""
  stage: OpportunityStageEnum

  """Opportunity record position"""
  position: Position

  """The creator of the record"""
  createdBy: ActorCreateInput

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Opportunity point of contact"""
  pointOfContactId: ID

  """Opportunity point of contact"""
  pointOfContact: ID

  """Opportunity company"""
  companyId: ID

  """Opportunity company"""
  company: ID
}

"""An opportunity"""
input OpportunityUpdateInput {
  """The opportunity name"""
  name: String

  """Opportunity amount"""
  amount: CurrencyUpdateInput

  """Opportunity close date"""
  closeDate: DateTime

  """Opportunity stage"""
  stage: OpportunityStageEnum

  """Opportunity record position"""
  position: Position

  """The creator of the record"""
  createdBy: ActorUpdateInput

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Opportunity point of contact"""
  pointOfContactId: ID

  """Opportunity point of contact"""
  pointOfContact: ID

  """Opportunity company"""
  companyId: ID

  """Opportunity company"""
  company: ID
}

"""An opportunity"""
input OpportunityFilterInput {
  """The opportunity name"""
  name: StringFilter

  """Opportunity amount"""
  amount: CurrencyFilterInput

  """Opportunity close date"""
  closeDate: DateFilter

  """Opportunity stage"""
  stage: OpportunityStageEnumFilter

  """Opportunity record position"""
  position: FloatFilter

  """The creator of the record"""
  createdBy: ActorFilterInput

  """Field used for full-text search"""
  searchVector: TSVectorFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Opportunity point of contact"""
  pointOfContactId: UUIDFilter

  """Opportunity point of contact"""
  pointOfContact: UUIDFilter

  """Opportunity company"""
  companyId: UUIDFilter

  """Opportunity company"""
  company: UUIDFilter
  and: [OpportunityFilterInput]
  or: [OpportunityFilterInput]
  not: OpportunityFilterInput
}

input OpportunityStageEnumFilter {
  eq: OpportunityStageEnum
  neq: OpportunityStageEnum
  in: [OpportunityStageEnum]
  containsAny: [OpportunityStageEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""An opportunity"""
input OpportunityOrderByInput {
  """The opportunity name"""
  name: OrderByDirection

  """Opportunity amount"""
  amount: CurrencyOrderByInput

  """Opportunity close date"""
  closeDate: OrderByDirection

  """Opportunity stage"""
  stage: OrderByDirection

  """Opportunity record position"""
  position: OrderByDirection

  """The creator of the record"""
  createdBy: ActorOrderByInput

  """Field used for full-text search"""
  searchVector: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Opportunity point of contact"""
  pointOfContactId: OrderByDirection

  """Opportunity point of contact"""
  pointOfContact: OrderByDirection

  """Opportunity company"""
  companyId: OrderByDirection

  """Opportunity company"""
  company: OrderByDirection
}

"""A person"""
input PersonCreateInput {
  """Contact’s name"""
  name: FullNameCreateInput

  """Contact’s Emails"""
  emails: EmailsCreateInput

  """Contact’s Linkedin account"""
  linkedinLink: LinksCreateInput

  """Contact’s X/Twitter account"""
  xLink: LinksCreateInput

  """Contact’s job title"""
  jobTitle: String

  """Contact’s phone numbers"""
  phones: PhonesCreateInput

  """Contact’s city"""
  city: String

  """Contact’s avatar"""
  avatarUrl: String

  """Person record Position"""
  position: Position

  """The creator of the record"""
  createdBy: ActorCreateInput

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Contact’s company"""
  companyId: ID

  """Contact’s company"""
  company: ID
  intro: String
  whatsapp: PhonesCreateInput
  workPreference: [PersonWorkPreferenceEnum]
  performanceRating: PersonPerformanceRatingEnum
}

"""A person"""
input PersonUpdateInput {
  """Contact’s name"""
  name: FullNameUpdateInput

  """Contact’s Emails"""
  emails: EmailsUpdateInput

  """Contact’s Linkedin account"""
  linkedinLink: LinksUpdateInput

  """Contact’s X/Twitter account"""
  xLink: LinksUpdateInput

  """Contact’s job title"""
  jobTitle: String

  """Contact’s phone numbers"""
  phones: PhonesUpdateInput

  """Contact’s city"""
  city: String

  """Contact’s avatar"""
  avatarUrl: String

  """Person record Position"""
  position: Position

  """The creator of the record"""
  createdBy: ActorUpdateInput

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Contact’s company"""
  companyId: ID

  """Contact’s company"""
  company: ID
  intro: String
  whatsapp: PhonesUpdateInput
  workPreference: [PersonWorkPreferenceEnum]
  performanceRating: PersonPerformanceRatingEnum
}

"""A person"""
input PersonFilterInput {
  """Contact’s name"""
  name: FullNameFilterInput

  """Contact’s Emails"""
  emails: EmailsFilterInput

  """Contact’s Linkedin account"""
  linkedinLink: LinksFilterInput

  """Contact’s X/Twitter account"""
  xLink: LinksFilterInput

  """Contact’s job title"""
  jobTitle: StringFilter

  """Contact’s phone numbers"""
  phones: PhonesFilterInput

  """Contact’s city"""
  city: StringFilter

  """Contact’s avatar"""
  avatarUrl: StringFilter

  """Person record Position"""
  position: FloatFilter

  """The creator of the record"""
  createdBy: ActorFilterInput

  """Field used for full-text search"""
  searchVector: TSVectorFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Contact’s company"""
  companyId: UUIDFilter

  """Contact’s company"""
  company: UUIDFilter
  intro: StringFilter
  whatsapp: PhonesFilterInput
  workPreference: PersonWorkPreferenceEnumFilter
  performanceRating: PersonPerformanceRatingEnumFilter
  and: [PersonFilterInput]
  or: [PersonFilterInput]
  not: PersonFilterInput
}

input PersonWorkPreferenceEnumFilter {
  eq: PersonWorkPreferenceEnum
  neq: PersonWorkPreferenceEnum
  in: [PersonWorkPreferenceEnum]
  containsAny: [PersonWorkPreferenceEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

input PersonPerformanceRatingEnumFilter {
  eq: PersonPerformanceRatingEnum
  neq: PersonPerformanceRatingEnum
  in: [PersonPerformanceRatingEnum]
  containsAny: [PersonPerformanceRatingEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""A person"""
input PersonOrderByInput {
  """Contact’s name"""
  name: FullNameOrderByInput

  """Contact’s Emails"""
  emails: EmailsOrderByInput

  """Contact’s Linkedin account"""
  linkedinLink: LinksOrderByInput

  """Contact’s X/Twitter account"""
  xLink: LinksOrderByInput

  """Contact’s job title"""
  jobTitle: OrderByDirection

  """Contact’s phone numbers"""
  phones: PhonesOrderByInput

  """Contact’s city"""
  city: OrderByDirection

  """Contact’s avatar"""
  avatarUrl: OrderByDirection

  """Person record Position"""
  position: OrderByDirection

  """The creator of the record"""
  createdBy: ActorOrderByInput

  """Field used for full-text search"""
  searchVector: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Contact’s company"""
  companyId: OrderByDirection

  """Contact’s company"""
  company: OrderByDirection
  intro: OrderByDirection
  whatsapp: PhonesOrderByInput
  workPreference: [OrderByDirection]
  performanceRating: OrderByDirection
}

"""A task"""
input TaskCreateInput {
  """Task record position"""
  position: Position

  """Task title"""
  title: String

  """Task body"""
  body: String

  """Task body"""
  bodyV2: RichTextV2CreateInput

  """Task due date"""
  dueAt: DateTime

  """Task status"""
  status: TaskStatusEnum

  """The creator of the record"""
  createdBy: ActorCreateInput

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Task assignee"""
  assigneeId: ID

  """Task assignee"""
  assignee: ID
}

"""A task"""
input TaskUpdateInput {
  """Task record position"""
  position: Position

  """Task title"""
  title: String

  """Task body"""
  body: String

  """Task body"""
  bodyV2: RichTextV2UpdateInput

  """Task due date"""
  dueAt: DateTime

  """Task status"""
  status: TaskStatusEnum

  """The creator of the record"""
  createdBy: ActorUpdateInput

  """Field used for full-text search"""
  searchVector: TSVector

  """Id"""
  id: ID

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Date when the record was deleted"""
  deletedAt: DateTime

  """Task assignee"""
  assigneeId: ID

  """Task assignee"""
  assignee: ID
}

"""A task"""
input TaskFilterInput {
  """Task record position"""
  position: FloatFilter

  """Task title"""
  title: StringFilter

  """Task body"""
  body: StringFilter

  """Task body"""
  bodyV2: RichTextV2Filter

  """Task due date"""
  dueAt: DateFilter

  """Task status"""
  status: TaskStatusEnumFilter

  """The creator of the record"""
  createdBy: ActorFilterInput

  """Field used for full-text search"""
  searchVector: TSVectorFilter

  """Id"""
  id: UUIDFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Date when the record was deleted"""
  deletedAt: DateFilter

  """Task assignee"""
  assigneeId: UUIDFilter

  """Task assignee"""
  assignee: UUIDFilter
  and: [TaskFilterInput]
  or: [TaskFilterInput]
  not: TaskFilterInput
}

input TaskStatusEnumFilter {
  eq: TaskStatusEnum
  neq: TaskStatusEnum
  in: [TaskStatusEnum]
  containsAny: [TaskStatusEnum]
  is: FilterIs
  isEmptyArray: Boolean
}

"""A task"""
input TaskOrderByInput {
  """Task record position"""
  position: OrderByDirection

  """Task title"""
  title: OrderByDirection

  """Task body"""
  body: OrderByDirection

  """Task body"""
  bodyV2: RichTextV2OrderByInput

  """Task due date"""
  dueAt: OrderByDirection

  """Task status"""
  status: OrderByDirection

  """The creator of the record"""
  createdBy: ActorOrderByInput

  """Field used for full-text search"""
  searchVector: OrderByDirection

  """Id"""
  id: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Date when the record was deleted"""
  deletedAt: OrderByDirection

  """Task assignee"""
  assigneeId: OrderByDirection

  """Task assignee"""
  assignee: OrderByDirection
}

"""A rocket"""
input RocketCreateInput {
  """Id"""
  id: ID

  """Name"""
  name: String

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Deletion date"""
  deletedAt: DateTime

  """The creator of the record"""
  createdBy: ActorCreateInput

  """Position"""
  position: Position

  """Field used for full-text search"""
  searchVector: TSVector
}

"""A rocket"""
input RocketUpdateInput {
  """Id"""
  id: ID

  """Name"""
  name: String

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Deletion date"""
  deletedAt: DateTime

  """The creator of the record"""
  createdBy: ActorUpdateInput

  """Position"""
  position: Position

  """Field used for full-text search"""
  searchVector: TSVector
}

"""A rocket"""
input RocketFilterInput {
  """Id"""
  id: UUIDFilter

  """Name"""
  name: StringFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Deletion date"""
  deletedAt: DateFilter

  """The creator of the record"""
  createdBy: ActorFilterInput

  """Position"""
  position: FloatFilter

  """Field used for full-text search"""
  searchVector: TSVectorFilter
  and: [RocketFilterInput]
  or: [RocketFilterInput]
  not: RocketFilterInput
}

"""A rocket"""
input RocketOrderByInput {
  """Id"""
  id: OrderByDirection

  """Name"""
  name: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Deletion date"""
  deletedAt: OrderByDirection

  """The creator of the record"""
  createdBy: ActorOrderByInput

  """Position"""
  position: OrderByDirection

  """Field used for full-text search"""
  searchVector: OrderByDirection
}

input SurveyResultCreateInput {
  """Id"""
  id: ID

  """Name"""
  name: String

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Deletion date"""
  deletedAt: DateTime

  """The creator of the record"""
  createdBy: ActorCreateInput

  """Position"""
  position: Position

  """Field used for full-text search"""
  searchVector: TSVector
  score: Float
  percentageOfCompletion: Float
  participants: Int
  averageEstimatedNumberOfAtomsInTheUniverse: BigInt
  comments: String
  shortNotes: String
}

input SurveyResultUpdateInput {
  """Id"""
  id: ID

  """Name"""
  name: String

  """Creation date"""
  createdAt: DateTime

  """Last time the record was changed"""
  updatedAt: DateTime

  """Deletion date"""
  deletedAt: DateTime

  """The creator of the record"""
  createdBy: ActorUpdateInput

  """Position"""
  position: Position

  """Field used for full-text search"""
  searchVector: TSVector
  score: Float
  percentageOfCompletion: Float
  participants: Int
  averageEstimatedNumberOfAtomsInTheUniverse: BigInt
  comments: String
  shortNotes: String
}

input SurveyResultFilterInput {
  """Id"""
  id: UUIDFilter

  """Name"""
  name: StringFilter

  """Creation date"""
  createdAt: DateFilter

  """Last time the record was changed"""
  updatedAt: DateFilter

  """Deletion date"""
  deletedAt: DateFilter

  """The creator of the record"""
  createdBy: ActorFilterInput

  """Position"""
  position: FloatFilter

  """Field used for full-text search"""
  searchVector: TSVectorFilter
  score: FloatFilter
  percentageOfCompletion: FloatFilter
  participants: IntFilter
  averageEstimatedNumberOfAtomsInTheUniverse: BigIntFilter
  comments: StringFilter
  shortNotes: StringFilter
  and: [SurveyResultFilterInput]
  or: [SurveyResultFilterInput]
  not: SurveyResultFilterInput
}

input IntFilter {
  eq: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  neq: Int
  is: FilterIs
}

input BigIntFilter {
  eq: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  neq: BigInt
  is: FilterIs
}

input SurveyResultOrderByInput {
  """Id"""
  id: OrderByDirection

  """Name"""
  name: OrderByDirection

  """Creation date"""
  createdAt: OrderByDirection

  """Last time the record was changed"""
  updatedAt: OrderByDirection

  """Deletion date"""
  deletedAt: OrderByDirection

  """The creator of the record"""
  createdBy: ActorOrderByInput

  """Position"""
  position: OrderByDirection

  """Field used for full-text search"""
  searchVector: OrderByDirection
  score: OrderByDirection
  percentageOfCompletion: OrderByDirection
  participants: OrderByDirection
  averageEstimatedNumberOfAtomsInTheUniverse: OrderByDirection
  comments: OrderByDirection
  shortNotes: OrderByDirection
}

type Query {
  apiKeys(first: Int, last: Int, before: String, after: String, limit: Int, filter: ApiKeyFilterInput, orderBy: [ApiKeyOrderByInput]): ApiKeyConnection
  apiKey(filter: ApiKeyFilterInput): ApiKey
  attachments(first: Int, last: Int, before: String, after: String, limit: Int, filter: AttachmentFilterInput, orderBy: [AttachmentOrderByInput]): AttachmentConnection
  attachment(filter: AttachmentFilterInput): Attachment
  pets(first: Int, last: Int, before: String, after: String, limit: Int, filter: PetFilterInput, orderBy: [PetOrderByInput]): PetConnection
  pet(filter: PetFilterInput): Pet
  blocklists(first: Int, last: Int, before: String, after: String, limit: Int, filter: BlocklistFilterInput, orderBy: [BlocklistOrderByInput]): BlocklistConnection
  blocklist(filter: BlocklistFilterInput): Blocklist
  calendarEvents(first: Int, last: Int, before: String, after: String, limit: Int, filter: CalendarEventFilterInput, orderBy: [CalendarEventOrderByInput]): CalendarEventConnection
  calendarEvent(filter: CalendarEventFilterInput): CalendarEvent
  calendarChannels(first: Int, last: Int, before: String, after: String, limit: Int, filter: CalendarChannelFilterInput, orderBy: [CalendarChannelOrderByInput]): CalendarChannelConnection
  calendarChannel(filter: CalendarChannelFilterInput): CalendarChannel
  calendarChannelEventAssociations(first: Int, last: Int, before: String, after: String, limit: Int, filter: CalendarChannelEventAssociationFilterInput, orderBy: [CalendarChannelEventAssociationOrderByInput]): CalendarChannelEventAssociationConnection
  calendarChannelEventAssociation(filter: CalendarChannelEventAssociationFilterInput): CalendarChannelEventAssociation
  calendarEventParticipants(first: Int, last: Int, before: String, after: String, limit: Int, filter: CalendarEventParticipantFilterInput, orderBy: [CalendarEventParticipantOrderByInput]): CalendarEventParticipantConnection
  calendarEventParticipant(filter: CalendarEventParticipantFilterInput): CalendarEventParticipant
  companies(first: Int, last: Int, before: String, after: String, limit: Int, filter: CompanyFilterInput, orderBy: [CompanyOrderByInput]): CompanyConnection
  company(filter: CompanyFilterInput): Company
  companyDuplicates(ids: [UUID], data: [CompanyCreateInput]): [CompanyConnection!]
  connectedAccounts(first: Int, last: Int, before: String, after: String, limit: Int, filter: ConnectedAccountFilterInput, orderBy: [ConnectedAccountOrderByInput]): ConnectedAccountConnection
  connectedAccount(filter: ConnectedAccountFilterInput): ConnectedAccount
  favorites(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFilterInput, orderBy: [FavoriteOrderByInput]): FavoriteConnection
  favorite(filter: FavoriteFilterInput): Favorite
  favoriteFolders(first: Int, last: Int, before: String, after: String, limit: Int, filter: FavoriteFolderFilterInput, orderBy: [FavoriteFolderOrderByInput]): FavoriteFolderConnection
  favoriteFolder(filter: FavoriteFolderFilterInput): FavoriteFolder
  timelineActivities(first: Int, last: Int, before: String, after: String, limit: Int, filter: TimelineActivityFilterInput, orderBy: [TimelineActivityOrderByInput]): TimelineActivityConnection
  timelineActivity(filter: TimelineActivityFilterInput): TimelineActivity
  viewFields(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewFieldFilterInput, orderBy: [ViewFieldOrderByInput]): ViewFieldConnection
  viewField(filter: ViewFieldFilterInput): ViewField
  viewFilterGroups(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewFilterGroupFilterInput, orderBy: [ViewFilterGroupOrderByInput]): ViewFilterGroupConnection
  viewFilterGroup(filter: ViewFilterGroupFilterInput): ViewFilterGroup
  viewGroups(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewGroupFilterInput, orderBy: [ViewGroupOrderByInput]): ViewGroupConnection
  viewGroup(filter: ViewGroupFilterInput): ViewGroup
  viewFilters(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewFilterFilterInput, orderBy: [ViewFilterOrderByInput]): ViewFilterConnection
  viewFilter(filter: ViewFilterFilterInput): ViewFilter
  viewSorts(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewSortFilterInput, orderBy: [ViewSortOrderByInput]): ViewSortConnection
  viewSort(filter: ViewSortFilterInput): ViewSort
  views(first: Int, last: Int, before: String, after: String, limit: Int, filter: ViewFilterInput, orderBy: [ViewOrderByInput]): ViewConnection
  view(filter: ViewFilterInput): View
  webhooks(first: Int, last: Int, before: String, after: String, limit: Int, filter: WebhookFilterInput, orderBy: [WebhookOrderByInput]): WebhookConnection
  webhook(filter: WebhookFilterInput): Webhook
  workflows(first: Int, last: Int, before: String, after: String, limit: Int, filter: WorkflowFilterInput, orderBy: [WorkflowOrderByInput]): WorkflowConnection
  workflow(filter: WorkflowFilterInput): Workflow
  workflowVersions(first: Int, last: Int, before: String, after: String, limit: Int, filter: WorkflowVersionFilterInput, orderBy: [WorkflowVersionOrderByInput]): WorkflowVersionConnection
  workflowVersion(filter: WorkflowVersionFilterInput): WorkflowVersion
  workflowRuns(first: Int, last: Int, before: String, after: String, limit: Int, filter: WorkflowRunFilterInput, orderBy: [WorkflowRunOrderByInput]): WorkflowRunConnection
  workflowRun(filter: WorkflowRunFilterInput): WorkflowRun
  workflowAutomatedTriggers(first: Int, last: Int, before: String, after: String, limit: Int, filter: WorkflowAutomatedTriggerFilterInput, orderBy: [WorkflowAutomatedTriggerOrderByInput]): WorkflowAutomatedTriggerConnection
  workflowAutomatedTrigger(filter: WorkflowAutomatedTriggerFilterInput): WorkflowAutomatedTrigger
  workspaceMembers(first: Int, last: Int, before: String, after: String, limit: Int, filter: WorkspaceMemberFilterInput, orderBy: [WorkspaceMemberOrderByInput]): WorkspaceMemberConnection
  workspaceMember(filter: WorkspaceMemberFilterInput): WorkspaceMember
  notes(first: Int, last: Int, before: String, after: String, limit: Int, filter: NoteFilterInput, orderBy: [NoteOrderByInput]): NoteConnection
  note(filter: NoteFilterInput): Note
  taskTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: TaskTargetFilterInput, orderBy: [TaskTargetOrderByInput]): TaskTargetConnection
  taskTarget(filter: TaskTargetFilterInput): TaskTarget
  messageThreads(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageThreadFilterInput, orderBy: [MessageThreadOrderByInput]): MessageThreadConnection
  messageThread(filter: MessageThreadFilterInput): MessageThread
  messages(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageFilterInput, orderBy: [MessageOrderByInput]): MessageConnection
  message(filter: MessageFilterInput): Message
  messageChannels(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageChannelFilterInput, orderBy: [MessageChannelOrderByInput]): MessageChannelConnection
  messageChannel(filter: MessageChannelFilterInput): MessageChannel
  messageParticipants(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageParticipantFilterInput, orderBy: [MessageParticipantOrderByInput]): MessageParticipantConnection
  messageParticipant(filter: MessageParticipantFilterInput): MessageParticipant
  messageFolders(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageFolderFilterInput, orderBy: [MessageFolderOrderByInput]): MessageFolderConnection
  messageFolder(filter: MessageFolderFilterInput): MessageFolder
  messageChannelMessageAssociations(first: Int, last: Int, before: String, after: String, limit: Int, filter: MessageChannelMessageAssociationFilterInput, orderBy: [MessageChannelMessageAssociationOrderByInput]): MessageChannelMessageAssociationConnection
  messageChannelMessageAssociation(filter: MessageChannelMessageAssociationFilterInput): MessageChannelMessageAssociation
  noteTargets(first: Int, last: Int, before: String, after: String, limit: Int, filter: NoteTargetFilterInput, orderBy: [NoteTargetOrderByInput]): NoteTargetConnection
  noteTarget(filter: NoteTargetFilterInput): NoteTarget
  opportunities(first: Int, last: Int, before: String, after: String, limit: Int, filter: OpportunityFilterInput, orderBy: [OpportunityOrderByInput]): OpportunityConnection
  opportunity(filter: OpportunityFilterInput): Opportunity
  people(first: Int, last: Int, before: String, after: String, limit: Int, filter: PersonFilterInput, orderBy: [PersonOrderByInput]): PersonConnection
  person(filter: PersonFilterInput): Person
  personDuplicates(ids: [UUID], data: [PersonCreateInput]): [PersonConnection!]
  tasks(first: Int, last: Int, before: String, after: String, limit: Int, filter: TaskFilterInput, orderBy: [TaskOrderByInput]): TaskConnection
  task(filter: TaskFilterInput): Task
  rockets(first: Int, last: Int, before: String, after: String, limit: Int, filter: RocketFilterInput, orderBy: [RocketOrderByInput]): RocketConnection
  rocket(filter: RocketFilterInput): Rocket
  surveyResults(first: Int, last: Int, before: String, after: String, limit: Int, filter: SurveyResultFilterInput, orderBy: [SurveyResultOrderByInput]): SurveyResultConnection
  surveyResult(filter: SurveyResultFilterInput): SurveyResult
}

type Mutation {
  createApiKeys(data: [ApiKeyCreateInput!], upsert: Boolean): [ApiKey!]
  createApiKey(data: ApiKeyCreateInput, upsert: Boolean): ApiKey
  updateApiKey(id: UUID, data: ApiKeyUpdateInput): ApiKey
  deleteApiKey(id: UUID): ApiKey
  updateApiKeys(data: ApiKeyUpdateInput, filter: ApiKeyFilterInput): [ApiKey!]
  deleteApiKeys(filter: ApiKeyFilterInput): [ApiKey!]
  destroyApiKey(id: UUID): ApiKey
  destroyApiKeys(filter: ApiKeyFilterInput): [ApiKey!]
  restoreApiKey(id: UUID): ApiKey
  restoreApiKeys(filter: ApiKeyFilterInput): [ApiKey!]
  createAttachments(data: [AttachmentCreateInput!], upsert: Boolean): [Attachment!]
  createAttachment(data: AttachmentCreateInput, upsert: Boolean): Attachment
  updateAttachment(id: UUID, data: AttachmentUpdateInput): Attachment
  deleteAttachment(id: UUID): Attachment
  updateAttachments(data: AttachmentUpdateInput, filter: AttachmentFilterInput): [Attachment!]
  deleteAttachments(filter: AttachmentFilterInput): [Attachment!]
  destroyAttachment(id: UUID): Attachment
  destroyAttachments(filter: AttachmentFilterInput): [Attachment!]
  restoreAttachment(id: UUID): Attachment
  restoreAttachments(filter: AttachmentFilterInput): [Attachment!]
  createPets(data: [PetCreateInput!], upsert: Boolean): [Pet!]
  createPet(data: PetCreateInput, upsert: Boolean): Pet
  updatePet(id: UUID, data: PetUpdateInput): Pet
  deletePet(id: UUID): Pet
  updatePets(data: PetUpdateInput, filter: PetFilterInput): [Pet!]
  deletePets(filter: PetFilterInput): [Pet!]
  destroyPet(id: UUID): Pet
  destroyPets(filter: PetFilterInput): [Pet!]
  restorePet(id: UUID): Pet
  restorePets(filter: PetFilterInput): [Pet!]
  createBlocklists(data: [BlocklistCreateInput!], upsert: Boolean): [Blocklist!]
  createBlocklist(data: BlocklistCreateInput, upsert: Boolean): Blocklist
  updateBlocklist(id: UUID, data: BlocklistUpdateInput): Blocklist
  deleteBlocklist(id: UUID): Blocklist
  updateBlocklists(data: BlocklistUpdateInput, filter: BlocklistFilterInput): [Blocklist!]
  deleteBlocklists(filter: BlocklistFilterInput): [Blocklist!]
  destroyBlocklist(id: UUID): Blocklist
  destroyBlocklists(filter: BlocklistFilterInput): [Blocklist!]
  restoreBlocklist(id: UUID): Blocklist
  restoreBlocklists(filter: BlocklistFilterInput): [Blocklist!]
  createCalendarEvents(data: [CalendarEventCreateInput!], upsert: Boolean): [CalendarEvent!]
  createCalendarEvent(data: CalendarEventCreateInput, upsert: Boolean): CalendarEvent
  updateCalendarEvent(id: UUID, data: CalendarEventUpdateInput): CalendarEvent
  deleteCalendarEvent(id: UUID): CalendarEvent
  updateCalendarEvents(data: CalendarEventUpdateInput, filter: CalendarEventFilterInput): [CalendarEvent!]
  deleteCalendarEvents(filter: CalendarEventFilterInput): [CalendarEvent!]
  destroyCalendarEvent(id: UUID): CalendarEvent
  destroyCalendarEvents(filter: CalendarEventFilterInput): [CalendarEvent!]
  restoreCalendarEvent(id: UUID): CalendarEvent
  restoreCalendarEvents(filter: CalendarEventFilterInput): [CalendarEvent!]
  createCalendarChannels(data: [CalendarChannelCreateInput!], upsert: Boolean): [CalendarChannel!]
  createCalendarChannel(data: CalendarChannelCreateInput, upsert: Boolean): CalendarChannel
  updateCalendarChannel(id: UUID, data: CalendarChannelUpdateInput): CalendarChannel
  deleteCalendarChannel(id: UUID): CalendarChannel
  updateCalendarChannels(data: CalendarChannelUpdateInput, filter: CalendarChannelFilterInput): [CalendarChannel!]
  deleteCalendarChannels(filter: CalendarChannelFilterInput): [CalendarChannel!]
  destroyCalendarChannel(id: UUID): CalendarChannel
  destroyCalendarChannels(filter: CalendarChannelFilterInput): [CalendarChannel!]
  restoreCalendarChannel(id: UUID): CalendarChannel
  restoreCalendarChannels(filter: CalendarChannelFilterInput): [CalendarChannel!]
  createCalendarChannelEventAssociations(data: [CalendarChannelEventAssociationCreateInput!], upsert: Boolean): [CalendarChannelEventAssociation!]
  createCalendarChannelEventAssociation(data: CalendarChannelEventAssociationCreateInput, upsert: Boolean): CalendarChannelEventAssociation
  updateCalendarChannelEventAssociation(id: UUID, data: CalendarChannelEventAssociationUpdateInput): CalendarChannelEventAssociation
  deleteCalendarChannelEventAssociation(id: UUID): CalendarChannelEventAssociation
  updateCalendarChannelEventAssociations(data: CalendarChannelEventAssociationUpdateInput, filter: CalendarChannelEventAssociationFilterInput): [CalendarChannelEventAssociation!]
  deleteCalendarChannelEventAssociations(filter: CalendarChannelEventAssociationFilterInput): [CalendarChannelEventAssociation!]
  destroyCalendarChannelEventAssociation(id: UUID): CalendarChannelEventAssociation
  destroyCalendarChannelEventAssociations(filter: CalendarChannelEventAssociationFilterInput): [CalendarChannelEventAssociation!]
  restoreCalendarChannelEventAssociation(id: UUID): CalendarChannelEventAssociation
  restoreCalendarChannelEventAssociations(filter: CalendarChannelEventAssociationFilterInput): [CalendarChannelEventAssociation!]
  createCalendarEventParticipants(data: [CalendarEventParticipantCreateInput!], upsert: Boolean): [CalendarEventParticipant!]
  createCalendarEventParticipant(data: CalendarEventParticipantCreateInput, upsert: Boolean): CalendarEventParticipant
  updateCalendarEventParticipant(id: UUID, data: CalendarEventParticipantUpdateInput): CalendarEventParticipant
  deleteCalendarEventParticipant(id: UUID): CalendarEventParticipant
  updateCalendarEventParticipants(data: CalendarEventParticipantUpdateInput, filter: CalendarEventParticipantFilterInput): [CalendarEventParticipant!]
  deleteCalendarEventParticipants(filter: CalendarEventParticipantFilterInput): [CalendarEventParticipant!]
  destroyCalendarEventParticipant(id: UUID): CalendarEventParticipant
  destroyCalendarEventParticipants(filter: CalendarEventParticipantFilterInput): [CalendarEventParticipant!]
  restoreCalendarEventParticipant(id: UUID): CalendarEventParticipant
  restoreCalendarEventParticipants(filter: CalendarEventParticipantFilterInput): [CalendarEventParticipant!]
  createCompanies(data: [CompanyCreateInput!], upsert: Boolean): [Company!]
  createCompany(data: CompanyCreateInput, upsert: Boolean): Company
  updateCompany(id: UUID, data: CompanyUpdateInput): Company
  deleteCompany(id: UUID): Company
  updateCompanies(data: CompanyUpdateInput, filter: CompanyFilterInput): [Company!]
  deleteCompanies(filter: CompanyFilterInput): [Company!]
  destroyCompany(id: UUID): Company
  destroyCompanies(filter: CompanyFilterInput): [Company!]
  restoreCompany(id: UUID): Company
  restoreCompanies(filter: CompanyFilterInput): [Company!]
  createConnectedAccounts(data: [ConnectedAccountCreateInput!], upsert: Boolean): [ConnectedAccount!]
  createConnectedAccount(data: ConnectedAccountCreateInput, upsert: Boolean): ConnectedAccount
  updateConnectedAccount(id: UUID, data: ConnectedAccountUpdateInput): ConnectedAccount
  deleteConnectedAccount(id: UUID): ConnectedAccount
  updateConnectedAccounts(data: ConnectedAccountUpdateInput, filter: ConnectedAccountFilterInput): [ConnectedAccount!]
  deleteConnectedAccounts(filter: ConnectedAccountFilterInput): [ConnectedAccount!]
  destroyConnectedAccount(id: UUID): ConnectedAccount
  destroyConnectedAccounts(filter: ConnectedAccountFilterInput): [ConnectedAccount!]
  restoreConnectedAccount(id: UUID): ConnectedAccount
  restoreConnectedAccounts(filter: ConnectedAccountFilterInput): [ConnectedAccount!]
  createFavorites(data: [FavoriteCreateInput!], upsert: Boolean): [Favorite!]
  createFavorite(data: FavoriteCreateInput, upsert: Boolean): Favorite
  updateFavorite(id: UUID, data: FavoriteUpdateInput): Favorite
  deleteFavorite(id: UUID): Favorite
  updateFavorites(data: FavoriteUpdateInput, filter: FavoriteFilterInput): [Favorite!]
  deleteFavorites(filter: FavoriteFilterInput): [Favorite!]
  destroyFavorite(id: UUID): Favorite
  destroyFavorites(filter: FavoriteFilterInput): [Favorite!]
  restoreFavorite(id: UUID): Favorite
  restoreFavorites(filter: FavoriteFilterInput): [Favorite!]
  createFavoriteFolders(data: [FavoriteFolderCreateInput!], upsert: Boolean): [FavoriteFolder!]
  createFavoriteFolder(data: FavoriteFolderCreateInput, upsert: Boolean): FavoriteFolder
  updateFavoriteFolder(id: UUID, data: FavoriteFolderUpdateInput): FavoriteFolder
  deleteFavoriteFolder(id: UUID): FavoriteFolder
  updateFavoriteFolders(data: FavoriteFolderUpdateInput, filter: FavoriteFolderFilterInput): [FavoriteFolder!]
  deleteFavoriteFolders(filter: FavoriteFolderFilterInput): [FavoriteFolder!]
  destroyFavoriteFolder(id: UUID): FavoriteFolder
  destroyFavoriteFolders(filter: FavoriteFolderFilterInput): [FavoriteFolder!]
  restoreFavoriteFolder(id: UUID): FavoriteFolder
  restoreFavoriteFolders(filter: FavoriteFolderFilterInput): [FavoriteFolder!]
  createTimelineActivities(data: [TimelineActivityCreateInput!], upsert: Boolean): [TimelineActivity!]
  createTimelineActivity(data: TimelineActivityCreateInput, upsert: Boolean): TimelineActivity
  updateTimelineActivity(id: UUID, data: TimelineActivityUpdateInput): TimelineActivity
  deleteTimelineActivity(id: UUID): TimelineActivity
  updateTimelineActivities(data: TimelineActivityUpdateInput, filter: TimelineActivityFilterInput): [TimelineActivity!]
  deleteTimelineActivities(filter: TimelineActivityFilterInput): [TimelineActivity!]
  destroyTimelineActivity(id: UUID): TimelineActivity
  destroyTimelineActivities(filter: TimelineActivityFilterInput): [TimelineActivity!]
  restoreTimelineActivity(id: UUID): TimelineActivity
  restoreTimelineActivities(filter: TimelineActivityFilterInput): [TimelineActivity!]
  createViewFields(data: [ViewFieldCreateInput!], upsert: Boolean): [ViewField!]
  createViewField(data: ViewFieldCreateInput, upsert: Boolean): ViewField
  updateViewField(id: UUID, data: ViewFieldUpdateInput): ViewField
  deleteViewField(id: UUID): ViewField
  updateViewFields(data: ViewFieldUpdateInput, filter: ViewFieldFilterInput): [ViewField!]
  deleteViewFields(filter: ViewFieldFilterInput): [ViewField!]
  destroyViewField(id: UUID): ViewField
  destroyViewFields(filter: ViewFieldFilterInput): [ViewField!]
  restoreViewField(id: UUID): ViewField
  restoreViewFields(filter: ViewFieldFilterInput): [ViewField!]
  createViewFilterGroups(data: [ViewFilterGroupCreateInput!], upsert: Boolean): [ViewFilterGroup!]
  createViewFilterGroup(data: ViewFilterGroupCreateInput, upsert: Boolean): ViewFilterGroup
  updateViewFilterGroup(id: UUID, data: ViewFilterGroupUpdateInput): ViewFilterGroup
  deleteViewFilterGroup(id: UUID): ViewFilterGroup
  updateViewFilterGroups(data: ViewFilterGroupUpdateInput, filter: ViewFilterGroupFilterInput): [ViewFilterGroup!]
  deleteViewFilterGroups(filter: ViewFilterGroupFilterInput): [ViewFilterGroup!]
  destroyViewFilterGroup(id: UUID): ViewFilterGroup
  destroyViewFilterGroups(filter: ViewFilterGroupFilterInput): [ViewFilterGroup!]
  restoreViewFilterGroup(id: UUID): ViewFilterGroup
  restoreViewFilterGroups(filter: ViewFilterGroupFilterInput): [ViewFilterGroup!]
  createViewGroups(data: [ViewGroupCreateInput!], upsert: Boolean): [ViewGroup!]
  createViewGroup(data: ViewGroupCreateInput, upsert: Boolean): ViewGroup
  updateViewGroup(id: UUID, data: ViewGroupUpdateInput): ViewGroup
  deleteViewGroup(id: UUID): ViewGroup
  updateViewGroups(data: ViewGroupUpdateInput, filter: ViewGroupFilterInput): [ViewGroup!]
  deleteViewGroups(filter: ViewGroupFilterInput): [ViewGroup!]
  destroyViewGroup(id: UUID): ViewGroup
  destroyViewGroups(filter: ViewGroupFilterInput): [ViewGroup!]
  restoreViewGroup(id: UUID): ViewGroup
  restoreViewGroups(filter: ViewGroupFilterInput): [ViewGroup!]
  createViewFilters(data: [ViewFilterCreateInput!], upsert: Boolean): [ViewFilter!]
  createViewFilter(data: ViewFilterCreateInput, upsert: Boolean): ViewFilter
  updateViewFilter(id: UUID, data: ViewFilterUpdateInput): ViewFilter
  deleteViewFilter(id: UUID): ViewFilter
  updateViewFilters(data: ViewFilterUpdateInput, filter: ViewFilterFilterInput): [ViewFilter!]
  deleteViewFilters(filter: ViewFilterFilterInput): [ViewFilter!]
  destroyViewFilter(id: UUID): ViewFilter
  destroyViewFilters(filter: ViewFilterFilterInput): [ViewFilter!]
  restoreViewFilter(id: UUID): ViewFilter
  restoreViewFilters(filter: ViewFilterFilterInput): [ViewFilter!]
  createViewSorts(data: [ViewSortCreateInput!], upsert: Boolean): [ViewSort!]
  createViewSort(data: ViewSortCreateInput, upsert: Boolean): ViewSort
  updateViewSort(id: UUID, data: ViewSortUpdateInput): ViewSort
  deleteViewSort(id: UUID): ViewSort
  updateViewSorts(data: ViewSortUpdateInput, filter: ViewSortFilterInput): [ViewSort!]
  deleteViewSorts(filter: ViewSortFilterInput): [ViewSort!]
  destroyViewSort(id: UUID): ViewSort
  destroyViewSorts(filter: ViewSortFilterInput): [ViewSort!]
  restoreViewSort(id: UUID): ViewSort
  restoreViewSorts(filter: ViewSortFilterInput): [ViewSort!]
  createViews(data: [ViewCreateInput!], upsert: Boolean): [View!]
  createView(data: ViewCreateInput, upsert: Boolean): View
  updateView(id: UUID, data: ViewUpdateInput): View
  deleteView(id: UUID): View
  updateViews(data: ViewUpdateInput, filter: ViewFilterInput): [View!]
  deleteViews(filter: ViewFilterInput): [View!]
  destroyView(id: UUID): View
  destroyViews(filter: ViewFilterInput): [View!]
  restoreView(id: UUID): View
  restoreViews(filter: ViewFilterInput): [View!]
  createWebhooks(data: [WebhookCreateInput!], upsert: Boolean): [Webhook!]
  createWebhook(data: WebhookCreateInput, upsert: Boolean): Webhook
  updateWebhook(id: UUID, data: WebhookUpdateInput): Webhook
  deleteWebhook(id: UUID): Webhook
  updateWebhooks(data: WebhookUpdateInput, filter: WebhookFilterInput): [Webhook!]
  deleteWebhooks(filter: WebhookFilterInput): [Webhook!]
  destroyWebhook(id: UUID): Webhook
  destroyWebhooks(filter: WebhookFilterInput): [Webhook!]
  restoreWebhook(id: UUID): Webhook
  restoreWebhooks(filter: WebhookFilterInput): [Webhook!]
  createWorkflows(data: [WorkflowCreateInput!], upsert: Boolean): [Workflow!]
  createWorkflow(data: WorkflowCreateInput, upsert: Boolean): Workflow
  updateWorkflow(id: UUID, data: WorkflowUpdateInput): Workflow
  deleteWorkflow(id: UUID): Workflow
  updateWorkflows(data: WorkflowUpdateInput, filter: WorkflowFilterInput): [Workflow!]
  deleteWorkflows(filter: WorkflowFilterInput): [Workflow!]
  destroyWorkflow(id: UUID): Workflow
  destroyWorkflows(filter: WorkflowFilterInput): [Workflow!]
  restoreWorkflow(id: UUID): Workflow
  restoreWorkflows(filter: WorkflowFilterInput): [Workflow!]
  createWorkflowVersions(data: [WorkflowVersionCreateInput!], upsert: Boolean): [WorkflowVersion!]
  createWorkflowVersion(data: WorkflowVersionCreateInput, upsert: Boolean): WorkflowVersion
  updateWorkflowVersion(id: UUID, data: WorkflowVersionUpdateInput): WorkflowVersion
  deleteWorkflowVersion(id: UUID): WorkflowVersion
  updateWorkflowVersions(data: WorkflowVersionUpdateInput, filter: WorkflowVersionFilterInput): [WorkflowVersion!]
  deleteWorkflowVersions(filter: WorkflowVersionFilterInput): [WorkflowVersion!]
  destroyWorkflowVersion(id: UUID): WorkflowVersion
  destroyWorkflowVersions(filter: WorkflowVersionFilterInput): [WorkflowVersion!]
  restoreWorkflowVersion(id: UUID): WorkflowVersion
  restoreWorkflowVersions(filter: WorkflowVersionFilterInput): [WorkflowVersion!]
  createWorkflowRuns(data: [WorkflowRunCreateInput!], upsert: Boolean): [WorkflowRun!]
  createWorkflowRun(data: WorkflowRunCreateInput, upsert: Boolean): WorkflowRun
  updateWorkflowRun(id: UUID, data: WorkflowRunUpdateInput): WorkflowRun
  deleteWorkflowRun(id: UUID): WorkflowRun
  updateWorkflowRuns(data: WorkflowRunUpdateInput, filter: WorkflowRunFilterInput): [WorkflowRun!]
  deleteWorkflowRuns(filter: WorkflowRunFilterInput): [WorkflowRun!]
  destroyWorkflowRun(id: UUID): WorkflowRun
  destroyWorkflowRuns(filter: WorkflowRunFilterInput): [WorkflowRun!]
  restoreWorkflowRun(id: UUID): WorkflowRun
  restoreWorkflowRuns(filter: WorkflowRunFilterInput): [WorkflowRun!]
  createWorkflowAutomatedTriggers(data: [WorkflowAutomatedTriggerCreateInput!], upsert: Boolean): [WorkflowAutomatedTrigger!]
  createWorkflowAutomatedTrigger(data: WorkflowAutomatedTriggerCreateInput, upsert: Boolean): WorkflowAutomatedTrigger
  updateWorkflowAutomatedTrigger(id: UUID, data: WorkflowAutomatedTriggerUpdateInput): WorkflowAutomatedTrigger
  deleteWorkflowAutomatedTrigger(id: UUID): WorkflowAutomatedTrigger
  updateWorkflowAutomatedTriggers(data: WorkflowAutomatedTriggerUpdateInput, filter: WorkflowAutomatedTriggerFilterInput): [WorkflowAutomatedTrigger!]
  deleteWorkflowAutomatedTriggers(filter: WorkflowAutomatedTriggerFilterInput): [WorkflowAutomatedTrigger!]
  destroyWorkflowAutomatedTrigger(id: UUID): WorkflowAutomatedTrigger
  destroyWorkflowAutomatedTriggers(filter: WorkflowAutomatedTriggerFilterInput): [WorkflowAutomatedTrigger!]
  restoreWorkflowAutomatedTrigger(id: UUID): WorkflowAutomatedTrigger
  restoreWorkflowAutomatedTriggers(filter: WorkflowAutomatedTriggerFilterInput): [WorkflowAutomatedTrigger!]
  createWorkspaceMembers(data: [WorkspaceMemberCreateInput!], upsert: Boolean): [WorkspaceMember!]
  createWorkspaceMember(data: WorkspaceMemberCreateInput, upsert: Boolean): WorkspaceMember
  updateWorkspaceMember(id: UUID, data: WorkspaceMemberUpdateInput): WorkspaceMember
  deleteWorkspaceMember(id: UUID): WorkspaceMember
  updateWorkspaceMembers(data: WorkspaceMemberUpdateInput, filter: WorkspaceMemberFilterInput): [WorkspaceMember!]
  deleteWorkspaceMembers(filter: WorkspaceMemberFilterInput): [WorkspaceMember!]
  destroyWorkspaceMember(id: UUID): WorkspaceMember
  destroyWorkspaceMembers(filter: WorkspaceMemberFilterInput): [WorkspaceMember!]
  restoreWorkspaceMember(id: UUID): WorkspaceMember
  restoreWorkspaceMembers(filter: WorkspaceMemberFilterInput): [WorkspaceMember!]
  createNotes(data: [NoteCreateInput!], upsert: Boolean): [Note!]
  createNote(data: NoteCreateInput, upsert: Boolean): Note
  updateNote(id: UUID, data: NoteUpdateInput): Note
  deleteNote(id: UUID): Note
  updateNotes(data: NoteUpdateInput, filter: NoteFilterInput): [Note!]
  deleteNotes(filter: NoteFilterInput): [Note!]
  destroyNote(id: UUID): Note
  destroyNotes(filter: NoteFilterInput): [Note!]
  restoreNote(id: UUID): Note
  restoreNotes(filter: NoteFilterInput): [Note!]
  createTaskTargets(data: [TaskTargetCreateInput!], upsert: Boolean): [TaskTarget!]
  createTaskTarget(data: TaskTargetCreateInput, upsert: Boolean): TaskTarget
  updateTaskTarget(id: UUID, data: TaskTargetUpdateInput): TaskTarget
  deleteTaskTarget(id: UUID): TaskTarget
  updateTaskTargets(data: TaskTargetUpdateInput, filter: TaskTargetFilterInput): [TaskTarget!]
  deleteTaskTargets(filter: TaskTargetFilterInput): [TaskTarget!]
  destroyTaskTarget(id: UUID): TaskTarget
  destroyTaskTargets(filter: TaskTargetFilterInput): [TaskTarget!]
  restoreTaskTarget(id: UUID): TaskTarget
  restoreTaskTargets(filter: TaskTargetFilterInput): [TaskTarget!]
  createMessageThreads(data: [MessageThreadCreateInput!], upsert: Boolean): [MessageThread!]
  createMessageThread(data: MessageThreadCreateInput, upsert: Boolean): MessageThread
  updateMessageThread(id: UUID, data: MessageThreadUpdateInput): MessageThread
  deleteMessageThread(id: UUID): MessageThread
  updateMessageThreads(data: MessageThreadUpdateInput, filter: MessageThreadFilterInput): [MessageThread!]
  deleteMessageThreads(filter: MessageThreadFilterInput): [MessageThread!]
  destroyMessageThread(id: UUID): MessageThread
  destroyMessageThreads(filter: MessageThreadFilterInput): [MessageThread!]
  restoreMessageThread(id: UUID): MessageThread
  restoreMessageThreads(filter: MessageThreadFilterInput): [MessageThread!]
  createMessages(data: [MessageCreateInput!], upsert: Boolean): [Message!]
  createMessage(data: MessageCreateInput, upsert: Boolean): Message
  updateMessage(id: UUID, data: MessageUpdateInput): Message
  deleteMessage(id: UUID): Message
  updateMessages(data: MessageUpdateInput, filter: MessageFilterInput): [Message!]
  deleteMessages(filter: MessageFilterInput): [Message!]
  destroyMessage(id: UUID): Message
  destroyMessages(filter: MessageFilterInput): [Message!]
  restoreMessage(id: UUID): Message
  restoreMessages(filter: MessageFilterInput): [Message!]
  createMessageChannels(data: [MessageChannelCreateInput!], upsert: Boolean): [MessageChannel!]
  createMessageChannel(data: MessageChannelCreateInput, upsert: Boolean): MessageChannel
  updateMessageChannel(id: UUID, data: MessageChannelUpdateInput): MessageChannel
  deleteMessageChannel(id: UUID): MessageChannel
  updateMessageChannels(data: MessageChannelUpdateInput, filter: MessageChannelFilterInput): [MessageChannel!]
  deleteMessageChannels(filter: MessageChannelFilterInput): [MessageChannel!]
  destroyMessageChannel(id: UUID): MessageChannel
  destroyMessageChannels(filter: MessageChannelFilterInput): [MessageChannel!]
  restoreMessageChannel(id: UUID): MessageChannel
  restoreMessageChannels(filter: MessageChannelFilterInput): [MessageChannel!]
  createMessageParticipants(data: [MessageParticipantCreateInput!], upsert: Boolean): [MessageParticipant!]
  createMessageParticipant(data: MessageParticipantCreateInput, upsert: Boolean): MessageParticipant
  updateMessageParticipant(id: UUID, data: MessageParticipantUpdateInput): MessageParticipant
  deleteMessageParticipant(id: UUID): MessageParticipant
  updateMessageParticipants(data: MessageParticipantUpdateInput, filter: MessageParticipantFilterInput): [MessageParticipant!]
  deleteMessageParticipants(filter: MessageParticipantFilterInput): [MessageParticipant!]
  destroyMessageParticipant(id: UUID): MessageParticipant
  destroyMessageParticipants(filter: MessageParticipantFilterInput): [MessageParticipant!]
  restoreMessageParticipant(id: UUID): MessageParticipant
  restoreMessageParticipants(filter: MessageParticipantFilterInput): [MessageParticipant!]
  createMessageFolders(data: [MessageFolderCreateInput!], upsert: Boolean): [MessageFolder!]
  createMessageFolder(data: MessageFolderCreateInput, upsert: Boolean): MessageFolder
  updateMessageFolder(id: UUID, data: MessageFolderUpdateInput): MessageFolder
  deleteMessageFolder(id: UUID): MessageFolder
  updateMessageFolders(data: MessageFolderUpdateInput, filter: MessageFolderFilterInput): [MessageFolder!]
  deleteMessageFolders(filter: MessageFolderFilterInput): [MessageFolder!]
  destroyMessageFolder(id: UUID): MessageFolder
  destroyMessageFolders(filter: MessageFolderFilterInput): [MessageFolder!]
  restoreMessageFolder(id: UUID): MessageFolder
  restoreMessageFolders(filter: MessageFolderFilterInput): [MessageFolder!]
  createMessageChannelMessageAssociations(data: [MessageChannelMessageAssociationCreateInput!], upsert: Boolean): [MessageChannelMessageAssociation!]
  createMessageChannelMessageAssociation(data: MessageChannelMessageAssociationCreateInput, upsert: Boolean): MessageChannelMessageAssociation
  updateMessageChannelMessageAssociation(id: UUID, data: MessageChannelMessageAssociationUpdateInput): MessageChannelMessageAssociation
  deleteMessageChannelMessageAssociation(id: UUID): MessageChannelMessageAssociation
  updateMessageChannelMessageAssociations(data: MessageChannelMessageAssociationUpdateInput, filter: MessageChannelMessageAssociationFilterInput): [MessageChannelMessageAssociation!]
  deleteMessageChannelMessageAssociations(filter: MessageChannelMessageAssociationFilterInput): [MessageChannelMessageAssociation!]
  destroyMessageChannelMessageAssociation(id: UUID): MessageChannelMessageAssociation
  destroyMessageChannelMessageAssociations(filter: MessageChannelMessageAssociationFilterInput): [MessageChannelMessageAssociation!]
  restoreMessageChannelMessageAssociation(id: UUID): MessageChannelMessageAssociation
  restoreMessageChannelMessageAssociations(filter: MessageChannelMessageAssociationFilterInput): [MessageChannelMessageAssociation!]
  createNoteTargets(data: [NoteTargetCreateInput!], upsert: Boolean): [NoteTarget!]
  createNoteTarget(data: NoteTargetCreateInput, upsert: Boolean): NoteTarget
  updateNoteTarget(id: UUID, data: NoteTargetUpdateInput): NoteTarget
  deleteNoteTarget(id: UUID): NoteTarget
  updateNoteTargets(data: NoteTargetUpdateInput, filter: NoteTargetFilterInput): [NoteTarget!]
  deleteNoteTargets(filter: NoteTargetFilterInput): [NoteTarget!]
  destroyNoteTarget(id: UUID): NoteTarget
  destroyNoteTargets(filter: NoteTargetFilterInput): [NoteTarget!]
  restoreNoteTarget(id: UUID): NoteTarget
  restoreNoteTargets(filter: NoteTargetFilterInput): [NoteTarget!]
  createOpportunities(data: [OpportunityCreateInput!], upsert: Boolean): [Opportunity!]
  createOpportunity(data: OpportunityCreateInput, upsert: Boolean): Opportunity
  updateOpportunity(id: UUID, data: OpportunityUpdateInput): Opportunity
  deleteOpportunity(id: UUID): Opportunity
  updateOpportunities(data: OpportunityUpdateInput, filter: OpportunityFilterInput): [Opportunity!]
  deleteOpportunities(filter: OpportunityFilterInput): [Opportunity!]
  destroyOpportunity(id: UUID): Opportunity
  destroyOpportunities(filter: OpportunityFilterInput): [Opportunity!]
  restoreOpportunity(id: UUID): Opportunity
  restoreOpportunities(filter: OpportunityFilterInput): [Opportunity!]
  createPeople(data: [PersonCreateInput!], upsert: Boolean): [Person!]
  createPerson(data: PersonCreateInput, upsert: Boolean): Person
  updatePerson(id: UUID, data: PersonUpdateInput): Person
  deletePerson(id: UUID): Person
  updatePeople(data: PersonUpdateInput, filter: PersonFilterInput): [Person!]
  deletePeople(filter: PersonFilterInput): [Person!]
  destroyPerson(id: UUID): Person
  destroyPeople(filter: PersonFilterInput): [Person!]
  restorePerson(id: UUID): Person
  restorePeople(filter: PersonFilterInput): [Person!]
  createTasks(data: [TaskCreateInput!], upsert: Boolean): [Task!]
  createTask(data: TaskCreateInput, upsert: Boolean): Task
  updateTask(id: UUID, data: TaskUpdateInput): Task
  deleteTask(id: UUID): Task
  updateTasks(data: TaskUpdateInput, filter: TaskFilterInput): [Task!]
  deleteTasks(filter: TaskFilterInput): [Task!]
  destroyTask(id: UUID): Task
  destroyTasks(filter: TaskFilterInput): [Task!]
  restoreTask(id: UUID): Task
  restoreTasks(filter: TaskFilterInput): [Task!]
  createRockets(data: [RocketCreateInput!], upsert: Boolean): [Rocket!]
  createRocket(data: RocketCreateInput, upsert: Boolean): Rocket
  updateRocket(id: UUID, data: RocketUpdateInput): Rocket
  deleteRocket(id: UUID): Rocket
  updateRockets(data: RocketUpdateInput, filter: RocketFilterInput): [Rocket!]
  deleteRockets(filter: RocketFilterInput): [Rocket!]
  destroyRocket(id: UUID): Rocket
  destroyRockets(filter: RocketFilterInput): [Rocket!]
  restoreRocket(id: UUID): Rocket
  restoreRockets(filter: RocketFilterInput): [Rocket!]
  createSurveyResults(data: [SurveyResultCreateInput!], upsert: Boolean): [SurveyResult!]
  createSurveyResult(data: SurveyResultCreateInput, upsert: Boolean): SurveyResult
  updateSurveyResult(id: UUID, data: SurveyResultUpdateInput): SurveyResult
  deleteSurveyResult(id: UUID): SurveyResult
  updateSurveyResults(data: SurveyResultUpdateInput, filter: SurveyResultFilterInput): [SurveyResult!]
  deleteSurveyResults(filter: SurveyResultFilterInput): [SurveyResult!]
  destroySurveyResult(id: UUID): SurveyResult
  destroySurveyResults(filter: SurveyResultFilterInput): [SurveyResult!]
  restoreSurveyResult(id: UUID): SurveyResult
  restoreSurveyResults(filter: SurveyResultFilterInput): [SurveyResult!]
}